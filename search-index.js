antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1-1",[0,53.024]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["title/1-2",[1,43.658,2,21.493]],["name/1-2",[]],["text/1-2",[]],["component/1-2",[]],["title/1-3",[3,38.98,4,30.849]],["name/1-3",[]],["text/1-3",[]],["component/1-3",[]],["title/1-4",[5,53.024]],["name/1-4",[]],["text/1-4",[]],["component/1-4",[]],["title/1-5",[6,33.918,7,33.918]],["name/1-5",[]],["text/1-5",[]],["component/1-5",[]],["title/1-6",[8,30.817,9,26.816,10,25.486]],["name/1-6",[]],["text/1-6",[]],["component/1-6",[]],["title/1-7",[11,30.817,12,26.816,13,28.504]],["name/1-7",[]],["text/1-7",[]],["component/1-7",[]],["title/1",[14,36.053,15,32.236]],["name/1",[15,0.192]],["text/1",[2,0.597,3,0.942,4,1.984,5,1.851,6,0.563,7,0.819,8,1.083,9,1.177,10,1.627,11,0.647,12,1.061,13,0.871,14,0.308,15,0.276,16,0.19,17,2.44,18,0.745,19,0.658,20,0.65,21,0.647,22,0.492,23,0.333,24,0.169,25,0.19,26,0.647,27,0.647,28,0.647,29,0.19,30,0.373,31,0.169,32,0.373,33,0.19,34,0.373,35,0.871,36,0.157,37,0.19,38,0.19,39,0.551,40,0.169,41,0.157,42,0.264,43,0.19,44,0.169,45,0.19,46,0.19,47,0.19,48,1.397,49,0.169,50,0.598,51,0.169,52,0.19,53,0.19,54,0.157,55,0.19,56,0.308,57,0.147,58,0.129,59,0.373,60,0.19,61,0.169,62,0.19,63,0.19,64,0.492,65,0.373,66,0.19,67,0.19,68,1.128,69,0.169,70,0.333,71,0.492,72,0.19,73,0.169,74,0.19,75,0.169,76,0.333,77,0.333,78,0.169,79,0.169,80,0.169,81,0.19,82,0.157,83,0.333,84,0.308,85,0.169,86,0.333,87,0.308,88,0.19,89,0.19,90,0.19,91,1.083,92,0.19,93,0.19,94,0.19,95,0.647,96,0.892,97,0.373,98,3.919,99,1.055,100,1.661,101,2.455,102,0.333,103,0.373,104,0.551,105,0.551,106,0.551,107,0.551,108,0.551,109,0.373,110,0.373,111,0.373,112,0.169,113,0.373,114,0.551,115,0.19,116,0.373,117,0.551,118,0.373,119,0.373,120,1.732,121,0.373,122,0.892,123,0.373,124,0.333,125,0.333,126,0.647,127,0.308,128,0.19,129,0.19,130,0.19,131,0.373,132,0.169,133,0.19,134,0.373,135,0.19,136,0.455,137,0.308,138,0.333,139,0.551,140,0.724,141,0.373,142,0.19,143,0.19,144,0.19,145,0.19,146,0.169,147,0.19,148,0.373,149,0.308,150,0.19,151,0.647,152,0.19,153,0.373,154,0.373,155,0.169,156,0.373,157,0.169,158,0.169,159,0.169,160,0.373,161,1.22,162,0.333,163,0.333,164,0.19,165,0.19,166,0.19,167,0.551,168,0.19,169,0.169,170,0.333,171,0.492,172,0.157,173,0.19,174,0.724,175,0.308,176,0.333,177,0.308,178,0.308,179,0.551,180,0.333,181,0.598,182,1.609,183,0.333,184,0.169,185,0.551,186,0.308,187,0.892,188,0.724,189,0.724,190,0.724,191,0.19,192,0.19,193,0.19,194,0.373,195,0.551,196,0.19,197,0.19,198,1.055,199,1.366,200,1.22,201,0.492,202,0.551,203,0.19,204,0.19,205,0.492,206,0.333,207,1.128,208,0.19,209,0.333,210,0.551,211,0.19,212,0.492,213,0.169,214,0.19,215,0.19,216,0.19,217,0.169,218,0.373,219,0.19,220,0.796,221,0.333,222,0.373,223,0.169,224,0.333,225,0.19,226,0.157,227,0.942,228,0.169,229,0.333,230,0.373,231,0.373,232,0.169,233,0.455,234,0.134,235,0.492,236,0.492,237,0.19,238,0.308,239,0.169,240,0.169,241,0.373,242,0.333,243,1.661,244,0.892,245,0.892,246,1.055,247,1.213,248,1.213,249,0.169,250,0.19,251,0.19,252,0.19,253,0.19,254,0.892,255,0.169,256,0.169,257,0.19,258,0.19,259,0.19,260,0.157,261,0.373,262,0.169,263,0.169,264,0.19,265,0.169,266,0.19,267,0.19,268,0.647,269,0.373,270,0.19,271,0.19,272,0.169,273,0.333,274,0.19,275,0.19,276,0.373,277,0.19,278,0.455,279,0.455,280,0.19,281,0.169,282,0.19,283,0.373,284,0.19,285,0.19,286,0.19,287,0.19,288,0.19,289,0.169,290,0.157,291,0.157,292,0.29,293,0.19,294,0.19,295,0.19,296,0.19,297,0.19,298,0.157,299,1.055,300,0.724,301,0.19,302,0.19,303,0.19,304,0.19,305,0.19,306,0.19,307,0.19,308,0.19,309,0.19,310,0.19,311,0.157,312,0.373,313,0.373,314,0.373,315,0.373,316,0.19,317,0.19,318,0.373,319,0.147,320,0.169,321,0.19,322,0.373,323,0.19,324,0.19,325,0.19,326,0.19,327,0.19,328,0.724,329,0.19,330,0.14,331,0.14,332,0.14,333,0.14,334,0.14,335,0.14,336,0.14,337,0.14,338,0.14,339,0.14,340,0.14,341,0.14]],["component/1",[17,0.133]],["title/2",[]],["name/2",[342,0.232]],["text/2",[]],["component/2",[17,0.133]],["title/3-1",[249,21.721,343,24.327,344,24.327,345,24.327,346,24.327]],["name/3-1",[]],["text/3-1",[]],["component/3-1",[]],["title/3",[292,46.138]],["name/3",[292,0.202]],["text/3",[18,3.862,330,4.036,331,4.036,332,4.036,333,4.036,334,4.036,335,4.036,336,4.036,337,4.036,338,4.036,339,4.036,340,4.036,341,4.036]],["component/3",[17,0.133]],["title/4-1",[347,59.387]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["title/4-2",[82,49.043]],["name/4-2",[]],["text/4-2",[]],["component/4-2",[]],["title/4-3",[348,53.024]],["name/4-3",[]],["text/4-3",[]],["component/4-3",[]],["title/4",[17,14.591,18,20.166,19,21.073,20,17.593]],["name/4",[349,0.232]],["text/4",[14,0.745,15,0.666,17,1.507,18,1.663,19,2.563,20,2.14,21,0.805,23,0.805,24,0.805,27,0.805,28,0.805,35,1.386,36,0.745,41,0.745,42,0.637,48,1.006,49,0.805,50,0.745,54,0.745,58,0.613,61,0.805,68,0.745,69,1.498,70,1.498,71,0.805,75,0.805,76,0.805,77,0.805,78,0.805,79,1.498,80,0.805,84,0.745,137,0.745,138,0.805,146,1.498,149,1.386,155,0.805,157,0.805,182,0.805,234,0.637,235,0.805,268,0.805,292,0.701,330,0.666,331,0.666,332,0.666,333,1.738,334,1.239,335,1.239,336,0.666,337,0.666,338,1.239,339,1.239,340,1.239,341,1.239,348,0.805,350,0.805,351,0.805,352,1.678,353,0.745,354,1.678,355,0.902,356,0.902,357,0.902,358,0.902,359,0.902,360,0.902,361,0.902,362,0.902,363,0.805,364,0.745,365,0.805,366,0.745,367,0.902,368,0.902,369,0.805,370,0.902,371,0.902,372,0.902,373,0.902,374,0.902,375,1.498,376,0.902,377,0.902,378,0.902,379,0.514,380,0.902,381,0.805,382,0.902,383,0.902,384,0.902,385,0.701,386,0.541,387,1.678,388,0.902,389,0.805,390,1.678,391,0.805,392,0.902,393,0.902,394,1.678,395,0.805,396,0.902,397,0.902,398,0.902,399,0.902,400,0.902,401,0.902,402,0.805,403,0.745,404,0.902,405,0.902,406,1.678,407,0.805,408,0.902,409,0.805,410,0.902,411,0.902,412,0.902,413,2.102,414,2.102,415,0.805,416,0.902,417,0.805,418,0.613,419,0.902,420,0.902,421,0.902,422,0.902,423,0.805,424,0.902,425,0.902,426,0.902,427,0.902]],["component/4",[17,0.133]],["title/5-1",[0,53.024]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5-2",[428,49.043]],["name/5-2",[]],["text/5-2",[]],["component/5-2",[]],["title/5-3",[2,29.237]],["name/5-3",[]],["text/5-3",[]],["component/5-3",[]],["title/5-4",[7,33.918,17,22.321]],["name/5-4",[]],["text/5-4",[]],["component/5-4",[]],["title/5-5",[428,49.043]],["name/5-5",[]],["text/5-5",[]],["component/5-5",[]],["title/5-6",[429,18.176]],["name/5-6",[]],["text/5-6",[]],["component/5-6",[]],["title/5-7",[430,18.176]],["name/5-7",[]],["text/5-7",[]],["component/5-7",[]],["title/5-8",[431,18.371]],["name/5-8",[]],["text/5-8",[]],["component/5-8",[]],["title/5-9",[220,53.024]],["name/5-9",[]],["text/5-9",[]],["component/5-9",[]],["title/5-10",[429,18.176]],["name/5-10",[]],["text/5-10",[]],["component/5-10",[]],["title/5-11",[430,18.176]],["name/5-11",[]],["text/5-11",[]],["component/5-11",[]],["title/5-12",[431,18.371]],["name/5-12",[]],["text/5-12",[]],["component/5-12",[]],["title/5-13",[432,59.387]],["name/5-13",[]],["text/5-13",[]],["component/5-13",[]],["title/5-14",[429,18.176]],["name/5-14",[]],["text/5-14",[]],["component/5-14",[]],["title/5-15",[430,18.176]],["name/5-15",[]],["text/5-15",[]],["component/5-15",[]],["title/5-16",[431,18.371]],["name/5-16",[]],["text/5-16",[]],["component/5-16",[]],["title/5-17",[433,59.387]],["name/5-17",[]],["text/5-17",[]],["component/5-17",[]],["title/5-18",[429,18.176]],["name/5-18",[]],["text/5-18",[]],["component/5-18",[]],["title/5-19",[430,18.176]],["name/5-19",[]],["text/5-19",[]],["component/5-19",[]],["title/5-20",[431,18.371]],["name/5-20",[]],["text/5-20",[]],["component/5-20",[]],["title/5-21",[434,59.387]],["name/5-21",[]],["text/5-21",[]],["component/5-21",[]],["title/5-22",[429,18.176]],["name/5-22",[]],["text/5-22",[]],["component/5-22",[]],["title/5-23",[430,18.176]],["name/5-23",[]],["text/5-23",[]],["component/5-23",[]],["title/5-24",[431,18.371]],["name/5-24",[]],["text/5-24",[]],["component/5-24",[]],["title/5-25",[435,59.387]],["name/5-25",[]],["text/5-25",[]],["component/5-25",[]],["title/5-26",[429,18.176]],["name/5-26",[]],["text/5-26",[]],["component/5-26",[]],["title/5-27",[430,18.176]],["name/5-27",[]],["text/5-27",[]],["component/5-27",[]],["title/5-28",[431,18.371]],["name/5-28",[]],["text/5-28",[]],["component/5-28",[]],["title/5-29",[436,59.387]],["name/5-29",[]],["text/5-29",[]],["component/5-29",[]],["title/5-30",[429,18.176]],["name/5-30",[]],["text/5-30",[]],["component/5-30",[]],["title/5-31",[430,18.176]],["name/5-31",[]],["text/5-31",[]],["component/5-31",[]],["title/5-32",[431,18.371]],["name/5-32",[]],["text/5-32",[]],["component/5-32",[]],["title/5-33",[437,59.387]],["name/5-33",[]],["text/5-33",[]],["component/5-33",[]],["title/5-34",[429,18.176]],["name/5-34",[]],["text/5-34",[]],["component/5-34",[]],["title/5-35",[430,18.176]],["name/5-35",[]],["text/5-35",[]],["component/5-35",[]],["title/5-36",[431,18.371]],["name/5-36",[]],["text/5-36",[]],["component/5-36",[]],["title/5-37",[438,59.387]],["name/5-37",[]],["text/5-37",[]],["component/5-37",[]],["title/5-38",[429,18.176]],["name/5-38",[]],["text/5-38",[]],["component/5-38",[]],["title/5-39",[430,18.176]],["name/5-39",[]],["text/5-39",[]],["component/5-39",[]],["title/5-40",[431,18.371]],["name/5-40",[]],["text/5-40",[]],["component/5-40",[]],["title/5-41",[439,59.387]],["name/5-41",[]],["text/5-41",[]],["component/5-41",[]],["title/5-42",[429,18.176]],["name/5-42",[]],["text/5-42",[]],["component/5-42",[]],["title/5-43",[430,18.176]],["name/5-43",[]],["text/5-43",[]],["component/5-43",[]],["title/5-44",[431,18.371]],["name/5-44",[]],["text/5-44",[]],["component/5-44",[]],["title/5-45",[17,22.321,440,38.98]],["name/5-45",[]],["text/5-45",[]],["component/5-45",[]],["title/5-46",[441,59.387]],["name/5-46",[]],["text/5-46",[]],["component/5-46",[]],["title/5-47",[429,18.176]],["name/5-47",[]],["text/5-47",[]],["component/5-47",[]],["title/5-48",[430,18.176]],["name/5-48",[]],["text/5-48",[]],["component/5-48",[]],["title/5-49",[431,18.371]],["name/5-49",[]],["text/5-49",[]],["component/5-49",[]],["title/5-50",[442,59.387]],["name/5-50",[]],["text/5-50",[]],["component/5-50",[]],["title/5-51",[429,18.176]],["name/5-51",[]],["text/5-51",[]],["component/5-51",[]],["title/5-52",[430,18.176]],["name/5-52",[]],["text/5-52",[]],["component/5-52",[]],["title/5-53",[431,18.371]],["name/5-53",[]],["text/5-53",[]],["component/5-53",[]],["title/5-54",[17,22.321,443,36.053]],["name/5-54",[]],["text/5-54",[]],["component/5-54",[]],["title/5-55",[443,49.043]],["name/5-55",[]],["text/5-55",[]],["component/5-55",[]],["title/5-56",[429,18.176]],["name/5-56",[]],["text/5-56",[]],["component/5-56",[]],["title/5-57",[430,18.176]],["name/5-57",[]],["text/5-57",[]],["component/5-57",[]],["title/5-58",[431,18.371]],["name/5-58",[]],["text/5-58",[]],["component/5-58",[]],["title/5-59",[6,33.918,17,22.321]],["name/5-59",[]],["text/5-59",[]],["component/5-59",[]],["title/5-60",[444,59.387]],["name/5-60",[]],["text/5-60",[]],["component/5-60",[]],["title/5-61",[429,18.176]],["name/5-61",[]],["text/5-61",[]],["component/5-61",[]],["title/5-62",[430,18.176]],["name/5-62",[]],["text/5-62",[]],["component/5-62",[]],["title/5-63",[431,18.371]],["name/5-63",[]],["text/5-63",[]],["component/5-63",[]],["title/5-64",[2,29.237]],["name/5-64",[]],["text/5-64",[]],["component/5-64",[]],["title/5-65",[445,59.387]],["name/5-65",[]],["text/5-65",[]],["component/5-65",[]],["title/5-66",[429,18.176]],["name/5-66",[]],["text/5-66",[]],["component/5-66",[]],["title/5-67",[430,18.176]],["name/5-67",[]],["text/5-67",[]],["component/5-67",[]],["title/5-68",[431,18.371]],["name/5-68",[]],["text/5-68",[]],["component/5-68",[]],["title/5-69",[320,53.024]],["name/5-69",[]],["text/5-69",[]],["component/5-69",[]],["title/5-70",[429,18.176]],["name/5-70",[]],["text/5-70",[]],["component/5-70",[]],["title/5-71",[430,18.176]],["name/5-71",[]],["text/5-71",[]],["component/5-71",[]],["title/5-72",[431,18.371]],["name/5-72",[]],["text/5-72",[]],["component/5-72",[]],["title/5-73",[446,59.387]],["name/5-73",[]],["text/5-73",[]],["component/5-73",[]],["title/5-74",[429,18.176]],["name/5-74",[]],["text/5-74",[]],["component/5-74",[]],["title/5-75",[430,18.176]],["name/5-75",[]],["text/5-75",[]],["component/5-75",[]],["title/5-76",[431,18.371]],["name/5-76",[]],["text/5-76",[]],["component/5-76",[]],["title/5-77",[447,59.387]],["name/5-77",[]],["text/5-77",[]],["component/5-77",[]],["title/5-78",[429,18.176]],["name/5-78",[]],["text/5-78",[]],["component/5-78",[]],["title/5-79",[430,18.176]],["name/5-79",[]],["text/5-79",[]],["component/5-79",[]],["title/5-80",[431,18.371]],["name/5-80",[]],["text/5-80",[]],["component/5-80",[]],["title/5-81",[2,29.237]],["name/5-81",[]],["text/5-81",[]],["component/5-81",[]],["title/5-82",[448,59.387]],["name/5-82",[]],["text/5-82",[]],["component/5-82",[]],["title/5-83",[429,18.176]],["name/5-83",[]],["text/5-83",[]],["component/5-83",[]],["title/5-84",[430,18.176]],["name/5-84",[]],["text/5-84",[]],["component/5-84",[]],["title/5-85",[431,18.371]],["name/5-85",[]],["text/5-85",[]],["component/5-85",[]],["title/5-86",[449,59.387]],["name/5-86",[]],["text/5-86",[]],["component/5-86",[]],["title/5-87",[429,18.176]],["name/5-87",[]],["text/5-87",[]],["component/5-87",[]],["title/5-88",[430,18.176]],["name/5-88",[]],["text/5-88",[]],["component/5-88",[]],["title/5-89",[431,18.371]],["name/5-89",[]],["text/5-89",[]],["component/5-89",[]],["title/5-90",[450,59.387]],["name/5-90",[]],["text/5-90",[]],["component/5-90",[]],["title/5-91",[429,18.176]],["name/5-91",[]],["text/5-91",[]],["component/5-91",[]],["title/5-92",[430,18.176]],["name/5-92",[]],["text/5-92",[]],["component/5-92",[]],["title/5-93",[431,18.371]],["name/5-93",[]],["text/5-93",[]],["component/5-93",[]],["title/5-94",[451,59.387]],["name/5-94",[]],["text/5-94",[]],["component/5-94",[]],["title/5-95",[429,18.176]],["name/5-95",[]],["text/5-95",[]],["component/5-95",[]],["title/5-96",[430,18.176]],["name/5-96",[]],["text/5-96",[]],["component/5-96",[]],["title/5-97",[431,18.371]],["name/5-97",[]],["text/5-97",[]],["component/5-97",[]],["title/5-98",[452,59.387]],["name/5-98",[]],["text/5-98",[]],["component/5-98",[]],["title/5-99",[429,18.176]],["name/5-99",[]],["text/5-99",[]],["component/5-99",[]],["title/5-100",[430,18.176]],["name/5-100",[]],["text/5-100",[]],["component/5-100",[]],["title/5-101",[431,18.371]],["name/5-101",[]],["text/5-101",[]],["component/5-101",[]],["title/5-102",[453,59.387]],["name/5-102",[]],["text/5-102",[]],["component/5-102",[]],["title/5-103",[429,18.176]],["name/5-103",[]],["text/5-103",[]],["component/5-103",[]],["title/5-104",[430,18.176]],["name/5-104",[]],["text/5-104",[]],["component/5-104",[]],["title/5-105",[431,18.371]],["name/5-105",[]],["text/5-105",[]],["component/5-105",[]],["title/5-106",[454,59.387]],["name/5-106",[]],["text/5-106",[]],["component/5-106",[]],["title/5-107",[429,18.176]],["name/5-107",[]],["text/5-107",[]],["component/5-107",[]],["title/5-108",[430,18.176]],["name/5-108",[]],["text/5-108",[]],["component/5-108",[]],["title/5-109",[431,18.371]],["name/5-109",[]],["text/5-109",[]],["component/5-109",[]],["title/5-110",[227,53.024]],["name/5-110",[]],["text/5-110",[]],["component/5-110",[]],["title/5-111",[429,18.176]],["name/5-111",[]],["text/5-111",[]],["component/5-111",[]],["title/5-112",[430,18.176]],["name/5-112",[]],["text/5-112",[]],["component/5-112",[]],["title/5-113",[431,18.371]],["name/5-113",[]],["text/5-113",[]],["component/5-113",[]],["title/5-114",[455,59.387]],["name/5-114",[]],["text/5-114",[]],["component/5-114",[]],["title/5-115",[429,18.176]],["name/5-115",[]],["text/5-115",[]],["component/5-115",[]],["title/5-116",[430,18.176]],["name/5-116",[]],["text/5-116",[]],["component/5-116",[]],["title/5-117",[431,18.371]],["name/5-117",[]],["text/5-117",[]],["component/5-117",[]],["title/5-118",[456,59.387]],["name/5-118",[]],["text/5-118",[]],["component/5-118",[]],["title/5-119",[429,18.176]],["name/5-119",[]],["text/5-119",[]],["component/5-119",[]],["title/5-120",[430,18.176]],["name/5-120",[]],["text/5-120",[]],["component/5-120",[]],["title/5-121",[431,18.371]],["name/5-121",[]],["text/5-121",[]],["component/5-121",[]],["title/5-122",[457,59.387]],["name/5-122",[]],["text/5-122",[]],["component/5-122",[]],["title/5-123",[429,18.176]],["name/5-123",[]],["text/5-123",[]],["component/5-123",[]],["title/5-124",[430,18.176]],["name/5-124",[]],["text/5-124",[]],["component/5-124",[]],["title/5-125",[431,18.371]],["name/5-125",[]],["text/5-125",[]],["component/5-125",[]],["title/5-126",[458,59.387]],["name/5-126",[]],["text/5-126",[]],["component/5-126",[]],["title/5-127",[429,18.176]],["name/5-127",[]],["text/5-127",[]],["component/5-127",[]],["title/5-128",[430,18.176]],["name/5-128",[]],["text/5-128",[]],["component/5-128",[]],["title/5-129",[431,18.371]],["name/5-129",[]],["text/5-129",[]],["component/5-129",[]],["title/5-130",[9,33.918,17,22.321]],["name/5-130",[]],["text/5-130",[]],["component/5-130",[]],["title/5-131",[9,46.138]],["name/5-131",[]],["text/5-131",[]],["component/5-131",[]],["title/5-132",[429,18.176]],["name/5-132",[]],["text/5-132",[]],["component/5-132",[]],["title/5-133",[430,18.176]],["name/5-133",[]],["text/5-133",[]],["component/5-133",[]],["title/5-134",[431,18.371]],["name/5-134",[]],["text/5-134",[]],["component/5-134",[]],["title/5-135",[459,59.387]],["name/5-135",[]],["text/5-135",[]],["component/5-135",[]],["title/5-136",[429,18.176]],["name/5-136",[]],["text/5-136",[]],["component/5-136",[]],["title/5-137",[430,18.176]],["name/5-137",[]],["text/5-137",[]],["component/5-137",[]],["title/5-138",[431,18.371]],["name/5-138",[]],["text/5-138",[]],["component/5-138",[]],["title/5-139",[460,59.387]],["name/5-139",[]],["text/5-139",[]],["component/5-139",[]],["title/5-140",[429,18.176]],["name/5-140",[]],["text/5-140",[]],["component/5-140",[]],["title/5-141",[430,18.176]],["name/5-141",[]],["text/5-141",[]],["component/5-141",[]],["title/5-142",[431,18.371]],["name/5-142",[]],["text/5-142",[]],["component/5-142",[]],["title/5-143",[461,59.387]],["name/5-143",[]],["text/5-143",[]],["component/5-143",[]],["title/5-144",[429,18.176]],["name/5-144",[]],["text/5-144",[]],["component/5-144",[]],["title/5-145",[430,18.176]],["name/5-145",[]],["text/5-145",[]],["component/5-145",[]],["title/5-146",[431,18.371]],["name/5-146",[]],["text/5-146",[]],["component/5-146",[]],["title/5-147",[462,59.387]],["name/5-147",[]],["text/5-147",[]],["component/5-147",[]],["title/5-148",[429,18.176]],["name/5-148",[]],["text/5-148",[]],["component/5-148",[]],["title/5-149",[430,18.176]],["name/5-149",[]],["text/5-149",[]],["component/5-149",[]],["title/5-150",[431,18.371]],["name/5-150",[]],["text/5-150",[]],["component/5-150",[]],["title/5-151",[463,59.387]],["name/5-151",[]],["text/5-151",[]],["component/5-151",[]],["title/5-152",[429,18.176]],["name/5-152",[]],["text/5-152",[]],["component/5-152",[]],["title/5-153",[430,18.176]],["name/5-153",[]],["text/5-153",[]],["component/5-153",[]],["title/5-154",[431,18.371]],["name/5-154",[]],["text/5-154",[]],["component/5-154",[]],["title/5-155",[464,59.387]],["name/5-155",[]],["text/5-155",[]],["component/5-155",[]],["title/5-156",[429,18.176]],["name/5-156",[]],["text/5-156",[]],["component/5-156",[]],["title/5-157",[430,18.176]],["name/5-157",[]],["text/5-157",[]],["component/5-157",[]],["title/5-158",[431,18.371]],["name/5-158",[]],["text/5-158",[]],["component/5-158",[]],["title/5-159",[465,59.387]],["name/5-159",[]],["text/5-159",[]],["component/5-159",[]],["title/5-160",[429,18.176]],["name/5-160",[]],["text/5-160",[]],["component/5-160",[]],["title/5-161",[430,18.176]],["name/5-161",[]],["text/5-161",[]],["component/5-161",[]],["title/5-162",[431,18.371]],["name/5-162",[]],["text/5-162",[]],["component/5-162",[]],["title/5-163",[466,59.387]],["name/5-163",[]],["text/5-163",[]],["component/5-163",[]],["title/5-164",[429,18.176]],["name/5-164",[]],["text/5-164",[]],["component/5-164",[]],["title/5-165",[430,18.176]],["name/5-165",[]],["text/5-165",[]],["component/5-165",[]],["title/5-166",[431,18.371]],["name/5-166",[]],["text/5-166",[]],["component/5-166",[]],["title/5-167",[467,59.387]],["name/5-167",[]],["text/5-167",[]],["component/5-167",[]],["title/5-168",[429,18.176]],["name/5-168",[]],["text/5-168",[]],["component/5-168",[]],["title/5-169",[430,18.176]],["name/5-169",[]],["text/5-169",[]],["component/5-169",[]],["title/5-170",[431,18.371]],["name/5-170",[]],["text/5-170",[]],["component/5-170",[]],["title/5-171",[468,59.387]],["name/5-171",[]],["text/5-171",[]],["component/5-171",[]],["title/5-172",[429,18.176]],["name/5-172",[]],["text/5-172",[]],["component/5-172",[]],["title/5-173",[430,18.176]],["name/5-173",[]],["text/5-173",[]],["component/5-173",[]],["title/5-174",[431,18.371]],["name/5-174",[]],["text/5-174",[]],["component/5-174",[]],["title/5-175",[17,22.321,469,38.98]],["name/5-175",[]],["text/5-175",[]],["component/5-175",[]],["title/5-176",[429,18.176]],["name/5-176",[]],["text/5-176",[]],["component/5-176",[]],["title/5-177",[430,18.176]],["name/5-177",[]],["text/5-177",[]],["component/5-177",[]],["title/5-178",[431,18.371]],["name/5-178",[]],["text/5-178",[]],["component/5-178",[]],["title/5-179",[470,33.918,471,33.918]],["name/5-179",[]],["text/5-179",[]],["component/5-179",[]],["title/5-180",[319,33.918,471,33.918]],["name/5-180",[]],["text/5-180",[]],["component/5-180",[]],["title/5-181",[431,18.371]],["name/5-181",[]],["text/5-181",[]],["component/5-181",[]],["title/5-182",[472,53.024]],["name/5-182",[]],["text/5-182",[]],["component/5-182",[]],["title/5-183",[429,18.176]],["name/5-183",[]],["text/5-183",[]],["component/5-183",[]],["title/5-184",[430,18.176]],["name/5-184",[]],["text/5-184",[]],["component/5-184",[]],["title/5-185",[2,29.237]],["name/5-185",[]],["text/5-185",[]],["component/5-185",[]],["title/5-186",[379,33.828]],["name/5-186",[]],["text/5-186",[]],["component/5-186",[]],["title/5-187",[431,18.371]],["name/5-187",[]],["text/5-187",[]],["component/5-187",[]],["title/5-188",[473,53.024]],["name/5-188",[]],["text/5-188",[]],["component/5-188",[]],["title/5-189",[429,18.176]],["name/5-189",[]],["text/5-189",[]],["component/5-189",[]],["title/5-190",[430,18.176]],["name/5-190",[]],["text/5-190",[]],["component/5-190",[]],["title/5-191",[2,29.237]],["name/5-191",[]],["text/5-191",[]],["component/5-191",[]],["title/5-192",[379,33.828]],["name/5-192",[]],["text/5-192",[]],["component/5-192",[]],["title/5-193",[319,33.918,470,33.918]],["name/5-193",[]],["text/5-193",[]],["component/5-193",[]],["title/5-194",[431,18.371]],["name/5-194",[]],["text/5-194",[]],["component/5-194",[]],["title/5-195",[474,53.024]],["name/5-195",[]],["text/5-195",[]],["component/5-195",[]],["title/5-196",[429,18.176]],["name/5-196",[]],["text/5-196",[]],["component/5-196",[]],["title/5-197",[430,18.176]],["name/5-197",[]],["text/5-197",[]],["component/5-197",[]],["title/5-198",[2,29.237]],["name/5-198",[]],["text/5-198",[]],["component/5-198",[]],["title/5-199",[431,18.371]],["name/5-199",[]],["text/5-199",[]],["component/5-199",[]],["title/5-200",[475,53.024]],["name/5-200",[]],["text/5-200",[]],["component/5-200",[]],["title/5-201",[429,18.176]],["name/5-201",[]],["text/5-201",[]],["component/5-201",[]],["title/5-202",[430,18.176]],["name/5-202",[]],["text/5-202",[]],["component/5-202",[]],["title/5-203",[2,29.237]],["name/5-203",[]],["text/5-203",[]],["component/5-203",[]],["title/5-204",[471,33.918,476,36.053]],["name/5-204",[]],["text/5-204",[]],["component/5-204",[]],["title/5-205",[431,18.371]],["name/5-205",[]],["text/5-205",[]],["component/5-205",[]],["title/5-206",[477,53.024]],["name/5-206",[]],["text/5-206",[]],["component/5-206",[]],["title/5-207",[429,18.176]],["name/5-207",[]],["text/5-207",[]],["component/5-207",[]],["title/5-208",[430,18.176]],["name/5-208",[]],["text/5-208",[]],["component/5-208",[]],["title/5-209",[2,29.237]],["name/5-209",[]],["text/5-209",[]],["component/5-209",[]],["title/5-210",[379,33.828]],["name/5-210",[]],["text/5-210",[]],["component/5-210",[]],["title/5-211",[431,18.371]],["name/5-211",[]],["text/5-211",[]],["component/5-211",[]],["title/5-212",[478,53.024]],["name/5-212",[]],["text/5-212",[]],["component/5-212",[]],["title/5-213",[429,18.176]],["name/5-213",[]],["text/5-213",[]],["component/5-213",[]],["title/5-214",[430,18.176]],["name/5-214",[]],["text/5-214",[]],["component/5-214",[]],["title/5-215",[379,33.828]],["name/5-215",[]],["text/5-215",[]],["component/5-215",[]],["title/5-216",[470,33.918,476,36.053]],["name/5-216",[]],["text/5-216",[]],["component/5-216",[]],["title/5-217",[431,18.371]],["name/5-217",[]],["text/5-217",[]],["component/5-217",[]],["title/5-218",[479,53.024]],["name/5-218",[]],["text/5-218",[]],["component/5-218",[]],["title/5-219",[429,18.176]],["name/5-219",[]],["text/5-219",[]],["component/5-219",[]],["title/5-220",[430,18.176]],["name/5-220",[]],["text/5-220",[]],["component/5-220",[]],["title/5-221",[2,29.237]],["name/5-221",[]],["text/5-221",[]],["component/5-221",[]],["title/5-222",[431,18.371]],["name/5-222",[]],["text/5-222",[]],["component/5-222",[]],["title/5-223",[480,53.024]],["name/5-223",[]],["text/5-223",[]],["component/5-223",[]],["title/5-224",[429,18.176]],["name/5-224",[]],["text/5-224",[]],["component/5-224",[]],["title/5-225",[430,18.176]],["name/5-225",[]],["text/5-225",[]],["component/5-225",[]],["title/5-226",[2,29.237]],["name/5-226",[]],["text/5-226",[]],["component/5-226",[]],["title/5-227",[10,43.851]],["name/5-227",[]],["text/5-227",[]],["component/5-227",[]],["title/5-228",[431,18.371]],["name/5-228",[]],["text/5-228",[]],["component/5-228",[]],["title/5-229",[10,43.851]],["name/5-229",[]],["text/5-229",[]],["component/5-229",[]],["title/5-230",[429,18.176]],["name/5-230",[]],["text/5-230",[]],["component/5-230",[]],["title/5-231",[430,18.176]],["name/5-231",[]],["text/5-231",[]],["component/5-231",[]],["title/5-232",[2,29.237]],["name/5-232",[]],["text/5-232",[]],["component/5-232",[]],["title/5-233",[431,18.371]],["name/5-233",[]],["text/5-233",[]],["component/5-233",[]],["title/5-234",[481,53.024]],["name/5-234",[]],["text/5-234",[]],["component/5-234",[]],["title/5-235",[430,18.176]],["name/5-235",[]],["text/5-235",[]],["component/5-235",[]],["title/5-236",[2,29.237]],["name/5-236",[]],["text/5-236",[]],["component/5-236",[]],["title/5-237",[482,49.043]],["name/5-237",[]],["text/5-237",[]],["component/5-237",[]],["title/5-238",[431,18.371]],["name/5-238",[]],["text/5-238",[]],["component/5-238",[]],["title/5-239",[482,49.043]],["name/5-239",[]],["text/5-239",[]],["component/5-239",[]],["title/5-240",[429,18.176]],["name/5-240",[]],["text/5-240",[]],["component/5-240",[]],["title/5-241",[430,18.176]],["name/5-241",[]],["text/5-241",[]],["component/5-241",[]],["title/5-242",[2,29.237]],["name/5-242",[]],["text/5-242",[]],["component/5-242",[]],["title/5-243",[379,33.828]],["name/5-243",[]],["text/5-243",[]],["component/5-243",[]],["title/5-244",[483,53.024]],["name/5-244",[]],["text/5-244",[]],["component/5-244",[]],["title/5-245",[429,18.176]],["name/5-245",[]],["text/5-245",[]],["component/5-245",[]],["title/5-246",[430,18.176]],["name/5-246",[]],["text/5-246",[]],["component/5-246",[]],["title/5-247",[2,29.237]],["name/5-247",[]],["text/5-247",[]],["component/5-247",[]],["title/5-248",[17,22.321,57,33.918]],["name/5-248",[]],["text/5-248",[]],["component/5-248",[]],["title/5-249",[484,53.024]],["name/5-249",[]],["text/5-249",[]],["component/5-249",[]],["title/5-250",[429,18.176]],["name/5-250",[]],["text/5-250",[]],["component/5-250",[]],["title/5-251",[430,18.176]],["name/5-251",[]],["text/5-251",[]],["component/5-251",[]],["title/5-252",[2,29.237]],["name/5-252",[]],["text/5-252",[]],["component/5-252",[]],["title/5-253",[57,46.138]],["name/5-253",[]],["text/5-253",[]],["component/5-253",[]],["title/5-254",[429,18.176]],["name/5-254",[]],["text/5-254",[]],["component/5-254",[]],["title/5-255",[430,18.176]],["name/5-255",[]],["text/5-255",[]],["component/5-255",[]],["title/5-256",[431,18.371]],["name/5-256",[]],["text/5-256",[]],["component/5-256",[]],["title/5",[234,41.963]],["name/5",[234,0.184]],["text/5",[2,0.124,4,0.06,6,0.131,7,0.902,10,0.479,12,0.066,17,3.534,18,1.106,20,0.205,22,0.076,26,0.714,31,0.51,35,0.07,36,0.472,40,0.579,42,0.458,44,0.51,48,1.053,56,0.208,57,0.321,64,0.44,82,0.07,87,0.472,98,1.315,102,0.076,112,0.225,120,0.225,124,1.16,125,0.297,126,0.51,127,0.535,132,0.151,136,0.842,137,0.07,149,0.782,158,0.647,161,0.076,162,1.28,169,0.51,170,0.647,172,0.07,175,0.598,177,0.07,178,0.275,180,0.076,181,0.341,183,0.579,184,0.076,201,0.151,205,0.151,207,0.341,209,0.076,212,1.891,213,0.225,217,0.076,221,0.78,223,0.369,224,0.297,226,0.341,228,0.714,229,1.455,232,0.225,233,0.472,234,0.06,238,0.07,239,0.076,255,0.297,256,0.076,260,0.07,262,0.151,263,0.151,272,0.076,273,0.714,278,0.07,279,0.07,281,1.512,289,0.151,290,0.139,291,0.07,298,0.07,311,0.208,319,1.735,330,0.063,331,0.063,332,0.063,333,0.063,334,0.063,335,0.063,336,0.125,337,0.063,338,0.063,339,0.063,340,0.063,341,0.063,349,0.579,350,0.076,351,0.076,363,0.076,364,0.07,365,0.714,369,0.151,389,0.076,391,0.369,395,0.151,415,1.568,423,0.151,428,3.857,429,0.077,431,0.128,440,1.22,443,0.472,469,0.974,470,0.383,471,0.321,472,0.076,473,0.44,474,0.297,475,0.51,476,1.937,477,0.076,478,0.44,479,0.151,480,0.51,481,0.51,482,0.341,483,0.51,484,0.714,485,0.169,486,0.413,487,1.23,488,0.369,489,0.252,490,0.252,491,0.085,492,0.493,493,0.252,494,0.076,495,0.333,496,0.647,497,0.252,498,0.333,499,2.233,500,2.401,501,0.413,502,0.085,503,0.085,504,0.085,505,0.085,506,0.333,507,0.493,508,0.493,509,0.085,510,0.085,511,0.413,512,0.413,513,0.085,514,0.413,515,0.413,516,0.493,517,0.252,518,0.169,519,0.297,520,0.085,521,0.169,522,0.169,523,0.169,524,0.169,525,0.085,526,0.085,527,0.085,528,0.085,529,0.724,530,0.169,531,1.09,532,0.169,533,1.367,534,0.169,535,0.085,536,0.799,537,1.019,538,0.151,539,0.085,540,0.085,541,0.085,542,0.085,543,3.728,544,2.771,545,0.947,546,0.947,547,0.085,548,0.874,549,0.085,550,0.169,551,0.085,552,0.085,553,0.085,554,0.085,555,0.085,556,0.085,557,0.085,558,0.333,559,0.493,560,0.076,561,0.169,562,0.252,563,0.169,564,0.493,565,0.085,566,0.333,567,1.019,568,1.434,569,0.252,570,0.169,571,0.169,572,0.51,573,0.085,574,0.169,575,0.169,576,0.845,577,0.169,578,0.169,579,0.085,580,0.333,581,0.169,582,0.169,583,0.085,584,0.085,585,0.169,586,0.085,587,0.169,588,0.085,589,0.648,590,0.874,591,0.413,592,0.169,593,0.169,594,0.169,595,0.085,596,0.169,597,0.493,598,0.493,599,0.493,600,0.493,601,0.169,602,0.151,603,0.169,604,0.333,605,0.413,606,0.571,607,0.648,608,0.333,609,0.333,610,0.333,611,0.333,612,0.333,613,1.565,614,0.571,615,0.571,616,0.571,617,0.571,618,0.571,619,0.571,620,0.571,621,0.571,622,1.09,623,0.947,624,0.571,625,1.09,626,0.571,627,0.571,628,0.571,629,0.571,630,0.571,631,0.413,632,0.169,633,0.085,634,0.297,635,0.413,636,0.413,637,0.333,638,0.297,639,1.161,640,0.648,641,0.076,642,0.799,643,0.571,644,0.076,645,0.151,646,0.085,647,0.085,648,0.169,649,0.085,650,0.333,651,0.333,652,0.169,653,0.169,654,0.333,655,0.169,656,0.169,657,0.169,658,0.252,659,0.085,660,0.085,661,0.085,662,0.085,663,0.085,664,0.333,665,0.085,666,0.085,667,0.225,668,0.413,669,0.085,670,0.085,671,0.085,672,0.169,673,0.169,674,0.085,675,0.076,676,0.085,677,0.085,678,0.169,679,0.169,680,0.252,681,0.085,682,0.085,683,0.085,684,0.085,685,0.252,686,0.252,687,0.085,688,0.085,689,0.085,690,0.085,691,0.085,692,0.085,693,0.085,694,0.169,695,0.076,696,0.169,697,0.085,698,0.085,699,0.085,700,0.076,701,0.085,702,0.085,703,0.085,704,0.085,705,0.085,706,0.169,707,0.085]],["component/5",[17,0.133]],["title/6-1",[379,33.828]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6-2",[353,49.043]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["title/6-3",[708,53.024]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["title/6-4",[709,36.608]],["name/6-4",[]],["text/6-4",[]],["component/6-4",[]],["title/6-5",[20,26.912,379,24.869]],["name/6-5",[]],["text/6-5",[]],["component/6-5",[]],["title/6-6",[710,53.024]],["name/6-6",[]],["text/6-6",[]],["component/6-6",[]],["title/6-7",[20,21.276,379,19.661,386,20.691]],["name/6-7",[]],["text/6-7",[]],["component/6-7",[]],["title/6-8",[386,26.171,709,26.912]],["name/6-8",[]],["text/6-8",[]],["component/6-8",[]],["title/6-9",[48,17.108,58,19.394,418,19.394,709,17.593]],["name/6-9",[]],["text/6-9",[]],["component/6-9",[]],["title/6-10",[48,26.171,711,38.98]],["name/6-10",[]],["text/6-10",[]],["component/6-10",[]],["title/6-11",[4,41.963]],["name/6-11",[]],["text/6-11",[]],["component/6-11",[]],["title/6-12",[20,21.276,379,19.661,386,20.691]],["name/6-12",[]],["text/6-12",[]],["component/6-12",[]],["title/6-13",[386,26.171,709,26.912]],["name/6-13",[]],["text/6-13",[]],["component/6-13",[]],["title/6-14",[48,17.108,58,19.394,418,19.394,709,17.593]],["name/6-14",[]],["text/6-14",[]],["component/6-14",[]],["title/6-15",[19,21.073,366,23.568,403,23.568,712,25.482]],["name/6-15",[]],["text/6-15",[]],["component/6-15",[]],["title/6-16",[713,53.024]],["name/6-16",[]],["text/6-16",[]],["component/6-16",[]],["title/6-17",[4,20.166,98,22.173,714,25.482,715,25.482]],["name/6-17",[]],["text/6-17",[]],["component/6-17",[]],["title/6-18",[20,14.996,379,13.858,386,14.583,716,21.721,717,21.721]],["name/6-18",[]],["text/6-18",[]],["component/6-18",[]],["title/6-19",[386,26.171,709,26.912]],["name/6-19",[]],["text/6-19",[]],["component/6-19",[]],["title/6-20",[48,17.108,58,19.394,418,19.394,709,17.593]],["name/6-20",[]],["text/6-20",[]],["component/6-20",[]],["title/6-21",[48,20.691,718,28.504,719,28.504]],["name/6-21",[]],["text/6-21",[]],["component/6-21",[]],["title/6-22",[720,53.024]],["name/6-22",[]],["text/6-22",[]],["component/6-22",[]],["title/6-23",[20,21.276,379,19.661,386,20.691]],["name/6-23",[]],["text/6-23",[]],["component/6-23",[]],["title/6-24",[386,26.171,709,26.912]],["name/6-24",[]],["text/6-24",[]],["component/6-24",[]],["title/6-25",[48,17.108,58,19.394,418,19.394,709,17.593]],["name/6-25",[]],["text/6-25",[]],["component/6-25",[]],["title/6-26",[48,20.691,718,28.504,719,28.504]],["name/6-26",[]],["text/6-26",[]],["component/6-26",[]],["title/6-27",[2,16.992,42,24.389,186,28.504]],["name/6-27",[]],["text/6-27",[]],["component/6-27",[]],["title/6-28",[42,24.389,418,23.455,721,30.817]],["name/6-28",[]],["text/6-28",[]],["component/6-28",[]],["title/6",[385,33.918,386,26.171]],["name/6",[385,0.202]],["text/6",[2,1.522,4,0.836,12,1.674,13,0.177,15,0.159,17,1.976,18,0.708,19,0.312,20,1.752,41,0.177,42,3.583,48,1.464,50,0.349,51,0.555,54,0.177,56,0.177,58,1.258,68,0.514,73,0.555,83,0.192,84,0.514,85,0.192,86,0.728,87,0.349,91,0.895,95,0.192,98,1.055,127,0.514,136,0.514,151,0.192,159,1.057,163,0.192,171,0.192,172,0.349,175,0.177,176,0.555,177,0.177,178,0.177,181,0.349,186,0.177,200,0.192,206,0.192,207,0.177,226,0.177,233,0.828,234,0.152,236,1.057,238,0.177,240,0.192,242,0.192,260,0.177,265,0.377,278,0.349,279,0.177,290,0.514,291,0.673,298,0.177,311,0.177,330,0.159,331,0.159,332,0.159,333,0.159,334,0.159,335,0.159,336,0.159,337,0.159,338,0.312,339,0.159,340,0.159,341,0.159,342,0.192,353,0.349,364,0.514,366,0.828,375,0.377,379,0.674,381,2.303,385,0.167,386,2.317,402,0.192,403,0.977,407,0.555,409,0.192,413,1.057,414,0.192,417,1.057,418,1.659,488,0.377,494,1.364,496,0.377,519,0.377,538,0.377,560,0.377,572,0.192,576,0.555,602,0.377,634,0.192,638,0.728,641,0.192,644,0.192,645,0.192,667,0.377,675,0.192,695,0.192,700,0.377,708,0.555,709,2.676,710,0.377,711,0.555,712,0.728,713,0.555,714,0.377,715,0.192,716,0.895,717,0.555,718,0.673,719,0.828,720,0.728,721,0.377,722,0.622,723,0.215,724,0.422,725,0.215,726,1.183,727,0.215,728,1.358,729,0.215,730,0.422,731,0.215,732,0.215,733,0.422,734,0.215,735,0.622,736,0.215,737,0.215,738,0.215,739,0.215,740,0.215,741,0.622,742,0.622,743,0.215,744,0.422,745,0.215,746,0.215,747,0.622,748,0.622,749,0.422,750,0.422,751,1.002,752,0.422,753,0.215,754,0.422,755,0.422,756,0.422,757,0.422,758,0.816,759,0.215,760,0.215,761,0.215,762,0.215,763,1.692,764,0.215,765,0.622,766,3.326,767,4.062,768,1.528,769,1.002,770,0.622,771,0.422,772,0.215,773,0.622,774,0.215,775,0.215,776,0.215,777,0.215,778,0.215,779,0.215,780,0.215,781,0.215,782,0.422,783,0.215,784,0.422,785,0.215,786,0.215,787,1.851,788,0.215,789,0.622,790,0.215,791,0.215,792,0.215,793,0.215,794,0.215,795,0.215,796,0.215,797,0.215,798,0.215,799,0.622,800,0.215,801,0.422,802,0.215,803,0.215,804,0.215,805,0.215,806,0.422,807,0.422,808,0.215,809,0.215,810,0.422,811,0.422,812,0.215,813,0.422,814,0.215,815,0.215,816,0.422,817,0.215,818,0.215,819,0.215,820,0.215,821,0.215,822,0.215,823,0.215,824,0.215,825,0.215,826,0.215,827,1.183,828,1.183,829,1.002,830,0.422,831,0.422,832,0.215,833,0.215,834,1.002,835,1.002,836,0.215,837,0.622,838,0.215,839,0.215,840,0.215,841,0.215,842,0.215,843,0.215,844,0.215,845,0.215,846,0.215,847,0.215,848,0.215,849,0.816,850,0.215,851,0.215,852,0.215,853,1.002,854,0.215,855,0.215,856,0.215,857,0.215,858,0.215,859,0.215,860,0.215,861,0.215,862,0.215,863,0.215,864,0.215,865,0.215]],["component/6",[17,0.133]],["title/7-1",[0,53.024]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[1,43.658,2,21.493]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7-3",[3,38.98,4,30.849]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["title/7-4",[5,53.024]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["title/7-5",[6,33.918,7,33.918]],["name/7-5",[]],["text/7-5",[]],["component/7-5",[]],["title/7-6",[8,30.817,9,26.816,10,25.486]],["name/7-6",[]],["text/7-6",[]],["component/7-6",[]],["title/7-7",[11,30.817,12,26.816,13,28.504]],["name/7-7",[]],["text/7-7",[]],["component/7-7",[]],["title/7",[14,36.053,15,32.236]],["name/7",[15,0.192]],["text/7",[2,0.597,3,0.942,4,1.984,5,1.851,6,0.563,7,0.819,8,1.083,9,1.177,10,1.627,11,0.647,12,1.061,13,0.871,14,0.308,15,0.276,16,0.19,17,2.44,18,0.745,19,0.658,20,0.65,21,0.647,22,0.492,23,0.333,24,0.169,25,0.19,26,0.647,27,0.647,28,0.647,29,0.19,30,0.373,31,0.169,32,0.373,33,0.19,34,0.373,35,0.871,36,0.157,37,0.19,38,0.19,39,0.551,40,0.169,41,0.157,42,0.264,43,0.19,44,0.169,45,0.19,46,0.19,47,0.19,48,1.397,49,0.169,50,0.598,51,0.169,52,0.19,53,0.19,54,0.157,55,0.19,56,0.308,57,0.147,58,0.129,59,0.373,60,0.19,61,0.169,62,0.19,63,0.19,64,0.492,65,0.373,66,0.19,67,0.19,68,1.128,69,0.169,70,0.333,71,0.492,72,0.19,73,0.169,74,0.19,75,0.169,76,0.333,77,0.333,78,0.169,79,0.169,80,0.169,81,0.19,82,0.157,83,0.333,84,0.308,85,0.169,86,0.333,87,0.308,88,0.19,89,0.19,90,0.19,91,1.083,92,0.19,93,0.19,94,0.19,95,0.647,96,0.892,97,0.373,98,3.919,99,1.055,100,1.661,101,2.455,102,0.333,103,0.373,104,0.551,105,0.551,106,0.551,107,0.551,108,0.551,109,0.373,110,0.373,111,0.373,112,0.169,113,0.373,114,0.551,115,0.19,116,0.373,117,0.551,118,0.373,119,0.373,120,1.732,121,0.373,122,0.892,123,0.373,124,0.333,125,0.333,126,0.647,127,0.308,128,0.19,129,0.19,130,0.19,131,0.373,132,0.169,133,0.19,134,0.373,135,0.19,136,0.455,137,0.308,138,0.333,139,0.551,140,0.724,141,0.373,142,0.19,143,0.19,144,0.19,145,0.19,146,0.169,147,0.19,148,0.373,149,0.308,150,0.19,151,0.647,152,0.19,153,0.373,154,0.373,155,0.169,156,0.373,157,0.169,158,0.169,159,0.169,160,0.373,161,1.22,162,0.333,163,0.333,164,0.19,165,0.19,166,0.19,167,0.551,168,0.19,169,0.169,170,0.333,171,0.492,172,0.157,173,0.19,174,0.724,175,0.308,176,0.333,177,0.308,178,0.308,179,0.551,180,0.333,181,0.598,182,1.609,183,0.333,184,0.169,185,0.551,186,0.308,187,0.892,188,0.724,189,0.724,190,0.724,191,0.19,192,0.19,193,0.19,194,0.373,195,0.551,196,0.19,197,0.19,198,1.055,199,1.366,200,1.22,201,0.492,202,0.551,203,0.19,204,0.19,205,0.492,206,0.333,207,1.128,208,0.19,209,0.333,210,0.551,211,0.19,212,0.492,213,0.169,214,0.19,215,0.19,216,0.19,217,0.169,218,0.373,219,0.19,220,0.796,221,0.333,222,0.373,223,0.169,224,0.333,225,0.19,226,0.157,227,0.942,228,0.169,229,0.333,230,0.373,231,0.373,232,0.169,233,0.455,234,0.134,235,0.492,236,0.492,237,0.19,238,0.308,239,0.169,240,0.169,241,0.373,242,0.333,243,1.661,244,0.892,245,0.892,246,1.055,247,1.213,248,1.213,249,0.169,250,0.19,251,0.19,252,0.19,253,0.19,254,0.892,255,0.169,256,0.169,257,0.19,258,0.19,259,0.19,260,0.157,261,0.373,262,0.169,263,0.169,264,0.19,265,0.169,266,0.19,267,0.19,268,0.647,269,0.373,270,0.19,271,0.19,272,0.169,273,0.333,274,0.19,275,0.19,276,0.373,277,0.19,278,0.455,279,0.455,280,0.19,281,0.169,282,0.19,283,0.373,284,0.19,285,0.19,286,0.19,287,0.19,288,0.19,289,0.169,290,0.157,291,0.157,292,0.29,293,0.19,294,0.19,295,0.19,296,0.19,297,0.19,298,0.157,299,1.055,300,0.724,301,0.19,302,0.19,303,0.19,304,0.19,305,0.19,306,0.19,307,0.19,308,0.19,309,0.19,310,0.19,311,0.157,312,0.373,313,0.373,314,0.373,315,0.373,316,0.19,317,0.19,318,0.373,319,0.147,320,0.169,321,0.19,322,0.373,323,0.19,324,0.19,325,0.19,326,0.19,327,0.19,328,0.724,329,0.19,330,0.14,331,0.14,332,0.14,333,0.14,334,0.14,335,0.14,336,0.14,337,0.14,338,0.14,339,0.14,340,0.14,341,0.14]],["component/7",[17,0.133]],["title/8",[]],["name/8",[342,0.232]],["text/8",[]],["component/8",[17,0.133]],["title/9-1",[249,21.721,343,24.327,344,24.327,345,24.327,346,24.327]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9",[292,46.138]],["name/9",[292,0.202]],["text/9",[18,3.862,330,4.036,331,4.036,332,4.036,333,4.036,334,4.036,335,4.036,336,4.036,337,4.036,338,4.036,339,4.036,340,4.036,341,4.036]],["component/9",[17,0.133]],["title/10-1",[347,59.387]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10-2",[82,49.043]],["name/10-2",[]],["text/10-2",[]],["component/10-2",[]],["title/10-3",[348,53.024]],["name/10-3",[]],["text/10-3",[]],["component/10-3",[]],["title/10",[17,14.591,18,20.166,19,21.073,20,17.593]],["name/10",[349,0.232]],["text/10",[14,0.745,15,0.666,17,1.507,18,1.663,19,2.563,20,2.14,21,0.805,23,0.805,24,0.805,27,0.805,28,0.805,35,1.386,36,0.745,41,0.745,42,0.637,48,1.006,49,0.805,50,0.745,54,0.745,58,0.613,61,0.805,68,0.745,69,1.498,70,1.498,71,0.805,75,0.805,76,0.805,77,0.805,78,0.805,79,1.498,80,0.805,84,0.745,137,0.745,138,0.805,146,1.498,149,1.386,155,0.805,157,0.805,182,0.805,234,0.637,235,0.805,268,0.805,292,0.701,330,0.666,331,0.666,332,0.666,333,1.738,334,1.239,335,1.239,336,0.666,337,0.666,338,1.239,339,1.239,340,1.239,341,1.239,348,0.805,350,0.805,351,0.805,352,1.678,353,0.745,354,1.678,355,0.902,356,0.902,357,0.902,358,0.902,359,0.902,360,0.902,361,0.902,362,0.902,363,0.805,364,0.745,365,0.805,366,0.745,367,0.902,368,0.902,369,0.805,370,0.902,371,0.902,372,0.902,373,0.902,374,0.902,375,1.498,376,0.902,377,0.902,378,0.902,379,0.514,380,0.902,381,0.805,382,0.902,383,0.902,384,0.902,385,0.701,386,0.541,387,1.678,388,0.902,389,0.805,390,1.678,391,0.805,392,0.902,393,0.902,394,1.678,395,0.805,396,0.902,397,0.902,398,0.902,399,0.902,400,0.902,401,0.902,402,0.805,403,0.745,404,0.902,405,0.902,406,1.678,407,0.805,408,0.902,409,0.805,410,0.902,411,0.902,412,0.902,413,2.102,414,2.102,415,0.805,416,0.902,417,0.805,418,0.613,419,0.902,420,0.902,421,0.902,422,0.902,423,0.805,424,0.902,425,0.902,426,0.902,427,0.902]],["component/10",[17,0.133]],["title/11-1",[0,53.024]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11-2",[428,49.043]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["title/11-3",[2,29.237]],["name/11-3",[]],["text/11-3",[]],["component/11-3",[]],["title/11-4",[7,33.918,17,22.321]],["name/11-4",[]],["text/11-4",[]],["component/11-4",[]],["title/11-5",[428,49.043]],["name/11-5",[]],["text/11-5",[]],["component/11-5",[]],["title/11-6",[429,18.176]],["name/11-6",[]],["text/11-6",[]],["component/11-6",[]],["title/11-7",[430,18.176]],["name/11-7",[]],["text/11-7",[]],["component/11-7",[]],["title/11-8",[431,18.371]],["name/11-8",[]],["text/11-8",[]],["component/11-8",[]],["title/11-9",[220,53.024]],["name/11-9",[]],["text/11-9",[]],["component/11-9",[]],["title/11-10",[429,18.176]],["name/11-10",[]],["text/11-10",[]],["component/11-10",[]],["title/11-11",[430,18.176]],["name/11-11",[]],["text/11-11",[]],["component/11-11",[]],["title/11-12",[431,18.371]],["name/11-12",[]],["text/11-12",[]],["component/11-12",[]],["title/11-13",[432,59.387]],["name/11-13",[]],["text/11-13",[]],["component/11-13",[]],["title/11-14",[429,18.176]],["name/11-14",[]],["text/11-14",[]],["component/11-14",[]],["title/11-15",[430,18.176]],["name/11-15",[]],["text/11-15",[]],["component/11-15",[]],["title/11-16",[431,18.371]],["name/11-16",[]],["text/11-16",[]],["component/11-16",[]],["title/11-17",[433,59.387]],["name/11-17",[]],["text/11-17",[]],["component/11-17",[]],["title/11-18",[429,18.176]],["name/11-18",[]],["text/11-18",[]],["component/11-18",[]],["title/11-19",[430,18.176]],["name/11-19",[]],["text/11-19",[]],["component/11-19",[]],["title/11-20",[431,18.371]],["name/11-20",[]],["text/11-20",[]],["component/11-20",[]],["title/11-21",[434,59.387]],["name/11-21",[]],["text/11-21",[]],["component/11-21",[]],["title/11-22",[429,18.176]],["name/11-22",[]],["text/11-22",[]],["component/11-22",[]],["title/11-23",[430,18.176]],["name/11-23",[]],["text/11-23",[]],["component/11-23",[]],["title/11-24",[431,18.371]],["name/11-24",[]],["text/11-24",[]],["component/11-24",[]],["title/11-25",[435,59.387]],["name/11-25",[]],["text/11-25",[]],["component/11-25",[]],["title/11-26",[429,18.176]],["name/11-26",[]],["text/11-26",[]],["component/11-26",[]],["title/11-27",[430,18.176]],["name/11-27",[]],["text/11-27",[]],["component/11-27",[]],["title/11-28",[431,18.371]],["name/11-28",[]],["text/11-28",[]],["component/11-28",[]],["title/11-29",[436,59.387]],["name/11-29",[]],["text/11-29",[]],["component/11-29",[]],["title/11-30",[429,18.176]],["name/11-30",[]],["text/11-30",[]],["component/11-30",[]],["title/11-31",[430,18.176]],["name/11-31",[]],["text/11-31",[]],["component/11-31",[]],["title/11-32",[431,18.371]],["name/11-32",[]],["text/11-32",[]],["component/11-32",[]],["title/11-33",[437,59.387]],["name/11-33",[]],["text/11-33",[]],["component/11-33",[]],["title/11-34",[429,18.176]],["name/11-34",[]],["text/11-34",[]],["component/11-34",[]],["title/11-35",[430,18.176]],["name/11-35",[]],["text/11-35",[]],["component/11-35",[]],["title/11-36",[431,18.371]],["name/11-36",[]],["text/11-36",[]],["component/11-36",[]],["title/11-37",[438,59.387]],["name/11-37",[]],["text/11-37",[]],["component/11-37",[]],["title/11-38",[429,18.176]],["name/11-38",[]],["text/11-38",[]],["component/11-38",[]],["title/11-39",[430,18.176]],["name/11-39",[]],["text/11-39",[]],["component/11-39",[]],["title/11-40",[431,18.371]],["name/11-40",[]],["text/11-40",[]],["component/11-40",[]],["title/11-41",[439,59.387]],["name/11-41",[]],["text/11-41",[]],["component/11-41",[]],["title/11-42",[429,18.176]],["name/11-42",[]],["text/11-42",[]],["component/11-42",[]],["title/11-43",[430,18.176]],["name/11-43",[]],["text/11-43",[]],["component/11-43",[]],["title/11-44",[431,18.371]],["name/11-44",[]],["text/11-44",[]],["component/11-44",[]],["title/11-45",[17,22.321,440,38.98]],["name/11-45",[]],["text/11-45",[]],["component/11-45",[]],["title/11-46",[441,59.387]],["name/11-46",[]],["text/11-46",[]],["component/11-46",[]],["title/11-47",[429,18.176]],["name/11-47",[]],["text/11-47",[]],["component/11-47",[]],["title/11-48",[430,18.176]],["name/11-48",[]],["text/11-48",[]],["component/11-48",[]],["title/11-49",[431,18.371]],["name/11-49",[]],["text/11-49",[]],["component/11-49",[]],["title/11-50",[442,59.387]],["name/11-50",[]],["text/11-50",[]],["component/11-50",[]],["title/11-51",[429,18.176]],["name/11-51",[]],["text/11-51",[]],["component/11-51",[]],["title/11-52",[430,18.176]],["name/11-52",[]],["text/11-52",[]],["component/11-52",[]],["title/11-53",[431,18.371]],["name/11-53",[]],["text/11-53",[]],["component/11-53",[]],["title/11-54",[17,22.321,443,36.053]],["name/11-54",[]],["text/11-54",[]],["component/11-54",[]],["title/11-55",[443,49.043]],["name/11-55",[]],["text/11-55",[]],["component/11-55",[]],["title/11-56",[429,18.176]],["name/11-56",[]],["text/11-56",[]],["component/11-56",[]],["title/11-57",[430,18.176]],["name/11-57",[]],["text/11-57",[]],["component/11-57",[]],["title/11-58",[431,18.371]],["name/11-58",[]],["text/11-58",[]],["component/11-58",[]],["title/11-59",[6,33.918,17,22.321]],["name/11-59",[]],["text/11-59",[]],["component/11-59",[]],["title/11-60",[444,59.387]],["name/11-60",[]],["text/11-60",[]],["component/11-60",[]],["title/11-61",[429,18.176]],["name/11-61",[]],["text/11-61",[]],["component/11-61",[]],["title/11-62",[430,18.176]],["name/11-62",[]],["text/11-62",[]],["component/11-62",[]],["title/11-63",[431,18.371]],["name/11-63",[]],["text/11-63",[]],["component/11-63",[]],["title/11-64",[2,29.237]],["name/11-64",[]],["text/11-64",[]],["component/11-64",[]],["title/11-65",[445,59.387]],["name/11-65",[]],["text/11-65",[]],["component/11-65",[]],["title/11-66",[429,18.176]],["name/11-66",[]],["text/11-66",[]],["component/11-66",[]],["title/11-67",[430,18.176]],["name/11-67",[]],["text/11-67",[]],["component/11-67",[]],["title/11-68",[431,18.371]],["name/11-68",[]],["text/11-68",[]],["component/11-68",[]],["title/11-69",[320,53.024]],["name/11-69",[]],["text/11-69",[]],["component/11-69",[]],["title/11-70",[429,18.176]],["name/11-70",[]],["text/11-70",[]],["component/11-70",[]],["title/11-71",[430,18.176]],["name/11-71",[]],["text/11-71",[]],["component/11-71",[]],["title/11-72",[431,18.371]],["name/11-72",[]],["text/11-72",[]],["component/11-72",[]],["title/11-73",[446,59.387]],["name/11-73",[]],["text/11-73",[]],["component/11-73",[]],["title/11-74",[429,18.176]],["name/11-74",[]],["text/11-74",[]],["component/11-74",[]],["title/11-75",[430,18.176]],["name/11-75",[]],["text/11-75",[]],["component/11-75",[]],["title/11-76",[431,18.371]],["name/11-76",[]],["text/11-76",[]],["component/11-76",[]],["title/11-77",[447,59.387]],["name/11-77",[]],["text/11-77",[]],["component/11-77",[]],["title/11-78",[429,18.176]],["name/11-78",[]],["text/11-78",[]],["component/11-78",[]],["title/11-79",[430,18.176]],["name/11-79",[]],["text/11-79",[]],["component/11-79",[]],["title/11-80",[431,18.371]],["name/11-80",[]],["text/11-80",[]],["component/11-80",[]],["title/11-81",[2,29.237]],["name/11-81",[]],["text/11-81",[]],["component/11-81",[]],["title/11-82",[448,59.387]],["name/11-82",[]],["text/11-82",[]],["component/11-82",[]],["title/11-83",[429,18.176]],["name/11-83",[]],["text/11-83",[]],["component/11-83",[]],["title/11-84",[430,18.176]],["name/11-84",[]],["text/11-84",[]],["component/11-84",[]],["title/11-85",[431,18.371]],["name/11-85",[]],["text/11-85",[]],["component/11-85",[]],["title/11-86",[449,59.387]],["name/11-86",[]],["text/11-86",[]],["component/11-86",[]],["title/11-87",[429,18.176]],["name/11-87",[]],["text/11-87",[]],["component/11-87",[]],["title/11-88",[430,18.176]],["name/11-88",[]],["text/11-88",[]],["component/11-88",[]],["title/11-89",[431,18.371]],["name/11-89",[]],["text/11-89",[]],["component/11-89",[]],["title/11-90",[450,59.387]],["name/11-90",[]],["text/11-90",[]],["component/11-90",[]],["title/11-91",[429,18.176]],["name/11-91",[]],["text/11-91",[]],["component/11-91",[]],["title/11-92",[430,18.176]],["name/11-92",[]],["text/11-92",[]],["component/11-92",[]],["title/11-93",[431,18.371]],["name/11-93",[]],["text/11-93",[]],["component/11-93",[]],["title/11-94",[451,59.387]],["name/11-94",[]],["text/11-94",[]],["component/11-94",[]],["title/11-95",[429,18.176]],["name/11-95",[]],["text/11-95",[]],["component/11-95",[]],["title/11-96",[430,18.176]],["name/11-96",[]],["text/11-96",[]],["component/11-96",[]],["title/11-97",[431,18.371]],["name/11-97",[]],["text/11-97",[]],["component/11-97",[]],["title/11-98",[452,59.387]],["name/11-98",[]],["text/11-98",[]],["component/11-98",[]],["title/11-99",[429,18.176]],["name/11-99",[]],["text/11-99",[]],["component/11-99",[]],["title/11-100",[430,18.176]],["name/11-100",[]],["text/11-100",[]],["component/11-100",[]],["title/11-101",[431,18.371]],["name/11-101",[]],["text/11-101",[]],["component/11-101",[]],["title/11-102",[453,59.387]],["name/11-102",[]],["text/11-102",[]],["component/11-102",[]],["title/11-103",[429,18.176]],["name/11-103",[]],["text/11-103",[]],["component/11-103",[]],["title/11-104",[430,18.176]],["name/11-104",[]],["text/11-104",[]],["component/11-104",[]],["title/11-105",[431,18.371]],["name/11-105",[]],["text/11-105",[]],["component/11-105",[]],["title/11-106",[454,59.387]],["name/11-106",[]],["text/11-106",[]],["component/11-106",[]],["title/11-107",[429,18.176]],["name/11-107",[]],["text/11-107",[]],["component/11-107",[]],["title/11-108",[430,18.176]],["name/11-108",[]],["text/11-108",[]],["component/11-108",[]],["title/11-109",[431,18.371]],["name/11-109",[]],["text/11-109",[]],["component/11-109",[]],["title/11-110",[227,53.024]],["name/11-110",[]],["text/11-110",[]],["component/11-110",[]],["title/11-111",[429,18.176]],["name/11-111",[]],["text/11-111",[]],["component/11-111",[]],["title/11-112",[430,18.176]],["name/11-112",[]],["text/11-112",[]],["component/11-112",[]],["title/11-113",[431,18.371]],["name/11-113",[]],["text/11-113",[]],["component/11-113",[]],["title/11-114",[455,59.387]],["name/11-114",[]],["text/11-114",[]],["component/11-114",[]],["title/11-115",[429,18.176]],["name/11-115",[]],["text/11-115",[]],["component/11-115",[]],["title/11-116",[430,18.176]],["name/11-116",[]],["text/11-116",[]],["component/11-116",[]],["title/11-117",[431,18.371]],["name/11-117",[]],["text/11-117",[]],["component/11-117",[]],["title/11-118",[456,59.387]],["name/11-118",[]],["text/11-118",[]],["component/11-118",[]],["title/11-119",[429,18.176]],["name/11-119",[]],["text/11-119",[]],["component/11-119",[]],["title/11-120",[430,18.176]],["name/11-120",[]],["text/11-120",[]],["component/11-120",[]],["title/11-121",[431,18.371]],["name/11-121",[]],["text/11-121",[]],["component/11-121",[]],["title/11-122",[457,59.387]],["name/11-122",[]],["text/11-122",[]],["component/11-122",[]],["title/11-123",[429,18.176]],["name/11-123",[]],["text/11-123",[]],["component/11-123",[]],["title/11-124",[430,18.176]],["name/11-124",[]],["text/11-124",[]],["component/11-124",[]],["title/11-125",[431,18.371]],["name/11-125",[]],["text/11-125",[]],["component/11-125",[]],["title/11-126",[458,59.387]],["name/11-126",[]],["text/11-126",[]],["component/11-126",[]],["title/11-127",[429,18.176]],["name/11-127",[]],["text/11-127",[]],["component/11-127",[]],["title/11-128",[430,18.176]],["name/11-128",[]],["text/11-128",[]],["component/11-128",[]],["title/11-129",[431,18.371]],["name/11-129",[]],["text/11-129",[]],["component/11-129",[]],["title/11-130",[9,33.918,17,22.321]],["name/11-130",[]],["text/11-130",[]],["component/11-130",[]],["title/11-131",[9,46.138]],["name/11-131",[]],["text/11-131",[]],["component/11-131",[]],["title/11-132",[429,18.176]],["name/11-132",[]],["text/11-132",[]],["component/11-132",[]],["title/11-133",[430,18.176]],["name/11-133",[]],["text/11-133",[]],["component/11-133",[]],["title/11-134",[431,18.371]],["name/11-134",[]],["text/11-134",[]],["component/11-134",[]],["title/11-135",[459,59.387]],["name/11-135",[]],["text/11-135",[]],["component/11-135",[]],["title/11-136",[429,18.176]],["name/11-136",[]],["text/11-136",[]],["component/11-136",[]],["title/11-137",[430,18.176]],["name/11-137",[]],["text/11-137",[]],["component/11-137",[]],["title/11-138",[431,18.371]],["name/11-138",[]],["text/11-138",[]],["component/11-138",[]],["title/11-139",[460,59.387]],["name/11-139",[]],["text/11-139",[]],["component/11-139",[]],["title/11-140",[429,18.176]],["name/11-140",[]],["text/11-140",[]],["component/11-140",[]],["title/11-141",[430,18.176]],["name/11-141",[]],["text/11-141",[]],["component/11-141",[]],["title/11-142",[431,18.371]],["name/11-142",[]],["text/11-142",[]],["component/11-142",[]],["title/11-143",[461,59.387]],["name/11-143",[]],["text/11-143",[]],["component/11-143",[]],["title/11-144",[429,18.176]],["name/11-144",[]],["text/11-144",[]],["component/11-144",[]],["title/11-145",[430,18.176]],["name/11-145",[]],["text/11-145",[]],["component/11-145",[]],["title/11-146",[431,18.371]],["name/11-146",[]],["text/11-146",[]],["component/11-146",[]],["title/11-147",[462,59.387]],["name/11-147",[]],["text/11-147",[]],["component/11-147",[]],["title/11-148",[429,18.176]],["name/11-148",[]],["text/11-148",[]],["component/11-148",[]],["title/11-149",[430,18.176]],["name/11-149",[]],["text/11-149",[]],["component/11-149",[]],["title/11-150",[431,18.371]],["name/11-150",[]],["text/11-150",[]],["component/11-150",[]],["title/11-151",[463,59.387]],["name/11-151",[]],["text/11-151",[]],["component/11-151",[]],["title/11-152",[429,18.176]],["name/11-152",[]],["text/11-152",[]],["component/11-152",[]],["title/11-153",[430,18.176]],["name/11-153",[]],["text/11-153",[]],["component/11-153",[]],["title/11-154",[431,18.371]],["name/11-154",[]],["text/11-154",[]],["component/11-154",[]],["title/11-155",[464,59.387]],["name/11-155",[]],["text/11-155",[]],["component/11-155",[]],["title/11-156",[429,18.176]],["name/11-156",[]],["text/11-156",[]],["component/11-156",[]],["title/11-157",[430,18.176]],["name/11-157",[]],["text/11-157",[]],["component/11-157",[]],["title/11-158",[431,18.371]],["name/11-158",[]],["text/11-158",[]],["component/11-158",[]],["title/11-159",[465,59.387]],["name/11-159",[]],["text/11-159",[]],["component/11-159",[]],["title/11-160",[429,18.176]],["name/11-160",[]],["text/11-160",[]],["component/11-160",[]],["title/11-161",[430,18.176]],["name/11-161",[]],["text/11-161",[]],["component/11-161",[]],["title/11-162",[431,18.371]],["name/11-162",[]],["text/11-162",[]],["component/11-162",[]],["title/11-163",[466,59.387]],["name/11-163",[]],["text/11-163",[]],["component/11-163",[]],["title/11-164",[429,18.176]],["name/11-164",[]],["text/11-164",[]],["component/11-164",[]],["title/11-165",[430,18.176]],["name/11-165",[]],["text/11-165",[]],["component/11-165",[]],["title/11-166",[431,18.371]],["name/11-166",[]],["text/11-166",[]],["component/11-166",[]],["title/11-167",[467,59.387]],["name/11-167",[]],["text/11-167",[]],["component/11-167",[]],["title/11-168",[429,18.176]],["name/11-168",[]],["text/11-168",[]],["component/11-168",[]],["title/11-169",[430,18.176]],["name/11-169",[]],["text/11-169",[]],["component/11-169",[]],["title/11-170",[431,18.371]],["name/11-170",[]],["text/11-170",[]],["component/11-170",[]],["title/11-171",[468,59.387]],["name/11-171",[]],["text/11-171",[]],["component/11-171",[]],["title/11-172",[429,18.176]],["name/11-172",[]],["text/11-172",[]],["component/11-172",[]],["title/11-173",[430,18.176]],["name/11-173",[]],["text/11-173",[]],["component/11-173",[]],["title/11-174",[431,18.371]],["name/11-174",[]],["text/11-174",[]],["component/11-174",[]],["title/11-175",[17,22.321,469,38.98]],["name/11-175",[]],["text/11-175",[]],["component/11-175",[]],["title/11-176",[429,18.176]],["name/11-176",[]],["text/11-176",[]],["component/11-176",[]],["title/11-177",[430,18.176]],["name/11-177",[]],["text/11-177",[]],["component/11-177",[]],["title/11-178",[431,18.371]],["name/11-178",[]],["text/11-178",[]],["component/11-178",[]],["title/11-179",[470,33.918,471,33.918]],["name/11-179",[]],["text/11-179",[]],["component/11-179",[]],["title/11-180",[319,33.918,471,33.918]],["name/11-180",[]],["text/11-180",[]],["component/11-180",[]],["title/11-181",[431,18.371]],["name/11-181",[]],["text/11-181",[]],["component/11-181",[]],["title/11-182",[472,53.024]],["name/11-182",[]],["text/11-182",[]],["component/11-182",[]],["title/11-183",[429,18.176]],["name/11-183",[]],["text/11-183",[]],["component/11-183",[]],["title/11-184",[430,18.176]],["name/11-184",[]],["text/11-184",[]],["component/11-184",[]],["title/11-185",[2,29.237]],["name/11-185",[]],["text/11-185",[]],["component/11-185",[]],["title/11-186",[379,33.828]],["name/11-186",[]],["text/11-186",[]],["component/11-186",[]],["title/11-187",[431,18.371]],["name/11-187",[]],["text/11-187",[]],["component/11-187",[]],["title/11-188",[473,53.024]],["name/11-188",[]],["text/11-188",[]],["component/11-188",[]],["title/11-189",[429,18.176]],["name/11-189",[]],["text/11-189",[]],["component/11-189",[]],["title/11-190",[430,18.176]],["name/11-190",[]],["text/11-190",[]],["component/11-190",[]],["title/11-191",[2,29.237]],["name/11-191",[]],["text/11-191",[]],["component/11-191",[]],["title/11-192",[379,33.828]],["name/11-192",[]],["text/11-192",[]],["component/11-192",[]],["title/11-193",[319,33.918,470,33.918]],["name/11-193",[]],["text/11-193",[]],["component/11-193",[]],["title/11-194",[431,18.371]],["name/11-194",[]],["text/11-194",[]],["component/11-194",[]],["title/11-195",[474,53.024]],["name/11-195",[]],["text/11-195",[]],["component/11-195",[]],["title/11-196",[429,18.176]],["name/11-196",[]],["text/11-196",[]],["component/11-196",[]],["title/11-197",[430,18.176]],["name/11-197",[]],["text/11-197",[]],["component/11-197",[]],["title/11-198",[2,29.237]],["name/11-198",[]],["text/11-198",[]],["component/11-198",[]],["title/11-199",[431,18.371]],["name/11-199",[]],["text/11-199",[]],["component/11-199",[]],["title/11-200",[475,53.024]],["name/11-200",[]],["text/11-200",[]],["component/11-200",[]],["title/11-201",[429,18.176]],["name/11-201",[]],["text/11-201",[]],["component/11-201",[]],["title/11-202",[430,18.176]],["name/11-202",[]],["text/11-202",[]],["component/11-202",[]],["title/11-203",[2,29.237]],["name/11-203",[]],["text/11-203",[]],["component/11-203",[]],["title/11-204",[471,33.918,476,36.053]],["name/11-204",[]],["text/11-204",[]],["component/11-204",[]],["title/11-205",[431,18.371]],["name/11-205",[]],["text/11-205",[]],["component/11-205",[]],["title/11-206",[477,53.024]],["name/11-206",[]],["text/11-206",[]],["component/11-206",[]],["title/11-207",[429,18.176]],["name/11-207",[]],["text/11-207",[]],["component/11-207",[]],["title/11-208",[430,18.176]],["name/11-208",[]],["text/11-208",[]],["component/11-208",[]],["title/11-209",[2,29.237]],["name/11-209",[]],["text/11-209",[]],["component/11-209",[]],["title/11-210",[379,33.828]],["name/11-210",[]],["text/11-210",[]],["component/11-210",[]],["title/11-211",[431,18.371]],["name/11-211",[]],["text/11-211",[]],["component/11-211",[]],["title/11-212",[478,53.024]],["name/11-212",[]],["text/11-212",[]],["component/11-212",[]],["title/11-213",[429,18.176]],["name/11-213",[]],["text/11-213",[]],["component/11-213",[]],["title/11-214",[430,18.176]],["name/11-214",[]],["text/11-214",[]],["component/11-214",[]],["title/11-215",[379,33.828]],["name/11-215",[]],["text/11-215",[]],["component/11-215",[]],["title/11-216",[470,33.918,476,36.053]],["name/11-216",[]],["text/11-216",[]],["component/11-216",[]],["title/11-217",[431,18.371]],["name/11-217",[]],["text/11-217",[]],["component/11-217",[]],["title/11-218",[479,53.024]],["name/11-218",[]],["text/11-218",[]],["component/11-218",[]],["title/11-219",[429,18.176]],["name/11-219",[]],["text/11-219",[]],["component/11-219",[]],["title/11-220",[430,18.176]],["name/11-220",[]],["text/11-220",[]],["component/11-220",[]],["title/11-221",[2,29.237]],["name/11-221",[]],["text/11-221",[]],["component/11-221",[]],["title/11-222",[431,18.371]],["name/11-222",[]],["text/11-222",[]],["component/11-222",[]],["title/11-223",[480,53.024]],["name/11-223",[]],["text/11-223",[]],["component/11-223",[]],["title/11-224",[429,18.176]],["name/11-224",[]],["text/11-224",[]],["component/11-224",[]],["title/11-225",[430,18.176]],["name/11-225",[]],["text/11-225",[]],["component/11-225",[]],["title/11-226",[2,29.237]],["name/11-226",[]],["text/11-226",[]],["component/11-226",[]],["title/11-227",[10,43.851]],["name/11-227",[]],["text/11-227",[]],["component/11-227",[]],["title/11-228",[431,18.371]],["name/11-228",[]],["text/11-228",[]],["component/11-228",[]],["title/11-229",[10,43.851]],["name/11-229",[]],["text/11-229",[]],["component/11-229",[]],["title/11-230",[429,18.176]],["name/11-230",[]],["text/11-230",[]],["component/11-230",[]],["title/11-231",[430,18.176]],["name/11-231",[]],["text/11-231",[]],["component/11-231",[]],["title/11-232",[2,29.237]],["name/11-232",[]],["text/11-232",[]],["component/11-232",[]],["title/11-233",[431,18.371]],["name/11-233",[]],["text/11-233",[]],["component/11-233",[]],["title/11-234",[481,53.024]],["name/11-234",[]],["text/11-234",[]],["component/11-234",[]],["title/11-235",[430,18.176]],["name/11-235",[]],["text/11-235",[]],["component/11-235",[]],["title/11-236",[2,29.237]],["name/11-236",[]],["text/11-236",[]],["component/11-236",[]],["title/11-237",[482,49.043]],["name/11-237",[]],["text/11-237",[]],["component/11-237",[]],["title/11-238",[431,18.371]],["name/11-238",[]],["text/11-238",[]],["component/11-238",[]],["title/11-239",[482,49.043]],["name/11-239",[]],["text/11-239",[]],["component/11-239",[]],["title/11-240",[429,18.176]],["name/11-240",[]],["text/11-240",[]],["component/11-240",[]],["title/11-241",[430,18.176]],["name/11-241",[]],["text/11-241",[]],["component/11-241",[]],["title/11-242",[2,29.237]],["name/11-242",[]],["text/11-242",[]],["component/11-242",[]],["title/11-243",[379,33.828]],["name/11-243",[]],["text/11-243",[]],["component/11-243",[]],["title/11-244",[483,53.024]],["name/11-244",[]],["text/11-244",[]],["component/11-244",[]],["title/11-245",[429,18.176]],["name/11-245",[]],["text/11-245",[]],["component/11-245",[]],["title/11-246",[430,18.176]],["name/11-246",[]],["text/11-246",[]],["component/11-246",[]],["title/11-247",[2,29.237]],["name/11-247",[]],["text/11-247",[]],["component/11-247",[]],["title/11-248",[17,22.321,57,33.918]],["name/11-248",[]],["text/11-248",[]],["component/11-248",[]],["title/11-249",[484,53.024]],["name/11-249",[]],["text/11-249",[]],["component/11-249",[]],["title/11-250",[429,18.176]],["name/11-250",[]],["text/11-250",[]],["component/11-250",[]],["title/11-251",[430,18.176]],["name/11-251",[]],["text/11-251",[]],["component/11-251",[]],["title/11-252",[2,29.237]],["name/11-252",[]],["text/11-252",[]],["component/11-252",[]],["title/11-253",[57,46.138]],["name/11-253",[]],["text/11-253",[]],["component/11-253",[]],["title/11-254",[429,18.176]],["name/11-254",[]],["text/11-254",[]],["component/11-254",[]],["title/11-255",[430,18.176]],["name/11-255",[]],["text/11-255",[]],["component/11-255",[]],["title/11-256",[431,18.371]],["name/11-256",[]],["text/11-256",[]],["component/11-256",[]],["title/11",[234,41.963]],["name/11",[234,0.184]],["text/11",[2,0.124,4,0.06,6,0.131,7,0.902,10,0.479,12,0.066,17,3.534,18,1.106,20,0.205,22,0.076,26,0.714,31,0.51,35,0.07,36,0.472,40,0.579,42,0.458,44,0.51,48,1.053,56,0.208,57,0.321,64,0.44,82,0.07,87,0.472,98,1.315,102,0.076,112,0.225,120,0.225,124,1.16,125,0.297,126,0.51,127,0.535,132,0.151,136,0.842,137,0.07,149,0.782,158,0.647,161,0.076,162,1.28,169,0.51,170,0.647,172,0.07,175,0.598,177,0.07,178,0.275,180,0.076,181,0.341,183,0.579,184,0.076,201,0.151,205,0.151,207,0.341,209,0.076,212,1.891,213,0.225,217,0.076,221,0.78,223,0.369,224,0.297,226,0.341,228,0.714,229,1.455,232,0.225,233,0.472,234,0.06,238,0.07,239,0.076,255,0.297,256,0.076,260,0.07,262,0.151,263,0.151,272,0.076,273,0.714,278,0.07,279,0.07,281,1.512,289,0.151,290,0.139,291,0.07,298,0.07,311,0.208,319,1.735,330,0.063,331,0.063,332,0.063,333,0.063,334,0.063,335,0.063,336,0.125,337,0.063,338,0.063,339,0.063,340,0.063,341,0.063,349,0.579,350,0.076,351,0.076,363,0.076,364,0.07,365,0.714,369,0.151,389,0.076,391,0.369,395,0.151,415,1.568,423,0.151,428,3.857,429,0.077,431,0.128,440,1.22,443,0.472,469,0.974,470,0.383,471,0.321,472,0.076,473,0.44,474,0.297,475,0.51,476,1.937,477,0.076,478,0.44,479,0.151,480,0.51,481,0.51,482,0.341,483,0.51,484,0.714,485,0.169,486,0.413,487,1.23,488,0.369,489,0.252,490,0.252,491,0.085,492,0.493,493,0.252,494,0.076,495,0.333,496,0.647,497,0.252,498,0.333,499,2.233,500,2.401,501,0.413,502,0.085,503,0.085,504,0.085,505,0.085,506,0.333,507,0.493,508,0.493,509,0.085,510,0.085,511,0.413,512,0.413,513,0.085,514,0.413,515,0.413,516,0.493,517,0.252,518,0.169,519,0.297,520,0.085,521,0.169,522,0.169,523,0.169,524,0.169,525,0.085,526,0.085,527,0.085,528,0.085,529,0.724,530,0.169,531,1.09,532,0.169,533,1.367,534,0.169,535,0.085,536,0.799,537,1.019,538,0.151,539,0.085,540,0.085,541,0.085,542,0.085,543,3.728,544,2.771,545,0.947,546,0.947,547,0.085,548,0.874,549,0.085,550,0.169,551,0.085,552,0.085,553,0.085,554,0.085,555,0.085,556,0.085,557,0.085,558,0.333,559,0.493,560,0.076,561,0.169,562,0.252,563,0.169,564,0.493,565,0.085,566,0.333,567,1.019,568,1.434,569,0.252,570,0.169,571,0.169,572,0.51,573,0.085,574,0.169,575,0.169,576,0.845,577,0.169,578,0.169,579,0.085,580,0.333,581,0.169,582,0.169,583,0.085,584,0.085,585,0.169,586,0.085,587,0.169,588,0.085,589,0.648,590,0.874,591,0.413,592,0.169,593,0.169,594,0.169,595,0.085,596,0.169,597,0.493,598,0.493,599,0.493,600,0.493,601,0.169,602,0.151,603,0.169,604,0.333,605,0.413,606,0.571,607,0.648,608,0.333,609,0.333,610,0.333,611,0.333,612,0.333,613,1.565,614,0.571,615,0.571,616,0.571,617,0.571,618,0.571,619,0.571,620,0.571,621,0.571,622,1.09,623,0.947,624,0.571,625,1.09,626,0.571,627,0.571,628,0.571,629,0.571,630,0.571,631,0.413,632,0.169,633,0.085,634,0.297,635,0.413,636,0.413,637,0.333,638,0.297,639,1.161,640,0.648,641,0.076,642,0.799,643,0.571,644,0.076,645,0.151,646,0.085,647,0.085,648,0.169,649,0.085,650,0.333,651,0.333,652,0.169,653,0.169,654,0.333,655,0.169,656,0.169,657,0.169,658,0.252,659,0.085,660,0.085,661,0.085,662,0.085,663,0.085,664,0.333,665,0.085,666,0.085,667,0.225,668,0.413,669,0.085,670,0.085,671,0.085,672,0.169,673,0.169,674,0.085,675,0.076,676,0.085,677,0.085,678,0.169,679,0.169,680,0.252,681,0.085,682,0.085,683,0.085,684,0.085,685,0.252,686,0.252,687,0.085,688,0.085,689,0.085,690,0.085,691,0.085,692,0.085,693,0.085,694,0.169,695,0.076,696,0.169,697,0.085,698,0.085,699,0.085,700,0.076,701,0.085,702,0.085,703,0.085,704,0.085,705,0.085,706,0.169,707,0.085]],["component/11",[17,0.133]],["title/12-1",[379,33.828]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[353,49.043]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12-3",[708,53.024]],["name/12-3",[]],["text/12-3",[]],["component/12-3",[]],["title/12-4",[709,36.608]],["name/12-4",[]],["text/12-4",[]],["component/12-4",[]],["title/12-5",[20,26.912,379,24.869]],["name/12-5",[]],["text/12-5",[]],["component/12-5",[]],["title/12-6",[710,53.024]],["name/12-6",[]],["text/12-6",[]],["component/12-6",[]],["title/12-7",[20,21.276,379,19.661,386,20.691]],["name/12-7",[]],["text/12-7",[]],["component/12-7",[]],["title/12-8",[386,26.171,709,26.912]],["name/12-8",[]],["text/12-8",[]],["component/12-8",[]],["title/12-9",[48,17.108,58,19.394,418,19.394,709,17.593]],["name/12-9",[]],["text/12-9",[]],["component/12-9",[]],["title/12-10",[48,26.171,711,38.98]],["name/12-10",[]],["text/12-10",[]],["component/12-10",[]],["title/12-11",[4,41.963]],["name/12-11",[]],["text/12-11",[]],["component/12-11",[]],["title/12-12",[20,21.276,379,19.661,386,20.691]],["name/12-12",[]],["text/12-12",[]],["component/12-12",[]],["title/12-13",[386,26.171,709,26.912]],["name/12-13",[]],["text/12-13",[]],["component/12-13",[]],["title/12-14",[48,17.108,58,19.394,418,19.394,709,17.593]],["name/12-14",[]],["text/12-14",[]],["component/12-14",[]],["title/12-15",[19,21.073,366,23.568,403,23.568,712,25.482]],["name/12-15",[]],["text/12-15",[]],["component/12-15",[]],["title/12-16",[713,53.024]],["name/12-16",[]],["text/12-16",[]],["component/12-16",[]],["title/12-17",[4,20.166,98,22.173,714,25.482,715,25.482]],["name/12-17",[]],["text/12-17",[]],["component/12-17",[]],["title/12-18",[20,14.996,379,13.858,386,14.583,716,21.721,717,21.721]],["name/12-18",[]],["text/12-18",[]],["component/12-18",[]],["title/12-19",[386,26.171,709,26.912]],["name/12-19",[]],["text/12-19",[]],["component/12-19",[]],["title/12-20",[48,17.108,58,19.394,418,19.394,709,17.593]],["name/12-20",[]],["text/12-20",[]],["component/12-20",[]],["title/12-21",[48,20.691,718,28.504,719,28.504]],["name/12-21",[]],["text/12-21",[]],["component/12-21",[]],["title/12-22",[720,53.024]],["name/12-22",[]],["text/12-22",[]],["component/12-22",[]],["title/12-23",[20,21.276,379,19.661,386,20.691]],["name/12-23",[]],["text/12-23",[]],["component/12-23",[]],["title/12-24",[386,26.171,709,26.912]],["name/12-24",[]],["text/12-24",[]],["component/12-24",[]],["title/12-25",[48,17.108,58,19.394,418,19.394,709,17.593]],["name/12-25",[]],["text/12-25",[]],["component/12-25",[]],["title/12-26",[48,20.691,718,28.504,719,28.504]],["name/12-26",[]],["text/12-26",[]],["component/12-26",[]],["title/12-27",[2,16.992,42,24.389,186,28.504]],["name/12-27",[]],["text/12-27",[]],["component/12-27",[]],["title/12-28",[42,24.389,418,23.455,721,30.817]],["name/12-28",[]],["text/12-28",[]],["component/12-28",[]],["title/12",[385,33.918,386,26.171]],["name/12",[385,0.202]],["text/12",[2,1.522,4,0.836,12,1.674,13,0.177,15,0.159,17,1.976,18,0.708,19,0.312,20,1.752,41,0.177,42,3.583,48,1.464,50,0.349,51,0.555,54,0.177,56,0.177,58,1.258,68,0.514,73,0.555,83,0.192,84,0.514,85,0.192,86,0.728,87,0.349,91,0.895,95,0.192,98,1.055,127,0.514,136,0.514,151,0.192,159,1.057,163,0.192,171,0.192,172,0.349,175,0.177,176,0.555,177,0.177,178,0.177,181,0.349,186,0.177,200,0.192,206,0.192,207,0.177,226,0.177,233,0.828,234,0.152,236,1.057,238,0.177,240,0.192,242,0.192,260,0.177,265,0.377,278,0.349,279,0.177,290,0.514,291,0.673,298,0.177,311,0.177,330,0.159,331,0.159,332,0.159,333,0.159,334,0.159,335,0.159,336,0.159,337,0.159,338,0.312,339,0.159,340,0.159,341,0.159,342,0.192,353,0.349,364,0.514,366,0.828,375,0.377,379,0.674,381,2.303,385,0.167,386,2.317,402,0.192,403,0.977,407,0.555,409,0.192,413,1.057,414,0.192,417,1.057,418,1.659,488,0.377,494,1.364,496,0.377,519,0.377,538,0.377,560,0.377,572,0.192,576,0.555,602,0.377,634,0.192,638,0.728,641,0.192,644,0.192,645,0.192,667,0.377,675,0.192,695,0.192,700,0.377,708,0.555,709,2.676,710,0.377,711,0.555,712,0.728,713,0.555,714,0.377,715,0.192,716,0.895,717,0.555,718,0.673,719,0.828,720,0.728,721,0.377,722,0.622,723,0.215,724,0.422,725,0.215,726,1.183,727,0.215,728,1.358,729,0.215,730,0.422,731,0.215,732,0.215,733,0.422,734,0.215,735,0.622,736,0.215,737,0.215,738,0.215,739,0.215,740,0.215,741,0.622,742,0.622,743,0.215,744,0.422,745,0.215,746,0.215,747,0.622,748,0.622,749,0.422,750,0.422,751,1.002,752,0.422,753,0.215,754,0.422,755,0.422,756,0.422,757,0.422,758,0.816,759,0.215,760,0.215,761,0.215,762,0.215,763,1.692,764,0.215,765,0.622,766,3.326,767,4.062,768,1.528,769,1.002,770,0.622,771,0.422,772,0.215,773,0.622,774,0.215,775,0.215,776,0.215,777,0.215,778,0.215,779,0.215,780,0.215,781,0.215,782,0.422,783,0.215,784,0.422,785,0.215,786,0.215,787,1.851,788,0.215,789,0.622,790,0.215,791,0.215,792,0.215,793,0.215,794,0.215,795,0.215,796,0.215,797,0.215,798,0.215,799,0.622,800,0.215,801,0.422,802,0.215,803,0.215,804,0.215,805,0.215,806,0.422,807,0.422,808,0.215,809,0.215,810,0.422,811,0.422,812,0.215,813,0.422,814,0.215,815,0.215,816,0.422,817,0.215,818,0.215,819,0.215,820,0.215,821,0.215,822,0.215,823,0.215,824,0.215,825,0.215,826,0.215,827,1.183,828,1.183,829,1.002,830,0.422,831,0.422,832,0.215,833,0.215,834,1.002,835,1.002,836,0.215,837,0.622,838,0.215,839,0.215,840,0.215,841,0.215,842,0.215,843,0.215,844,0.215,845,0.215,846,0.215,847,0.215,848,0.215,849,0.816,850,0.215,851,0.215,852,0.215,853,1.002,854,0.215,855,0.215,856,0.215,857,0.215,858,0.215,859,0.215,860,0.215,861,0.215,862,0.215,863,0.215,864,0.215,865,0.215]],["component/12",[17,0.133]]],"invertedIndex":[["",{"_index":98,"title":{"6-17":{},"12-17":{}},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["0",{"_index":125,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["0.0",{"_index":507,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["0.25",{"_index":593,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["0.5",{"_index":580,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["0.75",{"_index":594,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["1",{"_index":255,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["1.0",{"_index":567,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["1.5",{"_index":581,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["10",{"_index":200,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["100",{"_index":221,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["100x50",{"_index":218,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["17",{"_index":805,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["18",{"_index":245,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["2",{"_index":256,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["2.0",{"_index":569,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["20",{"_index":244,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["200",{"_index":534,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["2014",{"_index":331,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{}},"component":{}}],["2019",{"_index":815,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["2022",{"_index":712,"title":{"6-15":{},"12-15":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["2024",{"_index":332,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{}},"component":{}}],["25",{"_index":243,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["255",{"_index":107,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["2d",{"_index":663,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["3",{"_index":260,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["3.15",{"_index":724,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["32",{"_index":826,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["35",{"_index":105,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["37",{"_index":106,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["4",{"_index":261,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["5",{"_index":328,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["50",{"_index":222,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["64",{"_index":813,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["80",{"_index":388,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["_app",{"_index":118,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["_app(\"aspect",{"_index":329,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["_app(argc",{"_index":115,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["_app.run",{"_index":123,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["_app.stop",{"_index":119,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["_win(_app.nam",{"_index":116,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["_win.on_clos",{"_index":117,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["abov",{"_index":785,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["achiev",{"_index":33,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["action",{"_index":316,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["activ",{"_index":686,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["actual",{"_index":205,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["add",{"_index":188,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["addit",{"_index":634,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["addition",{"_index":759,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["advanc",{"_index":411,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["advoc",{"_index":412,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["affect",{"_index":550,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["again",{"_index":817,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["align",{"_index":6,"title":{"1-5":{},"5-59":{},"7-5":{},"11-59":{}},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["align_bottom",{"_index":450,"title":{"5-90":{},"11-90":{}},"name":{},"text":{},"component":{}}],["align_cent",{"_index":320,"title":{"5-69":{},"11-69":{}},"name":{},"text":{"1":{},"7":{}},"component":{}}],["align_center(funny_slid",{"_index":318,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["align_center_bottom",{"_index":457,"title":{"5-122":{},"11-122":{}},"name":{},"text":{},"component":{}}],["align_center_middl",{"_index":227,"title":{"5-110":{},"11-110":{}},"name":{},"text":{"1":{},"7":{}},"component":{}}],["align_center_top",{"_index":452,"title":{"5-98":{},"11-98":{}},"name":{},"text":{},"component":{}}],["align_left",{"_index":445,"title":{"5-65":{},"11-65":{}},"name":{},"text":{},"component":{}}],["align_left_bottom",{"_index":456,"title":{"5-118":{},"11-118":{}},"name":{},"text":{},"component":{}}],["align_left_middl",{"_index":454,"title":{"5-106":{},"11-106":{}},"name":{},"text":{},"component":{}}],["align_left_top",{"_index":451,"title":{"5-94":{},"11-94":{}},"name":{},"text":{},"component":{}}],["align_middl",{"_index":449,"title":{"5-86":{},"11-86":{}},"name":{},"text":{},"component":{}}],["align_right",{"_index":446,"title":{"5-73":{},"11-73":{}},"name":{},"text":{},"component":{}}],["align_right_bottom",{"_index":458,"title":{"5-126":{},"11-126":{}},"name":{},"text":{},"component":{}}],["align_right_middl",{"_index":455,"title":{"5-114":{},"11-114":{}},"name":{},"text":{},"component":{}}],["align_right_top",{"_index":453,"title":{"5-102":{},"11-102":{}},"name":{},"text":{},"component":{}}],["align_top",{"_index":448,"title":{"5-82":{},"11-82":{}},"name":{},"text":{},"component":{}}],["all_build",{"_index":782,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["alloc",{"_index":562,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["allow",{"_index":40,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["alongsid",{"_index":240,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["alreadi",{"_index":206,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["although",{"_index":729,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["alway",{"_index":343,"title":{"3-1":{},"9-1":{}},"name":{},"text":{},"component":{}}],["anoth",{"_index":148,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["anyth",{"_index":164,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["anywher",{"_index":216,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["apart",{"_index":251,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["api",{"_index":47,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["app",{"_index":3,"title":{"1-3":{},"7-3":{}},"name":{},"text":{"1":{},"7":{}},"component":{}}],["applic",{"_index":68,"title":{},"name":{},"text":{"1":{},"4":{},"6":{},"7":{},"10":{},"12":{}},"component":{}}],["apt",{"_index":834,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["architect",{"_index":405,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["argc",{"_index":111,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["argv",{"_index":114,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["around",{"_index":241,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["arrang",{"_index":705,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["array",{"_index":660,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["aspect",{"_index":15,"title":{"1":{},"7":{}},"name":{"1":{},"7":{}},"text":{"1":{},"4":{},"6":{},"7":{},"10":{},"12":{}},"component":{}}],["assum",{"_index":572,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["atom",{"_index":285,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["au",{"_index":374,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["author",{"_index":348,"title":{"4-3":{},"10-3":{}},"name":{},"text":{"4":{},"10":{}},"component":{}}],["auto",{"_index":101,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["automat",{"_index":184,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["avail",{"_index":232,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["axi",{"_index":224,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["background",{"_index":5,"title":{"1-4":{},"7-4":{}},"name":{},"text":{"1":{},"7":{}},"component":{}}],["basic",{"_index":87,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["basic_context",{"_index":505,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["becom",{"_index":61,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["befor",{"_index":276,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["below",{"_index":576,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["beyond",{"_index":521,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["binari",{"_index":819,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["bit",{"_index":265,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["bkd_color",{"_index":103,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["black",{"_index":303,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["blue",{"_index":189,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["blue_rbox",{"_index":198,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["blush",{"_index":308,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["boilerpl",{"_index":854,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["boost",{"_index":422,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["boost.fus",{"_index":421,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["boost.phoenix",{"_index":420,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["boost.spirit",{"_index":419,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["bootstrap",{"_index":788,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["both",{"_index":560,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["bottom",{"_index":643,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["box",{"_index":182,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["box(bkd_color",{"_index":108,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["box(colors::black",{"_index":313,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["brew",{"_index":763,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["bring",{"_index":797,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["build",{"_index":42,"title":{"6-27":{},"6-28":{},"12-27":{},"12-28":{}},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{}},"component":{}}],["bzip2",{"_index":754,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["c",{"_index":18,"title":{"4":{},"10":{}},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{}},"component":{}}],["c++17",{"_index":353,"title":{"6-2":{},"12-2":{}},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["c.push_back(share(child",{"_index":624,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["c:\\program",{"_index":790,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["cairo",{"_index":751,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["call",{"_index":132,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["case",{"_index":154,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["catalogu",{"_index":541,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["cd",{"_index":766,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["center",{"_index":210,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["certain",{"_index":143,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["chanc",{"_index":679,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["chang",{"_index":585,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["char",{"_index":113,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["child",{"_index":162,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["children",{"_index":640,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["child’",{"_index":693,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["choos",{"_index":783,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["clamp",{"_index":650,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["clang",{"_index":734,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["class",{"_index":141,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["clear",{"_index":85,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["click",{"_index":675,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["client",{"_index":169,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["client’",{"_index":616,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["clion",{"_index":737,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["clone",{"_index":742,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["close",{"_index":133,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["cmake",{"_index":709,"title":{"6-4":{},"6-8":{},"6-9":{},"6-13":{},"6-14":{},"6-19":{},"6-20":{},"6-24":{},"6-25":{},"12-4":{},"12-8":{},"12-9":{},"12-13":{},"12-14":{},"12-19":{},"12-20":{},"12-24":{},"12-25":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["cmake_toolchain_file=c:/vcpkg/scripts/buildsystems/vcpkg",{"_index":807,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["cmake_xcode_attribute_code_signing_allow",{"_index":775,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["cmakelists.txt",{"_index":739,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["co",{"_index":75,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["code",{"_index":50,"title":{},"name":{},"text":{"1":{},"4":{},"6":{},"7":{},"10":{},"12":{}},"component":{}}],["collabor",{"_index":426,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["collect",{"_index":293,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["color",{"_index":100,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["column",{"_index":637,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["command",{"_index":799,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["common",{"_index":342,"title":{},"name":{"2":{},"8":{}},"text":{"6":{},"12":{}},"component":{}}],["compar",{"_index":571,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["compil",{"_index":602,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["complet",{"_index":324,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["complex",{"_index":31,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["compon",{"_index":77,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["compos",{"_index":235,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["composit",{"_index":26,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["composite’",{"_index":614,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["comprehens",{"_index":485,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["comput",{"_index":639,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["config",{"_index":750,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["const",{"_index":112,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["constantli",{"_index":295,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["constexpr",{"_index":102,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["constitu",{"_index":252,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["constrain",{"_index":228,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["construct",{"_index":157,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["contain",{"_index":175,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["content",{"_index":161,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["context",{"_index":504,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["contrast",{"_index":52,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["control",{"_index":56,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["coordin",{"_index":631,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["coordinate’",{"_index":527,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["copi",{"_index":853,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["copyright",{"_index":330,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{}},"component":{}}],["corner",{"_index":196,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["counterpart",{"_index":852,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["coupl",{"_index":73,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["creat",{"_index":126,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["creation",{"_index":372,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["creativ",{"_index":323,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["crop",{"_index":655,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["ctx",{"_index":503,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["current",{"_index":725,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["cycfi",{"_index":407,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["cycfi::artist::color",{"_index":327,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["cycfi::artist::rgba",{"_index":326,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["cycfi::el",{"_index":97,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["d",{"_index":806,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["dark",{"_index":88,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["data",{"_index":528,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["dcmake_xcode_attribute_code_signing_allowed=no",{"_index":777,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["de",{"_index":334,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{}},"component":{}}],["deal",{"_index":621,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["dealt",{"_index":287,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["debian",{"_index":832,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["deck",{"_index":482,"title":{"5-237":{},"5-239":{},"11-237":{},"11-239":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["deck(e1",{"_index":687,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["deck(item1",{"_index":691,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["deck_composit",{"_index":483,"title":{"5-244":{},"11-244":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["declar",{"_index":35,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"7":{},"10":{},"11":{}},"component":{}}],["deep",{"_index":266,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["default",{"_index":516,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["defin",{"_index":524,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["delements_host_ui_library=gtk",{"_index":831,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["delements_root=\"../el",{"_index":865,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["delements_root=\"path/to/el",{"_index":862,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["demonstr",{"_index":83,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["depend",{"_index":494,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["depict",{"_index":701,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["deriv",{"_index":833,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["descript",{"_index":361,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["design",{"_index":14,"title":{"1":{},"7":{}},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["desir",{"_index":765,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["determin",{"_index":492,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["dev",{"_index":837,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["develop",{"_index":41,"title":{},"name":{},"text":{"1":{},"4":{},"6":{},"7":{},"10":{},"12":{}},"component":{}}],["differ",{"_index":847,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["digit",{"_index":393,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["dimens",{"_index":559,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["directli",{"_index":156,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["directori",{"_index":767,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["disabl",{"_index":774,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["discuss",{"_index":277,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["distort",{"_index":398,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["distribut",{"_index":338,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{}},"component":{}}],["distro",{"_index":820,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["document",{"_index":82,"title":{"4-2":{},"10-2":{}},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["dog",{"_index":304,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["domain",{"_index":357,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["done",{"_index":671,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["down",{"_index":583,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["download",{"_index":821,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["drag",{"_index":760,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["draw",{"_index":165,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["drawn",{"_index":672,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["dsel",{"_index":359,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["dynam",{"_index":636,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["e.g",{"_index":145,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["e1,...en",{"_index":589,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["e2",{"_index":688,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["e3",{"_index":689,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["each",{"_index":488,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["easi",{"_index":80,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["easier",{"_index":269,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["easili",{"_index":860,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["editor",{"_index":367,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["effect",{"_index":395,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{}},"component":{}}],["effici",{"_index":45,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["effort",{"_index":427,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["electron",{"_index":387,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["element",{"_index":17,"title":{"4":{},"10":{},"5-4":{},"5-45":{},"5-54":{},"5-59":{},"5-130":{},"5-175":{},"5-248":{},"11-4":{},"11-45":{},"11-54":{},"11-59":{},"11-130":{},"11-175":{},"11-248":{}},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{}}}],["element_ptr",{"_index":622,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["elements.sln",{"_index":809,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["elements.xcodeproj",{"_index":778,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["element’",{"_index":496,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["emb",{"_index":155,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["embed",{"_index":358,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["embedd",{"_index":368,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["emphasi",{"_index":38,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["empti",{"_index":172,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["en",{"_index":690,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["enclos",{"_index":537,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["end",{"_index":697,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["engin",{"_index":406,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["enjoy",{"_index":397,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["ensur",{"_index":651,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["entir",{"_index":59,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["environ",{"_index":748,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["error",{"_index":603,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["etc",{"_index":259,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["even",{"_index":211,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["event",{"_index":137,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"7":{},"10":{},"11":{}},"component":{}}],["everyth",{"_index":389,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{}},"component":{}}],["exampl",{"_index":2,"title":{"1-2":{},"5-3":{},"5-64":{},"5-81":{},"5-185":{},"5-191":{},"5-198":{},"5-203":{},"5-209":{},"5-221":{},"5-226":{},"5-232":{},"5-236":{},"5-242":{},"5-247":{},"5-252":{},"6-27":{},"7-2":{},"11-3":{},"11-64":{},"11-81":{},"11-185":{},"11-191":{},"11-198":{},"11-203":{},"11-209":{},"11-221":{},"11-226":{},"11-232":{},"11-236":{},"11-242":{},"11-247":{},"11-252":{},"12-27":{}},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["exceed",{"_index":656,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["except",{"_index":239,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["exclus",{"_index":362,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["exist",{"_index":76,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["expat",{"_index":755,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["expos",{"_index":46,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["express",{"_index":429,"title":{"5-6":{},"5-10":{},"5-14":{},"5-18":{},"5-22":{},"5-26":{},"5-30":{},"5-34":{},"5-38":{},"5-42":{},"5-47":{},"5-51":{},"5-56":{},"5-61":{},"5-66":{},"5-70":{},"5-74":{},"5-78":{},"5-83":{},"5-87":{},"5-91":{},"5-95":{},"5-99":{},"5-103":{},"5-107":{},"5-111":{},"5-115":{},"5-119":{},"5-123":{},"5-127":{},"5-132":{},"5-136":{},"5-140":{},"5-144":{},"5-148":{},"5-152":{},"5-156":{},"5-160":{},"5-164":{},"5-168":{},"5-172":{},"5-176":{},"5-183":{},"5-189":{},"5-196":{},"5-201":{},"5-207":{},"5-213":{},"5-219":{},"5-224":{},"5-230":{},"5-240":{},"5-245":{},"5-250":{},"5-254":{},"11-6":{},"11-10":{},"11-14":{},"11-18":{},"11-22":{},"11-26":{},"11-30":{},"11-34":{},"11-38":{},"11-42":{},"11-47":{},"11-51":{},"11-56":{},"11-61":{},"11-66":{},"11-70":{},"11-74":{},"11-78":{},"11-83":{},"11-87":{},"11-91":{},"11-95":{},"11-99":{},"11-103":{},"11-107":{},"11-111":{},"11-115":{},"11-119":{},"11-123":{},"11-127":{},"11-132":{},"11-136":{},"11-140":{},"11-144":{},"11-148":{},"11-152":{},"11-156":{},"11-160":{},"11-164":{},"11-168":{},"11-172":{},"11-176":{},"11-183":{},"11-189":{},"11-196":{},"11-201":{},"11-207":{},"11-213":{},"11-219":{},"11-224":{},"11-230":{},"11-240":{},"11-245":{},"11-250":{},"11-254":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["extent",{"_index":493,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["extern",{"_index":365,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{}},"component":{}}],["extra",{"_index":561,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["extrem",{"_index":24,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["facilit",{"_index":25,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["familiar",{"_index":62,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["favorit",{"_index":247,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["featur",{"_index":355,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["feel",{"_index":843,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["few",{"_index":380,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["file",{"_index":381,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["fill",{"_index":698,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["final",{"_index":263,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["find",{"_index":803,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["find_packag",{"_index":802,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["fine",{"_index":27,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["finger",{"_index":857,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["first",{"_index":391,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{}},"component":{}}],["fit",{"_index":692,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["fix",{"_index":229,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["fixed_s",{"_index":220,"title":{"5-9":{},"11-9":{}},"name":{},"text":{"1":{},"7":{}},"component":{}}],["fixed_size({width",{"_index":547,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["flexibl",{"_index":532,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["float",{"_index":469,"title":{"5-175":{},"11-175":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["float[n",{"_index":661,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["flow",{"_index":57,"title":{"5-248":{},"5-253":{},"11-248":{},"11-253":{}},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["flow(c",{"_index":707,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["flow_composit",{"_index":484,"title":{"5-249":{},"11-249":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["fluidli",{"_index":856,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["flyweight",{"_index":29,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["follow",{"_index":638,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["fontconfig",{"_index":752,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["found",{"_index":92,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["fraction",{"_index":607,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["framework",{"_index":71,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["free",{"_index":844,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["freetype2",{"_index":753,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["full",{"_index":517,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["full_ext",{"_index":508,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["full_limit",{"_index":518,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["fun",{"_index":297,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["function",{"_index":498,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["funni",{"_index":317,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["funny_slid",{"_index":314,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["g",{"_index":735,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["g\"nmake",{"_index":818,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["g\"visual",{"_index":804,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["galleri",{"_index":292,"title":{"3":{},"9":{}},"name":{"3":{},"9":{}},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["gener",{"_index":58,"title":{"6-9":{},"6-14":{},"6-20":{},"6-25":{},"12-9":{},"12-14":{},"12-20":{},"12-25":{}},"name":{},"text":{"1":{},"4":{},"6":{},"7":{},"10":{},"12":{}},"component":{}}],["get",{"_index":264,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["git",{"_index":708,"title":{"6-3":{},"12-3":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["give",{"_index":209,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["given",{"_index":158,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["go",{"_index":322,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["goal",{"_index":237,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["grain",{"_index":28,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["graphic",{"_index":177,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["greater",{"_index":652,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["grey",{"_index":89,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["grid",{"_index":471,"title":{"5-179":{},"5-180":{},"5-204":{},"11-179":{},"11-180":{},"11-204":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["grid’",{"_index":648,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["groundwork",{"_index":761,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["group",{"_index":666,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["grow",{"_index":296,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["gtk",{"_index":715,"title":{"6-17":{},"12-17":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["gtk3",{"_index":830,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["gui",{"_index":19,"title":{"4":{},"10":{},"6-15":{},"12-15":{}},"name":{},"text":{"1":{},"4":{},"6":{},"7":{},"10":{},"12":{}},"component":{}}],["guid",{"_index":824,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["guitar",{"_index":394,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["guzman",{"_index":335,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{}},"component":{}}],["gxcode",{"_index":770,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["half",{"_index":582,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["halign",{"_index":444,"title":{"5-60":{},"11-60":{}},"name":{},"text":{},"component":{}}],["hassl",{"_index":863,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["have",{"_index":771,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["heavi",{"_index":37,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["height",{"_index":533,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["held",{"_index":590,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["hello",{"_index":850,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["hello_univers",{"_index":849,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["here",{"_index":91,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["here’",{"_index":242,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["hey",{"_index":309,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["hgrid",{"_index":472,"title":{"5-182":{},"11-182":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["hgrid(posit",{"_index":595,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["hgrid_composit",{"_index":473,"title":{"5-188":{},"11-188":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["hide",{"_index":670,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["hierarch",{"_index":630,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["hierarchi",{"_index":32,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["higher",{"_index":667,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["highli",{"_index":416,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["hint",{"_index":491,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["hmargin",{"_index":463,"title":{"5-151":{},"11-151":{}},"name":{},"text":{},"component":{}}],["hmax_siz",{"_index":438,"title":{"5-37":{},"11-37":{}},"name":{},"text":{},"component":{}}],["hmax_size(width",{"_index":556,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["hmin_siz",{"_index":435,"title":{"5-25":{},"11-25":{}},"name":{},"text":{},"component":{}}],["hmin_size(width",{"_index":553,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["hog",{"_index":208,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["hold",{"_index":271,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["home",{"_index":402,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["homebrew",{"_index":762,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["horizont",{"_index":319,"title":{"5-180":{},"5-193":{},"11-180":{},"11-193":{}},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["host",{"_index":79,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["hsize",{"_index":432,"title":{"5-13":{},"11-13":{}},"name":{},"text":{},"component":{}}],["hsize(10",{"_index":312,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["hsize(width",{"_index":549,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["hstretch",{"_index":441,"title":{"5-46":{},"11-46":{}},"name":{},"text":{},"component":{}}],["hstretch(stretch",{"_index":573,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["htile",{"_index":474,"title":{"5-195":{},"11-195":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["htile(item1",{"_index":633,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["htile_composit",{"_index":475,"title":{"5-200":{},"11-200":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["html",{"_index":65,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["https://github.com/cycfi/elements.git",{"_index":745,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["https://github.com/cycfi/elements/tree/master/examples/doc_aspect",{"_index":94,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["https://github.com/microsoft/vcpkg",{"_index":793,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["huge",{"_index":525,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["id",{"_index":728,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["ident",{"_index":781,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["illustr",{"_index":283,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["imag",{"_index":575,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["immedi",{"_index":644,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["imper",{"_index":53,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["implement",{"_index":523,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["impli",{"_index":370,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["import",{"_index":152,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["includ",{"_index":95,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["incorpor",{"_index":147,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["increas",{"_index":611,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["independ",{"_index":351,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{}},"component":{}}],["indetermin",{"_index":635,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["index",{"_index":349,"title":{},"name":{"4":{},"10":{}},"text":{"5":{},"11":{}},"component":{}}],["infinit",{"_index":180,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["inform",{"_index":213,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["infra",{"_index":741,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["inher",{"_index":214,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["insid",{"_index":236,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["inspect",{"_index":845,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["instal",{"_index":386,"title":{"6":{},"12":{},"6-7":{},"6-8":{},"6-12":{},"6-13":{},"6-18":{},"6-19":{},"6-23":{},"6-24":{},"12-7":{},"12-8":{},"12-12":{},"12-13":{},"12-18":{},"12-19":{},"12-23":{},"12-24":{}},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["instanc",{"_index":544,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["instead",{"_index":167,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["instruct",{"_index":747,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["int",{"_index":109,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["integr",{"_index":81,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["interact",{"_index":166,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["interest",{"_index":153,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["interfac",{"_index":36,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"7":{},"10":{},"11":{}},"component":{}}],["interoper",{"_index":66,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["interven",{"_index":646,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["introduct",{"_index":347,"title":{"4-1":{},"10-1":{}},"name":{},"text":{},"component":{}}],["intuit",{"_index":63,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["invok",{"_index":768,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["involv",{"_index":55,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["issu",{"_index":772,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["item",{"_index":623,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["item1",{"_index":596,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["item2",{"_index":597,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["item3",{"_index":598,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["item4",{"_index":599,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["itself",{"_index":628,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["it’",{"_index":249,"title":{"3-1":{},"9-1":{}},"name":{},"text":{"1":{},"7":{}},"component":{}}],["joel",{"_index":333,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{}},"component":{}}],["keep",{"_index":619,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["key",{"_index":16,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["knob",{"_index":859,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["know",{"_index":163,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["label",{"_index":8,"title":{"1-6":{},"7-6":{}},"name":{},"text":{"1":{},"7":{}},"component":{}}],["label(\"“dog",{"_index":246,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["laden",{"_index":399,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["laid",{"_index":548,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["languag",{"_index":354,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["latest",{"_index":736,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["lay",{"_index":486,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["layer",{"_index":10,"title":{"1-6":{},"5-227":{},"5-229":{},"7-6":{},"11-227":{},"11-229":{}},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["layer(e1,...en",{"_index":681,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["layer(item1",{"_index":682,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["layer_composit",{"_index":481,"title":{"5-234":{},"11-234":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["layer’",{"_index":680,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["layout",{"_index":234,"title":{"5":{},"11":{}},"name":{"5":{},"11":{}},"text":{"1":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{}},"component":{}}],["learn",{"_index":840,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["left",{"_index":605,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["left_margin",{"_index":257,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["less",{"_index":558,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["let’",{"_index":11,"title":{"1-7":{},"7-7":{}},"name":{},"text":{"1":{},"7":{}},"component":{}}],["level",{"_index":668,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["lib",{"_index":864,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["libcairo2",{"_index":836,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["liber",{"_index":382,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["libgtk",{"_index":838,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["libpng",{"_index":757,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["librari",{"_index":20,"title":{"4":{},"10":{},"6-5":{},"6-7":{},"6-12":{},"6-18":{},"6-23":{},"12-5":{},"12-7":{},"12-12":{},"12-18":{},"12-23":{}},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{}},"component":{}}],["libwebp",{"_index":758,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["licens",{"_index":341,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{}},"component":{}}],["lifetim",{"_index":615,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["lightweight",{"_index":23,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["likewis",{"_index":653,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["limit",{"_index":428,"title":{"5-2":{},"5-5":{},"11-2":{},"11-5":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["limit(limit",{"_index":542,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["limits(basic_context",{"_index":502,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["limits.max",{"_index":513,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["limits.max.i",{"_index":515,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["limits.max.x",{"_index":514,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["limits.min",{"_index":510,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["limits.min.i",{"_index":512,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["limits.min.x",{"_index":511,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["line",{"_index":800,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["link",{"_index":93,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["linux",{"_index":720,"title":{"6-22":{},"12-22":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["list",{"_index":538,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["locat",{"_index":801,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["look",{"_index":306,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["loop",{"_index":138,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["loos",{"_index":72,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["love",{"_index":392,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["lower",{"_index":654,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["mac",{"_index":727,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["maco",{"_index":710,"title":{"6-6":{},"12-6":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["made",{"_index":302,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["main",{"_index":99,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["main(int",{"_index":110,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["main.cpp",{"_index":842,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["make",{"_index":12,"title":{"1-7":{},"7-7":{}},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["makefil",{"_index":719,"title":{"6-21":{},"6-26":{},"12-21":{},"12-26":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["manag",{"_index":136,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["mani",{"_index":284,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["margin",{"_index":9,"title":{"1-6":{},"5-130":{},"5-131":{},"7-6":{},"11-130":{},"11-131":{}},"name":{},"text":{"1":{},"7":{}},"component":{}}],["margin_bottom",{"_index":462,"title":{"5-147":{},"11-147":{}},"name":{},"text":{},"component":{}}],["margin_left",{"_index":459,"title":{"5-135":{},"11-135":{}},"name":{},"text":{},"component":{}}],["margin_left_bottom",{"_index":466,"title":{"5-163":{},"11-163":{}},"name":{},"text":{},"component":{}}],["margin_left_top",{"_index":465,"title":{"5-159":{},"11-159":{}},"name":{},"text":{},"component":{}}],["margin_right",{"_index":460,"title":{"5-139":{},"11-139":{}},"name":{},"text":{},"component":{}}],["margin_right_bottom",{"_index":468,"title":{"5-171":{},"11-171":{}},"name":{},"text":{},"component":{}}],["margin_right_top",{"_index":467,"title":{"5-167":{},"11-167":{}},"name":{},"text":{},"component":{}}],["margin_top",{"_index":461,"title":{"5-143":{},"11-143":{}},"name":{},"text":{},"component":{}}],["match",{"_index":600,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["matter",{"_index":792,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["max",{"_index":490,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["max_siz",{"_index":437,"title":{"5-33":{},"11-33":{}},"name":{},"text":{},"component":{}}],["max_size({width",{"_index":555,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["maximum",{"_index":500,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["mean",{"_index":369,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{}},"component":{}}],["member",{"_index":497,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["mention",{"_index":275,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["menu",{"_index":816,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["mess",{"_index":846,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["middl",{"_index":225,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["min",{"_index":489,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["min_siz",{"_index":434,"title":{"5-21":{},"11-21":{}},"name":{},"text":{},"component":{}}],["min_size({width",{"_index":552,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["mind",{"_index":620,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["mingw",{"_index":714,"title":{"6-17":{},"12-17":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["mingw_package_prefix",{"_index":829,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["minim",{"_index":1,"title":{"1-2":{},"7-2":{}},"name":{},"text":{},"component":{}}],["minimum",{"_index":499,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["minumum",{"_index":649,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["mit",{"_index":340,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{}},"component":{}}],["mkdir",{"_index":769,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["modern",{"_index":49,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["modular",{"_index":21,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["more",{"_index":273,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["mous",{"_index":674,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["move",{"_index":695,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["msys2",{"_index":716,"title":{"6-18":{},"12-18":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["much",{"_index":64,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["multipl",{"_index":176,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["multitud",{"_index":231,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["music",{"_index":390,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["n",{"_index":658,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["name",{"_index":202,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["namespac",{"_index":96,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["native/cross",{"_index":814,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["natur",{"_index":281,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["near",{"_index":526,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["need",{"_index":364,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"11":{},"12":{}},"component":{}}],["new",{"_index":376,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["next",{"_index":645,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["nice",{"_index":344,"title":{"3-1":{},"9-1":{}},"name":{},"text":{},"component":{}}],["nmake",{"_index":713,"title":{"6-16":{},"12-16":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["non",{"_index":383,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["notat",{"_index":430,"title":{"5-7":{},"5-11":{},"5-15":{},"5-19":{},"5-23":{},"5-27":{},"5-31":{},"5-35":{},"5-39":{},"5-43":{},"5-48":{},"5-52":{},"5-57":{},"5-62":{},"5-67":{},"5-71":{},"5-75":{},"5-79":{},"5-84":{},"5-88":{},"5-92":{},"5-96":{},"5-100":{},"5-104":{},"5-108":{},"5-112":{},"5-116":{},"5-120":{},"5-124":{},"5-128":{},"5-133":{},"5-137":{},"5-141":{},"5-145":{},"5-149":{},"5-153":{},"5-157":{},"5-161":{},"5-165":{},"5-169":{},"5-173":{},"5-177":{},"5-184":{},"5-190":{},"5-197":{},"5-202":{},"5-208":{},"5-214":{},"5-220":{},"5-225":{},"5-231":{},"5-235":{},"5-241":{},"5-246":{},"5-251":{},"5-255":{},"11-7":{},"11-11":{},"11-15":{},"11-19":{},"11-23":{},"11-27":{},"11-31":{},"11-35":{},"11-39":{},"11-43":{},"11-48":{},"11-52":{},"11-57":{},"11-62":{},"11-67":{},"11-71":{},"11-75":{},"11-79":{},"11-84":{},"11-88":{},"11-92":{},"11-96":{},"11-100":{},"11-104":{},"11-108":{},"11-112":{},"11-116":{},"11-120":{},"11-124":{},"11-128":{},"11-133":{},"11-137":{},"11-141":{},"11-145":{},"11-149":{},"11-153":{},"11-157":{},"11-161":{},"11-165":{},"11-169":{},"11-173":{},"11-177":{},"11-184":{},"11-190":{},"11-197":{},"11-202":{},"11-208":{},"11-214":{},"11-220":{},"11-225":{},"11-231":{},"11-235":{},"11-241":{},"11-246":{},"11-251":{},"11-255":{}},"name":{},"text":{},"component":{}}],["note",{"_index":140,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["notic",{"_index":274,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["now",{"_index":187,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["number",{"_index":415,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{}},"component":{}}],["object",{"_index":627,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["obscur",{"_index":669,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["obviou",{"_index":250,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["offici",{"_index":822,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["ok",{"_index":321,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["old",{"_index":301,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["older",{"_index":732,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["on",{"_index":178,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["on_clos",{"_index":129,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["onc",{"_index":694,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["open",{"_index":413,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["option",{"_index":142,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["order",{"_index":723,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["otherwis",{"_index":601,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["out",{"_index":487,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["outsid",{"_index":721,"title":{"6-28":{},"12-28":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["overrid",{"_index":536,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["overview",{"_index":0,"title":{"1-1":{},"5-1":{},"7-1":{},"11-1":{}},"name":{},"text":{},"component":{}}],["packag",{"_index":784,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["pacman",{"_index":827,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["page",{"_index":825,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["palett",{"_index":60,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["part",{"_index":268,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["pass",{"_index":194,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["past",{"_index":861,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["peer",{"_index":424,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["peopl",{"_index":248,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["perhap",{"_index":282,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["pertain",{"_index":665,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["pictur",{"_index":346,"title":{"3-1":{},"9-1":{}},"name":{},"text":{},"component":{}}],["piec",{"_index":253,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["pkg",{"_index":749,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["pkgconf",{"_index":796,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["place",{"_index":207,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["plain",{"_index":659,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["platform",{"_index":159,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["play",{"_index":69,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["plu",{"_index":740,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["plugin",{"_index":146,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["point",{"_index":311,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["popular",{"_index":786,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["port",{"_index":375,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["posit",{"_index":212,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["positions[n",{"_index":612,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["possibl",{"_index":522,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["predefin",{"_index":203,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["present",{"_index":90,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["pretti",{"_index":345,"title":{"3-1":{},"9-1":{}},"name":{},"text":{},"component":{}}],["previou",{"_index":288,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["prgram",{"_index":325,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["princip",{"_index":404,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["prioriti",{"_index":677,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["probabl",{"_index":730,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["problem",{"_index":779,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["proce",{"_index":676,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["procedur",{"_index":700,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["process",{"_index":678,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["produc",{"_index":401,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["program",{"_index":54,"title":{},"name":{},"text":{"1":{},"4":{},"6":{},"7":{},"10":{},"12":{}},"component":{}}],["project",{"_index":418,"title":{"6-9":{},"6-14":{},"6-20":{},"6-25":{},"6-28":{},"12-9":{},"12-14":{},"12-20":{},"12-25":{},"12-28":{}},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["prompt",{"_index":810,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["provid",{"_index":290,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["proxi",{"_index":546,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["purpos",{"_index":289,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["push_back",{"_index":618,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["qt",{"_index":150,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["quit",{"_index":131,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["r",{"_index":704,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["radiu",{"_index":197,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["rang",{"_index":647,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["rbox",{"_index":195,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["rbox(colors::medium_blu",{"_index":199,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["re",{"_index":706,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["realli",{"_index":791,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["rectangl",{"_index":191,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["recurs",{"_index":743,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["refin",{"_index":294,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["relat",{"_index":539,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["reli",{"_index":168,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["relocat",{"_index":215,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["render",{"_index":217,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["repeat",{"_index":699,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["requir",{"_index":379,"title":{"5-186":{},"5-192":{},"5-210":{},"5-215":{},"5-243":{},"6-1":{},"6-5":{},"6-7":{},"6-12":{},"6-18":{},"6-23":{},"11-186":{},"11-192":{},"11-210":{},"11-215":{},"11-243":{},"12-1":{},"12-5":{},"12-7":{},"12-12":{},"12-18":{},"12-23":{}},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["research",{"_index":408,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["reserv",{"_index":337,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{}},"component":{}}],["resiz",{"_index":181,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["resolut",{"_index":350,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{}},"component":{}}],["respect",{"_index":423,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{}},"component":{}}],["respons",{"_index":617,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["result",{"_index":305,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["return",{"_index":124,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["reus",{"_index":39,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["reusabl",{"_index":30,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["review",{"_index":425,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["rgba(35",{"_index":104,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["right",{"_index":336,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{}},"component":{}}],["right_margin",{"_index":258,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["rock",{"_index":400,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["round",{"_index":190,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["row",{"_index":606,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["run",{"_index":186,"title":{"6-27":{},"12-27":{}},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["s",{"_index":828,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["same",{"_index":279,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["scalar",{"_index":574,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["scale",{"_index":443,"title":{"5-54":{},"5-55":{},"11-54":{},"11-55":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["scale(scale_",{"_index":586,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["scale_",{"_index":587,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["scenario",{"_index":703,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["screen",{"_index":520,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["second",{"_index":608,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["section",{"_index":278,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["see",{"_index":233,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["seen",{"_index":193,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["select",{"_index":685,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["semant",{"_index":431,"title":{"5-8":{},"5-12":{},"5-16":{},"5-20":{},"5-24":{},"5-28":{},"5-32":{},"5-36":{},"5-40":{},"5-44":{},"5-49":{},"5-53":{},"5-58":{},"5-63":{},"5-68":{},"5-72":{},"5-76":{},"5-80":{},"5-85":{},"5-89":{},"5-93":{},"5-97":{},"5-101":{},"5-105":{},"5-109":{},"5-113":{},"5-117":{},"5-121":{},"5-125":{},"5-129":{},"5-134":{},"5-138":{},"5-142":{},"5-146":{},"5-150":{},"5-154":{},"5-158":{},"5-162":{},"5-166":{},"5-170":{},"5-174":{},"5-178":{},"5-181":{},"5-187":{},"5-194":{},"5-199":{},"5-205":{},"5-211":{},"5-217":{},"5-222":{},"5-228":{},"5-233":{},"5-238":{},"5-256":{},"11-8":{},"11-12":{},"11-16":{},"11-20":{},"11-24":{},"11-28":{},"11-32":{},"11-36":{},"11-40":{},"11-44":{},"11-49":{},"11-53":{},"11-58":{},"11-63":{},"11-68":{},"11-72":{},"11-76":{},"11-80":{},"11-85":{},"11-89":{},"11-93":{},"11-97":{},"11-101":{},"11-105":{},"11-109":{},"11-113":{},"11-117":{},"11-121":{},"11-125":{},"11-129":{},"11-134":{},"11-138":{},"11-142":{},"11-146":{},"11-150":{},"11-154":{},"11-158":{},"11-162":{},"11-166":{},"11-170":{},"11-174":{},"11-178":{},"11-181":{},"11-187":{},"11-194":{},"11-199":{},"11-205":{},"11-211":{},"11-217":{},"11-222":{},"11-228":{},"11-233":{},"11-238":{},"11-256":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["semi",{"_index":535,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["sensibl",{"_index":356,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["set",{"_index":127,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["settings→cod",{"_index":780,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["setup",{"_index":385,"title":{"6":{},"12":{}},"name":{"6":{},"12":{}},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["share",{"_index":625,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["shell",{"_index":173,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["show",{"_index":577,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["sibl",{"_index":262,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["side",{"_index":563,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["sign",{"_index":773,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["silli",{"_index":307,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["similar",{"_index":683,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["simpl",{"_index":179,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["simpli",{"_index":738,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["simplic",{"_index":841,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["simplifi",{"_index":702,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["singl",{"_index":641,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["situat",{"_index":144,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["size",{"_index":7,"title":{"1-5":{},"5-4":{},"7-5":{},"11-4":{}},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["slider",{"_index":13,"title":{"1-7":{},"7-7":{}},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["slider(thumb",{"_index":315,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["smaller",{"_index":286,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["softwar",{"_index":409,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["solut",{"_index":808,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["sophist",{"_index":43,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["sort",{"_index":610,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["sourc",{"_index":414,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["space",{"_index":495,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["special",{"_index":410,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["specif",{"_index":84,"title":{},"name":{},"text":{"1":{},"4":{},"6":{},"7":{},"10":{},"12":{}},"component":{}}],["specifi",{"_index":183,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["speed",{"_index":839,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["standard",{"_index":204,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["start",{"_index":86,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["static",{"_index":592,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["std::array",{"_index":591,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["std::vector",{"_index":613,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["std::vector'",{"_index":629,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["step",{"_index":254,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["stop",{"_index":130,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["straightforward",{"_index":378,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["stretch",{"_index":440,"title":{"5-45":{},"11-45":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["stretchi",{"_index":564,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["struct",{"_index":506,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["structur",{"_index":44,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["studio",{"_index":403,"title":{"6-15":{},"12-15":{}},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["style",{"_index":798,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["sub",{"_index":267,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["subject",{"_index":543,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["submodul",{"_index":744,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["success",{"_index":417,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["such",{"_index":149,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"7":{},"10":{},"11":{}},"component":{}}],["sudo",{"_index":835,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["suggest",{"_index":789,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["suit",{"_index":584,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["suppli",{"_index":170,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["support",{"_index":726,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["sure",{"_index":746,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["swipe",{"_index":858,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["syntax",{"_index":360,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["synth",{"_index":396,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["system",{"_index":74,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["take",{"_index":139,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["target",{"_index":377,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["tell",{"_index":51,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["term",{"_index":509,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["text",{"_index":238,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["therebi",{"_index":135,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["therefor",{"_index":363,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{}},"component":{}}],["there’",{"_index":230,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["thing",{"_index":280,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["third",{"_index":609,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["three",{"_index":578,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["through",{"_index":34,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["thumb",{"_index":300,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["tile",{"_index":470,"title":{"5-179":{},"5-193":{},"5-216":{},"11-179":{},"11-193":{},"11-216":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["time",{"_index":201,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["tip",{"_index":855,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["tool",{"_index":722,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["toolchain",{"_index":717,"title":{"6-18":{},"12-18":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["top",{"_index":642,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["track",{"_index":299,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["tri",{"_index":310,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["true",{"_index":530,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["turn",{"_index":626,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["twice",{"_index":570,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["two",{"_index":298,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["type",{"_index":529,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["typic",{"_index":174,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["ui",{"_index":673,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["under",{"_index":339,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{}},"component":{}}],["understand",{"_index":270,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["unix",{"_index":718,"title":{"6-21":{},"6-26":{},"12-21":{},"12-26":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["unlik",{"_index":684,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["until",{"_index":696,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["up",{"_index":519,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{}},"component":{}}],["us",{"_index":48,"title":{"6-9":{},"6-10":{},"6-14":{},"6-20":{},"6-21":{},"6-25":{},"6-26":{},"12-9":{},"12-10":{},"12-14":{},"12-20":{},"12-21":{},"12-25":{},"12-26":{}},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{}},"component":{}}],["usabl",{"_index":67,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["user",{"_index":134,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["util",{"_index":371,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["valign",{"_index":447,"title":{"5-77":{},"11-77":{}},"name":{},"text":{},"component":{}}],["valu",{"_index":568,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["variabl",{"_index":776,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["variou",{"_index":540,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["vcpkg",{"_index":787,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["vcpkg.bat",{"_index":795,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["vcpkg\\bootstrap",{"_index":794,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["vector",{"_index":632,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["veri",{"_index":22,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["version",{"_index":733,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["vertic",{"_index":476,"title":{"5-204":{},"5-216":{},"11-204":{},"11-216":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["vgrid",{"_index":477,"title":{"5-206":{},"11-206":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["vgrid(posit",{"_index":657,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["vgrid_composit",{"_index":478,"title":{"5-212":{},"11-212":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["view",{"_index":120,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["view_(_win",{"_index":121,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["view_.cont",{"_index":122,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["view_limit",{"_index":501,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["view_stretch",{"_index":566,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["view’",{"_index":185,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["violat",{"_index":545,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["viral",{"_index":384,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["virtual",{"_index":565,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["visual",{"_index":366,"title":{"6-15":{},"12-15":{}},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["vmargin",{"_index":464,"title":{"5-155":{},"11-155":{}},"name":{},"text":{},"component":{}}],["vmax_siz",{"_index":439,"title":{"5-41":{},"11-41":{}},"name":{},"text":{},"component":{}}],["vmax_size(height",{"_index":557,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["vmin_siz",{"_index":436,"title":{"5-29":{},"11-29":{}},"name":{},"text":{},"component":{}}],["vmin_size(height",{"_index":554,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["vs",{"_index":811,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["vsize",{"_index":433,"title":{"5-17":{},"11-17":{}},"name":{},"text":{},"component":{}}],["vsize(height",{"_index":551,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["vst",{"_index":373,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["vstretch",{"_index":442,"title":{"5-50":{},"11-50":{}},"name":{},"text":{},"component":{}}],["vstretch(stretch",{"_index":579,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["vtile",{"_index":479,"title":{"5-218":{},"11-218":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["vtile(item1",{"_index":662,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["vtile_composit",{"_index":480,"title":{"5-223":{},"11-223":{}},"name":{},"text":{"5":{},"11":{}},"component":{}}],["want",{"_index":151,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["way",{"_index":291,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["webp",{"_index":764,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["websit",{"_index":823,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["well",{"_index":70,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["we’v",{"_index":192,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["widget",{"_index":160,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["width",{"_index":531,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["window",{"_index":4,"title":{"1-3":{},"6-11":{},"6-17":{},"7-3":{},"12-11":{},"12-17":{}},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["window’",{"_index":128,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["within",{"_index":78,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{}},"component":{}}],["without",{"_index":171,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"12":{}},"component":{}}],["work",{"_index":731,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["world",{"_index":851,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["wrap",{"_index":219,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["written",{"_index":352,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["x",{"_index":223,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["x64/x86",{"_index":812,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["x=0",{"_index":604,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["xcode",{"_index":711,"title":{"6-10":{},"12-10":{}},"name":{},"text":{"6":{},"12":{}},"component":{}}],["y",{"_index":226,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"11":{},"12":{}},"component":{}}],["you’d",{"_index":848,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["z",{"_index":664,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}],["zero",{"_index":272,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{}},"component":{}}],["zlib",{"_index":756,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["zoom",{"_index":588,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"The key design aspects of the Elements C++ GUI library are: Modular: Elements is very lightweight and extremely modular, facilitating the composition of fine-grained, flyweight, and reusable ``elements'' into complex element hierarchies. This is achieved through a declarative interface with heavy emphasis on reuse, allowing developers to build sophisticated GUI structures efficiently. Declarative: Elements exposes a declarative API using modern C++. Declarative C++ code tells you what rather than how (contrasting with imperative programming which involves control flow). There are no code generators. The GUI is declared entirely in C++ code. After a while, code reuse, using a palette of fine-grained elements, becomes very familiar and intuitive, much like using HTML. Interoperable: Elements is usable in any application and plays well with other GUI libraries and frameworks. The library is loosely coupled with the application and windowing system and can co-exist with components within a host. It should be easy to integrate Elements with any existing application. This document will demonstrate the modular and declarative design aspects of the Elements library through examples. Specific examples should make it clear. Let’s start with a basic window with a dark grey background. The examples presented here can be found in this link: https://github.com/cycfi/elements/tree/master/examples/doc_aspects #include using namespace cycfi::elements; // Main window background color auto constexpr bkd_color = rgba(35, 35, 37, 255); auto background = box(bkd_color); int main(int argc, const char* argv[]) { app _app(argc, argv); window _win(_app.name()); _win.on_close = [&_app]() {_app.stop();}; view view_(_win); view_.content( background ); _app.run(); return 0; } Here, we create an app and a window, and set the window’s on_close to stop (quit) the application. _win.on_close is called when the window is closed by the user, thereby quitting the application. Like any other GUI library or framework, the app manages the main event loop, while the window manages application windows. However, take note that the app and the window classes are optional. There are certain situations, like e.g. building plugins or incorporating Elements in another framework such as QT, where you do not want Elements to manage the event loop or windows. The important class of interest here is the view. In these cases, you want to embed the view directly. You can directly construct a view given a platform window (or widget), as its main content view or child window (or widget). The view does not know anything about drawing or user interaction. Instead, it relies on its client supplied content to do these. Without any content, it is an empty shell. And so this is where it starts to get interesting. The content of the view typically contains multiple layers, much like typical graphics applications. In this example, we only have one layer: the background. auto background = box(bkd_color); It is a simple, infinitely resizable box with the specified color: rgba(35, 35, 37, 255). It will resize automatically when the window is resized. We set it as the view’s content: view_.content( background ); Running this example, you get: Now let’s add a blue round rectangle. We’ve seen how to create a box: the background using box, passing in a color. A rounded box is created using rbox, passing in the color and the corner radius: auto blue_rbox = rbox(colors::medium_blue, 10); The color, this time, is specified by name from the colors namespace. The namespace includes all predefined colors from the standard HTML Color Names. We can actually use blue_rbox already, as-is, by placing it in another layer in the view: view_.content( blue_rbox, background ); But like the box, the rbox is infinitely resizable and will hog the entire window. What we want is to give it a specific size and center it in the window. Elements are very lightweight. Most elements do not even have a size, nor know their position in the view (elements without position information are inherently relocatable —they can be placed anywhere; the position is supplied at rendering time). So we give it a 100x50 size by wrapping it in the fixed_size element: auto blue_rbox = fixed_size( {100, 50}, rbox(colors::medium_blue, 10) ); And then we align it centered (in the x axis) and middle (in the Y axis) using the align_center_middle element: auto blue_rbox = align_center_middle( fixed_size( {100, 50}, rbox(colors::medium_blue, 10) ) ); Without the alignment element, the main window would have been constrained to a fixed 100x50 size. There’s a multitude of alignment elements available. See Layout. So now, we are seeing how fine-grained elements are composed. The rbox is placed inside the fixed_size element which is then placed inside a align_center_middle element. Let’s run this example: Our goal this time is to place some text inside the blue box. The element we will use is the label. Most elements do not have a size, but as an exception, labels (simple text elements) do. So, instead of fixing the size of the box using fixed_size, we place the label alongside the box in a layer element, but add some margin around the label. Here’s how you do it: auto blue_rbox = align_center_middle( layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ) ); If it’s not obvious yet, let’s take it apart into its constituent pieces: Step 1: We make a label: label(\"“Dogs are my favorite people”\") Step 2: We add margin around it: margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ) Note that like the align elements, there’s a multitude of margins such as left_margin, right_margin, etc. Step 3: We make a blue rounded box: rbox(colors::medium_blue, 10) Step 4: We place the label and the blue rounded box as siblings in a layer element: layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ) Step 4: Then finally, we place it in the align_center_middle element. If the element hierarchy gets a bit too deep, use the C++ auto to name sub-parts of the element composition to make it easier to understand. The layer element is a composite element that holds zero or more child' elements. Some of you might have noticed that we already mentioned the `layer element before when we were discussing the view’s content in the App and Window section: `The content of the `view typically contains multiple layers, much like typical graphics applications''. Well, actually, this is the same layer thing here. The view’s main content is a layer element. So now we have: To demonstrate the fine-grained and modular nature of Elements, it is perhaps illustrative to say that many components in Elements, including the slider element, are not atomic and are actually composed of smaller parts. In this section, we will see how one creates a slider from the basic parts that we have dealt with in the previous sections. Take note that this example is only for illustrative purposes. The library provides easier ways to make sliders. Elements has a gallery a collection of reusable element compositions, just like what we do here, but more refined. That gallery is constantly growing. Composing elements is fun! The slider has two parts: the track and the thumb. Here, we make a simple track using the same old box. We made it black. Then, we reused the same ``Dogs are my favorite people'' label for the thumb. The result looks silly, I should say :blush:, but hey, we are trying to make a point! auto track = hsize(10, box(colors::black)); auto thumb = layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ); auto funny_slider = slider(thumb, track); And here it is in action: Now, like before, we add our funny slider to our view: view_.content( align_center(funny_slider), background ); But note that, in this case, we want to center the slider only horizontally, so we use align_center instead of align_center_middle. Ok, there you go! Now go and be creative and make your own controls! Here’s the complete prgram: #include using namespace cycfi::elements; using cycfi::artist::rgba; namespace colors = cycfi::artist::colors; // Main window background color auto constexpr bkd_color = rgba(35, 35, 37, 255); auto background = box(bkd_color); auto track = hsize(10, box(colors::black)); auto thumb = layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), margin( {5, 5, 5, 5}, rbox(colors::medium_blue, 10) ) ); auto funny_slider = slider(thumb, track); int main(int argc, char* argv[]) { app _app(\"Aspects\"); window _win(_app.name()); _win.on_close = [&_app]() { _app.stop(); }; view view_(_win); view_.content( align_center(funny_slider), background ); _app.run(); return 0; } Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Design Aspects","component":"elements","version":"master","name":"aspects","url":"/elements/aspects.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Minimal Example","hash":"_minimal_example","id":2},{"text":"App and Window","hash":"_app_and_window","id":3},{"text":"Background","hash":"_background","id":4},{"text":"Aligns and Sizes","hash":"_aligns_and_sizes","id":5},{"text":"Labels, Margins and Layers","hash":"_labels_margins_and_layers","id":6},{"text":"Let’s Make a Slider","hash":"_lets_make_a_slider","id":7}]},"2":{"id":2,"text":"","title":"","component":"elements","version":"master","name":"common","url":"/elements/common.html","titles":[]},"3":{"id":3,"text":"Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Gallery","component":"elements","version":"master","name":"gallery","url":"/elements/gallery.html","titles":[{"text":"It’s always a nice to have some pretty pictures:","hash":"_its_always_a_nice_to_have_some_pretty_pictures","id":1}]},"4":{"id":4,"text":"Elements is a lightweight, fine-grained, resolution-independent, extremely modular GUI library. The library is written using modern C++17 language features. It has a declarative interface with a sensible and easy-to-use Domain Specific Embedded Languages (DSEL) syntax for constructing the GUI elements. A declarative description of the GUI is written exclusively in C++, and therefore, there is no need for an external visual GUI editor or code generator. Elements is embeddable, meaning you can embed it in any application, and it will play well with other GUI libraries and frameworks. This also implies that you can utilize it for the creation of plugins. It does not own the event loop and is able to co-exist with components within a plugin host, such as VST and AU. Porting to a new host target is straightforward, requiring the porting of only a few files. Elements is distributed under the liberal and non-viral MIT License. Gallery Setup and Installation Design Aspects Layout Joel got into electronics and programming in the 80s because almost everything in music, his first love, is becoming electronic and digital. Since then, he builds his own guitars, effect boxes and synths. He enjoys playing distortion-laden rock guitar, composes and produces his own music in his home studio. Joel de Guzman is the principal architect and engineer at Cycfi Research. He is a software engineer specializing in advanced C++ and an advocate of Open Source. He has authored a number of highly successful Open Source projects such as Boost.Spirit, Boost.Phoenix and Boost.Fusion. These libraries are all part of the Boost Libraries, a well respected, peer-reviewed, Open Source, collaborative development effort. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Elements C++ GUI library","component":"elements","version":"master","name":"index","url":"/elements/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Documentation","hash":"_documentation","id":2},{"text":"The Author","hash":"_the_author","id":3}]},"5":{"id":5,"text":"The Elements Library provides a comprehensive set of elements for laying out elements in the view. Each element provides information on how it wants to be sized by means of min and max limits: a hint that determine its actual extent and how it will be placed in the view depending on available window space. The element’s limits member function determines the minimum and maximum extents of an element: view_limits limits(basic_context const& ctx) const; See Context for information about basic_context. view_limits is a struct that gives us the min and max information: struct view_limits { point min = {0.0, 0.0}; point max = {full_extent, full_extent}; }; For the purpose of this document, we will use these terms and expressions: limits The limits of an element limits.min The minimum limits of an element limits.min.x The minimum horizontal limit of an element limits.min.y The minimum vertical limit of an element limits.max The maximum limits of an element limits.max.x The maximum horizontal limit of an element limits.max.y The maximum vertical limit of an element horizontal limits (limits.min.x, limits.max.x) vertical limits (limits.min.y, limits.max.y) minimum limits (limits.min.x, limits.min.y) maximum limits (limits.max.x, limits.max.y) minimum horizontal limit limits.min.x maximum horizontal limit limits.max.x minimum vertical limit limits.min.y maximum vertical limit limits.max.y By default, an element has full limits: it is infinitely resizable: constexpr view_limits full_limits = { {0.0, 0.0} , {full_extent, full_extent} }; An element with full_limits can be resized from an empty point (zero x and y size) up to the full extent of the screen, and beyond (if possible). full_extent is actually an implementation defined huge number near the maximum limits of the coordinate’s data type (also implementation defined). An element has a fixed horizontal size if this expression is true: limits.min.x == limits.max.x. An element has a fixed vertical size if this expression is true: limits.min.y == limits.max.y. {{100, 100}, {100, 100}}; // Fixed size {{100, 100}, {100, full_extent}}; // Fixed width, flexible height {{100, 100}, {100, 200}}; // Fixed width, semi-flexible height (100 to 200) Size elements override the limits of an enclosed element. There is a comprehensive list of size related elements in the Elements Library that can be used for various purposes. This section catalogues all the available size elements. Overrides the limits of an element. limit(limits, subject) limits Instance of view_limits subject Instance of Element The limits of subject will be set to the specified limits constrained by the natural limits of the subject (the natural limits of the element will not be violated). Returns instance of Proxy. Fixes the size of an enclosed element (subject). fixed_size({width, height}, subject) width, height float subject Instance of Element subject will be laid out with a fixed width and height, constrained by the natural limits of the subject (the natural limits of the element will not be violated). Returns instance of Proxy. Fixes the horizontal size of an enclosed element (subject). hsize(width, subject) width float subject Instance of Element subject will be laid out with a fixed width, constrained by the natural horizontal limits of the subject (the natural horizontal limits of the element will not be violated). The natural vertical limits of subject will not be affected. Returns instance of Proxy. Fixes the vertical limits of an enclosed element (subject). vsize(height, subject) height float subject Instance of Element subject will be laid out with a fixed height, constrained by the natural vertical limits of the subject (the natural vertical limits of the element will not be violated). The natural horizontal limits of subject will not be affected. Returns instance of Proxy. Overrides the minimum limits of an enclosed element (subject). min_size({width, height}, subject) width, height float subject Instance of Element The minimum limits of subject will be set to the specified width and height, constrained by the natural minimum limits of the subject. the natural minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the minimum horizontal limit of an enclosed element (subject). hmin_size(width, subject) width float subject Instance of Element The minimum horizontal limit of subject will be set to the specified width constrained by the natural horizontal minimum limits of the subject. The natural horizontal minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the minimum vertical limit of an enclosed element (subject). vmin_size(height, subject) height float subject Instance of Element The minimum vertical limit of subject will be set to the specified height constrained by the natural vertical minimum limits of the subject. The natural vertical minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the maximum limits of an enclosed element (subject). max_size({width, height}, subject) width, height float subject Instance of Element The maximum limits of subject will be set to the specified width and height, constrained by the natural maximum limits of the subject. The natural maximum limits of the element will not be violated. Returns instance of Proxy. Overrides the maximum horizontal limit of an enclosed element (subject). hmax_size(width, subject) width float subject Instance of Element The maximum horizontal limit of subject will be set to the specified width constrained by the natural maximum horizontal limit of the subject. The natural maximum horizontal limit of the element will not be violated. Returns instance of Proxy. Overrides the maximum vertical limit of an enclosed element (subject). vmax_size(height, subject) height float subject Instance of Element The maximum vertical limit of subject will be set to the specified height constrained by the natural maximum vertical limit of the subject The natural maximum vertical limit of the element will not be violated. Returns instance of Proxy. Resizable elements are elements with minimum limits that are less than the maximum limits in either x or y dimensions or both. Resizable elements can therefore stretch if there is extra available space allocated to it beyond its minimum limit. When two or more resizable elements are placed side by side in an htile or vtile, the element’s \"stretchiness\" determines how much extra space is given to it. The element’s \"stretchiness\" is determined by the element’s stretch member function: virtual view_stretch stretch() const; where view_stretch is a struct declared as: struct view_stretch { float x = 1.0; float y = 1.0; }; The view_stretch x and y members determine how much an element can stretch in the x or y dimensions. The default is 1.0. A stretchiness value of 2.0 means that the element is able to stretch twice as much compared to its siblings in an htile or vtile, assuming they have the default 1.0 stretchiness. Overrides the horizontal stretchiness of an an enclosed element (subject). hstretch(stretch, subject) stretch A scalar value subject Instance of Element The subject will assume the given stretch value. The stretch value has no effect to elements with fixed horizontal size. Returns instance of Proxy. For example, the image below shows how three elements are laid out in an htile, with stretch values of 1.0, 1.0 and 2.0, respectively: The element with the 2.0 stretch value stretches twice as much compared to its siblings. Overrides the vertical stretchiness of an an enclosed element (subject). vstretch(stretch, subject) stretch A scalar value subject Instance of Element The subject will assume the given stretch value. The stretch value has no effect to elements with fixed vertical limits. Returns instance of Proxy. For example, the image below shows how three elements are laid out in an htile, with stretch values of 0.5, 1.0 and 1.5, respectively: The element with the 0.5 stretch value stretches half less, while the element with the 1.5 stretches half more than the default. The Elements Library is resolution independent and elements can be scaled up or down to suit. The default scale is 1.0 (no scale). The scale element changes the scale of its enclosed element (subject). scale(scale_, subject) scale_ float subject Instance of Element The subject will scaled given the scale_ value. A value > 1.0 scales the element up (zoom in), while a value . Elements e1,...eN are held in a std::array managed by the horizontal grid element. static float positions[] = {0.25, 0.5, 0.75, 1.0}; //... hgrid(positions, item1, item2, item3, item4) If the number of elements is not fixed, you can use an hgrid_composite (see below). The number of supplied positions and elements should match, otherwise, compiler error (no matching function for call to hgrid). The positions assume the first element is at x=0 (it is at the left-most position in the row). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] c Instance of type hgrid_composite The hgrid_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use hgrid_composite just as you would a std::vector, such as push_back a child element. Just keep in mind that we are dealing with element_ptr items. c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in hgrid_composite. hgrid_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The number of items in the external coordinates vector positions must match with the number of elements at any given time. The positions assume the first element is at x=0 (it is at the left-most position in the row). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] managed by the horizontal tile element. htile(item1, item2, item3, item4) If the number of elements is not fixed, you can use an htile_composite (see below). In addition to the semantics of Horizontal Tiles, returns instance of Composite. Create a horizontal tile with an indeterminate (dynamic) number of elements. htile_composite c; c Instance of type htile_composite The htile_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use htile_composite just as you would a std::vector, such as push_back a child element. Just keep in mind that we are dealing with element_ptr items. c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in htile_composite. htile_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Vertical Grids are composites that lay out one or more child elements in a column following externally supplied vertical fractional positions. Vertical Grids have computed horizontal and vertical sizes following the natural limits of its children. The elements are laid out in a single column, top to bottom, immediately next to each other with no intervening space. The elements are positioned vertically using the supplied fractional positions. The fractional positions values range from 0.0 to 1.0, which specify the child element’s vertical position from top (0.0) to bottom (1.0). The grid’s minimum horizontal limit is computed as the maximum of the children elements' minimum horizontal limits. The grid’s maximum horizontal limit is computed as the minumum of the children elements' maximum horizontal limits. The final computed minimum limit is clamped to ensure it is not greater than the computed maximum limit. Likewise the computed maximum limit is clamped to ensure it is not less than the computed minimum limit. The supplied (vertical) positions and computed (horizontal) coordinates may violate the limits of its children elements. If the allocated size of a child element is lower than the element’s minimum limits in either dimension, the element will be cropped. If a child element’s maximum limits in either dimension is exceeded, the element will be aligned to the top-left. Build a vertical grid with a fixed number of elements. vgrid(positions, e1,...eN) N The number of items e1,...eN One or more child elements, instances of Element (more below) positions External container of fractional positions (more below) The External container, positions is an external can either be a plain array of type float[N] or std::array. Elements e1,...eN are held in a std::array managed by the vertical grid element. static float positions[] = {0.25, 0.5, 0.75, 1.0}; //... vgrid(positions, item1, item2, item3, item4) If the number of elements is not fixed, you can use an vgrid_composite (see below). The number of supplied coordinates and elements should match, otherwise, compiler error (no matching function for call to vgrid). The positions assume the first element is at x=0 (it is at the top-most position in the column). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] c Instance of type vgrid_composite The vgrid_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use vgrid_composite just as you would a std::vector, such as push_back a child element. Just keep in mind that we are dealing with element_ptr items. Example: c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in vgrid_composite. vgrid_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The number of items in the external coordinates vector positions must match with the number of elements at any given time. The positions assume the first element is at x=0 (it is at the top-most position in the column). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] managed by the vertical tile element. vtile(item1, item2, item3, item4) If the number of elements is not fixed, you can use an vtile_composite (see below). In addition to the semantics of Vertical Tiles, returns instance of Composite. Create a vertical tile with an indeterminate (dynamic) number of elements: vtile_composite c; c Instance of type vtile_composite The vtile_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use vtile_composite just as you would a std::vector, such as push_back a child element. Just keep in mind that we are dealing with element_ptr items. c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in vtile_composite. vtile_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The Elements Library is 2D, but the z-axis pertains to top-to-bottom layering. Layers allow groups of elements to be placed in the z-axis where higher-level elements obscure or hide lower-level elements. The elements are laid out in the z-axis, top to bottom. Rendering is done bottom-up; the bottom-most elements are drawn first. UI control (such as mouse clicks) proceeds from top to bottom. Higher-level elements are given control priority. If a higher-level element does not process the event, lower-level elements are given a chance. The layer’s minimum limit is computed as the maximum of the children elements' minimum limits. The layer’s maximum limit is computed as the minimum of the children elements' maximum limits. The final computed minimum limit is clamped to ensure it is not greater than the computed maximum limit. Likewise the computed maximum limit is clamped to ensure it is not less than the computed minimum limit. The computed (vertical) and (horizontal) coordinates may violate the limits of its children elements. If the allocated size of a child element is lower than the element’s minimum limits in either dimension, the element will be cropped. If a child element’s maximum limits in either dimension is exceeded, the element will be aligned to the top-left. Create a layer composite with a fixed number of elements. layer(e1,...eN) N The number of items e1,...eN One or more child elements, instances of Element (more below) Elements e1,...eN are held in a std::array managed by the layer element. layer(item1, item2, item3, item4) If the number of elements is not fixed, you can use an layer_composite (see below). In addition to the semantics of Layers, returns instance of Composite. Create a layer with an indeterminate (dynamic) number of elements: layer_composite c; c Instance of type layer_composite The layer_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use layer_composite just as you would a std::vector, such as push_back a child element. Just keep in mind that we are dealing with element_ptr items. c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in layer_composite. layer_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The Deck is very similar to layers. Elements are placed in the z-axis. But unlike layers, only the selected element is active (top-most by default). Everything listed in the layer’s Semantics, except 2 and 3. Only the active selected element element is drawn. Only the active selected element is given the chance to process UI control. Create a deck composite with a fixed number of elements. deck(e1, e2, e3... eN) N The number of items e1,...eN One or more child elements, instances of Element (more below) Elements e1,...eN are held in a std::array managed by the deck element. deck(item1, item2, item3, item4) If the number of elements is not fixed, you can use an deck_composite (see below). In addition to the semantics of Deck, returns instance of Composite. Create a deck with an indeterminate (dynamic) number of elements: deck_composite c; c Instance of type deck_composite The deck_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use deck_composite just as you would a std::vector, such as push_back a child element. Just keep in mind that we are dealing with element_ptr items. c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in deck_composite. deck_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The flow element, is a composite that lays out its children much like the way text is laid out: lay out each element from left to right, fitting as much elements as possible following each child’s maximum horizontal limit. Once a row is full, move to the next row and do the same until the end of the row is filled. Repeat the procedure until all the elements are laid out. The height of each row is determined by the maximum vertical limit of all the elements to be laid out in that row. The following graphic depicts a simplified layout scenario for child elements a to r. The child elements arranged in a flow composite are automatically re-flowed (re-lay-out) when the view size changes. To have elements laid out using flow, you need to make a flow_composite. Create a flow_composite with an indeterminate (dynamic) number of elements. flow_composite c; c Instance of type flow_composite The flow_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use flow_composite just as you would a std::vector, such as push_back a child element, child. Just keep in mind that we are dealing with element_ptr items. c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in flow_composite. flow_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Once we have a flow_composite, we can place its contents in a flow element. flow(c) c Instance of flow_composite Returns instance of Composite. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Layout","component":"elements","version":"master","name":"layout","url":"/elements/layout.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Limits","hash":"_limits","id":2},{"text":"Examples","hash":"_examples","id":3},{"text":"Size Elements","hash":"_size_elements","id":4},{"text":"limit","hash":"_limit","id":5},{"text":"Expression","hash":"_expression","id":6},{"text":"Notation","hash":"_notation","id":7},{"text":"Semantics","hash":"_semantics","id":8},{"text":"fixed_size","hash":"_fixed_size","id":9},{"text":"Expression","hash":"_expression_2","id":10},{"text":"Notation","hash":"_notation_2","id":11},{"text":"Semantics","hash":"_semantics_2","id":12},{"text":"hsize","hash":"_hsize","id":13},{"text":"Expression","hash":"_expression_3","id":14},{"text":"Notation","hash":"_notation_3","id":15},{"text":"Semantics","hash":"_semantics_3","id":16},{"text":"vsize","hash":"_vsize","id":17},{"text":"Expression","hash":"_expression_4","id":18},{"text":"Notation","hash":"_notation_4","id":19},{"text":"Semantics","hash":"_semantics_4","id":20},{"text":"min_size","hash":"_min_size","id":21},{"text":"Expression","hash":"_expression_5","id":22},{"text":"Notation","hash":"_notation_5","id":23},{"text":"Semantics","hash":"_semantics_5","id":24},{"text":"hmin_size","hash":"_hmin_size","id":25},{"text":"Expression","hash":"_expression_6","id":26},{"text":"Notation","hash":"_notation_6","id":27},{"text":"Semantics","hash":"_semantics_6","id":28},{"text":"vmin_size","hash":"_vmin_size","id":29},{"text":"Expression","hash":"_expression_7","id":30},{"text":"Notation","hash":"_notation_7","id":31},{"text":"Semantics","hash":"_semantics_7","id":32},{"text":"max_size","hash":"_max_size","id":33},{"text":"Expression","hash":"_expression_8","id":34},{"text":"Notation","hash":"_notation_8","id":35},{"text":"Semantics","hash":"_semantics_8","id":36},{"text":"hmax_size","hash":"_hmax_size","id":37},{"text":"Expression","hash":"_expression_9","id":38},{"text":"Notation","hash":"_notation_9","id":39},{"text":"Semantics","hash":"_semantics_9","id":40},{"text":"vmax_size","hash":"_vmax_size","id":41},{"text":"Expression","hash":"_expression_10","id":42},{"text":"Notation","hash":"_notation_10","id":43},{"text":"Semantics","hash":"_semantics_10","id":44},{"text":"Stretch Elements","hash":"_stretch_elements","id":45},{"text":"hstretch","hash":"_hstretch","id":46},{"text":"Expression","hash":"_expression_11","id":47},{"text":"Notation","hash":"_notation_11","id":48},{"text":"Semantics","hash":"_semantics_11","id":49},{"text":"vstretch","hash":"_vstretch","id":50},{"text":"Expression","hash":"_expression_12","id":51},{"text":"Notation","hash":"_notation_12","id":52},{"text":"Semantics","hash":"_semantics_12","id":53},{"text":"Scale Element","hash":"_scale_element","id":54},{"text":"scale","hash":"_scale","id":55},{"text":"Expression","hash":"_expression_13","id":56},{"text":"Notation","hash":"_notation_13","id":57},{"text":"Semantics","hash":"_semantics_13","id":58},{"text":"Align Elements","hash":"_align_elements","id":59},{"text":"halign","hash":"_halign","id":60},{"text":"Expression","hash":"_expression_14","id":61},{"text":"Notation","hash":"_notation_14","id":62},{"text":"Semantics","hash":"_semantics_14","id":63},{"text":"Examples","hash":"_examples_2","id":64},{"text":"align_left","hash":"_align_left","id":65},{"text":"Expression","hash":"_expression_15","id":66},{"text":"Notation","hash":"_notation_15","id":67},{"text":"Semantics","hash":"_semantics_15","id":68},{"text":"align_center","hash":"_align_center","id":69},{"text":"Expression","hash":"_expression_16","id":70},{"text":"Notation","hash":"_notation_16","id":71},{"text":"Semantics","hash":"_semantics_16","id":72},{"text":"align_right","hash":"_align_right","id":73},{"text":"Expression","hash":"_expression_17","id":74},{"text":"Notation","hash":"_notation_17","id":75},{"text":"Semantics","hash":"_semantics_17","id":76},{"text":"valign","hash":"_valign","id":77},{"text":"Expression","hash":"_expression_18","id":78},{"text":"Notation","hash":"_notation_18","id":79},{"text":"Semantics","hash":"_semantics_18","id":80},{"text":"Examples","hash":"_examples_3","id":81},{"text":"align_top","hash":"_align_top","id":82},{"text":"Expression","hash":"_expression_19","id":83},{"text":"Notation","hash":"_notation_19","id":84},{"text":"Semantics","hash":"_semantics_19","id":85},{"text":"align_middle","hash":"_align_middle","id":86},{"text":"Expression","hash":"_expression_20","id":87},{"text":"Notation","hash":"_notation_20","id":88},{"text":"Semantics","hash":"_semantics_20","id":89},{"text":"align_bottom","hash":"_align_bottom","id":90},{"text":"Expression","hash":"_expression_21","id":91},{"text":"Notation","hash":"_notation_21","id":92},{"text":"Semantics","hash":"_semantics_21","id":93},{"text":"align_left_top","hash":"_align_left_top","id":94},{"text":"Expression","hash":"_expression_22","id":95},{"text":"Notation","hash":"_notation_22","id":96},{"text":"Semantics","hash":"_semantics_22","id":97},{"text":"align_center_top","hash":"_align_center_top","id":98},{"text":"Expression","hash":"_expression_23","id":99},{"text":"Notation","hash":"_notation_23","id":100},{"text":"Semantics","hash":"_semantics_23","id":101},{"text":"align_right_top","hash":"_align_right_top","id":102},{"text":"Expression","hash":"_expression_24","id":103},{"text":"Notation","hash":"_notation_24","id":104},{"text":"Semantics","hash":"_semantics_24","id":105},{"text":"align_left_middle","hash":"_align_left_middle","id":106},{"text":"Expression","hash":"_expression_25","id":107},{"text":"Notation","hash":"_notation_25","id":108},{"text":"Semantics","hash":"_semantics_25","id":109},{"text":"align_center_middle","hash":"_align_center_middle","id":110},{"text":"Expression","hash":"_expression_26","id":111},{"text":"Notation","hash":"_notation_26","id":112},{"text":"Semantics","hash":"_semantics_26","id":113},{"text":"align_right_middle","hash":"_align_right_middle","id":114},{"text":"Expression","hash":"_expression_27","id":115},{"text":"Notation","hash":"_notation_27","id":116},{"text":"Semantics","hash":"_semantics_27","id":117},{"text":"align_left_bottom","hash":"_align_left_bottom","id":118},{"text":"Expression","hash":"_expression_28","id":119},{"text":"Notation","hash":"_notation_28","id":120},{"text":"Semantics","hash":"_semantics_28","id":121},{"text":"align_center_bottom","hash":"_align_center_bottom","id":122},{"text":"Expression","hash":"_expression_29","id":123},{"text":"Notation","hash":"_notation_29","id":124},{"text":"Semantics","hash":"_semantics_29","id":125},{"text":"align_right_bottom","hash":"_align_right_bottom","id":126},{"text":"Expression","hash":"_expression_30","id":127},{"text":"Notation","hash":"_notation_30","id":128},{"text":"Semantics","hash":"_semantics_30","id":129},{"text":"Margin Elements","hash":"_margin_elements","id":130},{"text":"margin","hash":"_margin","id":131},{"text":"Expression","hash":"_expression_31","id":132},{"text":"Notation","hash":"_notation_31","id":133},{"text":"Semantics","hash":"_semantics_31","id":134},{"text":"margin_left","hash":"_margin_left","id":135},{"text":"Expression","hash":"_expression_32","id":136},{"text":"Notation","hash":"_notation_32","id":137},{"text":"Semantics","hash":"_semantics_32","id":138},{"text":"margin_right","hash":"_margin_right","id":139},{"text":"Expression","hash":"_expression_33","id":140},{"text":"Notation","hash":"_notation_33","id":141},{"text":"Semantics","hash":"_semantics_33","id":142},{"text":"margin_top","hash":"_margin_top","id":143},{"text":"Expression","hash":"_expression_34","id":144},{"text":"Notation","hash":"_notation_34","id":145},{"text":"Semantics","hash":"_semantics_34","id":146},{"text":"margin_bottom","hash":"_margin_bottom","id":147},{"text":"Expression","hash":"_expression_35","id":148},{"text":"Notation","hash":"_notation_35","id":149},{"text":"Semantics","hash":"_semantics_35","id":150},{"text":"hmargin","hash":"_hmargin","id":151},{"text":"Expressions","hash":"_expressions","id":152},{"text":"Notation","hash":"_notation_36","id":153},{"text":"Semantics","hash":"_semantics_36","id":154},{"text":"vmargin","hash":"_vmargin","id":155},{"text":"Expressions","hash":"_expressions_2","id":156},{"text":"Notation","hash":"_notation_37","id":157},{"text":"Semantics","hash":"_semantics_37","id":158},{"text":"margin_left_top","hash":"_margin_left_top","id":159},{"text":"Expressions","hash":"_expressions_3","id":160},{"text":"Notation","hash":"_notation_38","id":161},{"text":"Semantics","hash":"_semantics_38","id":162},{"text":"margin_left_bottom","hash":"_margin_left_bottom","id":163},{"text":"Expressions","hash":"_expressions_4","id":164},{"text":"Notation","hash":"_notation_39","id":165},{"text":"Semantics","hash":"_semantics_39","id":166},{"text":"margin_right_top","hash":"_margin_right_top","id":167},{"text":"Expressions","hash":"_expressions_5","id":168},{"text":"Notation","hash":"_notation_40","id":169},{"text":"Semantics","hash":"_semantics_40","id":170},{"text":"margin_right_bottom","hash":"_margin_right_bottom","id":171},{"text":"Expressions","hash":"_expressions_6","id":172},{"text":"Notation","hash":"_notation_41","id":173},{"text":"Semantics","hash":"_semantics_41","id":174},{"text":"Floating Element","hash":"_floating_element","id":175},{"text":"Expression","hash":"_expression_36","id":176},{"text":"Notation","hash":"_notation_42","id":177},{"text":"Semantics","hash":"_semantics_42","id":178},{"text":"Tiles and Grids","hash":"_tiles_and_grids","id":179},{"text":"Horizontal Grids","hash":"_horizontal_grids","id":180},{"text":"Semantics","hash":"_semantics_43","id":181},{"text":"hgrid","hash":"_hgrid","id":182},{"text":"Expression","hash":"_expression_37","id":183},{"text":"Notation","hash":"_notation_43","id":184},{"text":"Example","hash":"_example","id":185},{"text":"Requirements","hash":"_requirements","id":186},{"text":"Semantics","hash":"_semantics_44","id":187},{"text":"hgrid_composite","hash":"_hgrid_composite","id":188},{"text":"Expression","hash":"_expression_38","id":189},{"text":"Notation","hash":"_notation_44","id":190},{"text":"Example","hash":"_example_2","id":191},{"text":"Requirements","hash":"_requirements_2","id":192},{"text":"Horizontal Tiles","hash":"_horizontal_tiles","id":193},{"text":"Semantics","hash":"_semantics_45","id":194},{"text":"htile","hash":"_htile","id":195},{"text":"Expression","hash":"_expression_39","id":196},{"text":"Notation","hash":"_notation_45","id":197},{"text":"Example:","hash":"_example_3","id":198},{"text":"Semantics","hash":"_semantics_46","id":199},{"text":"htile_composite","hash":"_htile_composite","id":200},{"text":"Expression","hash":"_expression_40","id":201},{"text":"Notation","hash":"_notation_46","id":202},{"text":"Example","hash":"_example_4","id":203},{"text":"Vertical Grids","hash":"_vertical_grids","id":204},{"text":"Semantics","hash":"_semantics_47","id":205},{"text":"vgrid","hash":"_vgrid","id":206},{"text":"Expression","hash":"_expression_41","id":207},{"text":"Notation","hash":"_notation_47","id":208},{"text":"Example","hash":"_example_5","id":209},{"text":"Requirements","hash":"_requirements_3","id":210},{"text":"Semantics","hash":"_semantics_48","id":211},{"text":"vgrid_composite","hash":"_vgrid_composite","id":212},{"text":"Expression","hash":"_expression_42","id":213},{"text":"Notation","hash":"_notation_48","id":214},{"text":"Requirements","hash":"_requirements_4","id":215},{"text":"Vertical Tiles","hash":"_vertical_tiles","id":216},{"text":"Semantics","hash":"_semantics_49","id":217},{"text":"vtile","hash":"_vtile","id":218},{"text":"Expression","hash":"_expression_43","id":219},{"text":"Notation","hash":"_notation_49","id":220},{"text":"Example","hash":"_example_6","id":221},{"text":"Semantics","hash":"_semantics_50","id":222},{"text":"vtile_composite","hash":"_vtile_composite","id":223},{"text":"Expression","hash":"_expression_44","id":224},{"text":"Notation","hash":"_notation_50","id":225},{"text":"Example","hash":"_example_7","id":226},{"text":"Layers","hash":"_layers","id":227},{"text":"Semantics","hash":"_semantics_51","id":228},{"text":"layer","hash":"_layer","id":229},{"text":"Expression","hash":"_expression_45","id":230},{"text":"Notation","hash":"_notation_51","id":231},{"text":"Example","hash":"_example_8","id":232},{"text":"Semantics","hash":"_semantics_52","id":233},{"text":"layer_composite","hash":"_layer_composite","id":234},{"text":"Notation","hash":"_notation_52","id":235},{"text":"Example","hash":"_example_9","id":236},{"text":"Decks","hash":"_decks","id":237},{"text":"Semantics","hash":"_semantics_53","id":238},{"text":"deck","hash":"_deck","id":239},{"text":"Expression","hash":"_expression_46","id":240},{"text":"Notation","hash":"_notation_53","id":241},{"text":"Example","hash":"_example_10","id":242},{"text":"Requirements","hash":"_requirements_5","id":243},{"text":"deck_composite","hash":"_deck_composite","id":244},{"text":"Expression","hash":"_expression_47","id":245},{"text":"Notation","hash":"_notation_54","id":246},{"text":"Example","hash":"_example_11","id":247},{"text":"Flow Element","hash":"_flow_element","id":248},{"text":"flow_composite","hash":"_flow_composite","id":249},{"text":"Expression","hash":"_expression_48","id":250},{"text":"Notation","hash":"_notation_55","id":251},{"text":"Example","hash":"_example_12","id":252},{"text":"flow","hash":"_flow","id":253},{"text":"Expression","hash":"_expression_49","id":254},{"text":"Notation","hash":"_notation_56","id":255},{"text":"Semantics","hash":"_semantics_54","id":256}]},"6":{"id":6,"text":"Here are the basic tools that you need in order to use the library: A C++17 compiler Git CMake 3.15 or higher Elements currently supports the MacOS, Windows and Linux. In the Mac, we support the XCode IDE. In Windows, we support Windows 10 with Visual Studio 2022, although it will probably also work with older versions of the Visual Studio IDE. In Linux, we support both Clang and g++. Get the latest version with a C++17 compiler. The CLion IDE is supported on all platforms, it simply requires the CMakeLists.txt file to open and build the project. Elements C++ GUI library, plus the Cycfi Infra library: git clone --recurse-submodules https://github.com/cycfi/elements.git Make sure you have CMake 3.15 or higher. Follow the installation procedure for your platform, or follow the instructions below for specific environments. Here are Element’s dependencies: pkg-config Cairo fontconfig freetype2 bzip2 expat zlib libpng libwebp Specific instructions are provided below for specific environments. Additionally, the following libraries are dragged as submodules: The Cycfi infra library Infra provides some basic groundwork common to Cycfi libraries, including Elements. Using Homebrew: brew install pkg-config brew install cairo brew install fontconfig brew install bzip2 brew install expat brew install zlib brew install libpng brew install webp brew install cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for the MacOS: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build cmake -GXcode ../ If you are having issues with code signing, disable it by setting the CMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED variable to NO: cmake -GXcode -DCMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED=NO ../ If successful, CMake will generate an XCode project in the build directory. Open the project file elements.xcodeproj and build all. You should see a couple of example applications. If you are having problems with code signing, do this: Build Settings→Code Signing Identity for ALL_BUILD and elements, click, then choose \"Other\", then clear the text (empty). Do this for both ALL_BUILD and elements. The Windows port requires a package manager that supports the dependencies listed above. One popular package manager is vcpkg. We will use vcpkg in the setup instructions below. Clone and bootstrap the vcpkg dependency manager. I suggest placing it in c:\\ or c:\\Program Files, but it does not really matter where. git clone https://github.com/microsoft/vcpkg .\\vcpkg\\bootstrap-vcpkg.bat Install the dependencies: vcpkg install pkgconf vcpkg install cairo vcpkg install libwebp Installing Cairo already brings in the other dependencies. Follow the installation procedure. If you have Visual Studio 2022: Use the Visual Studio GUI for a graphical development environment. Use NMake for make-style command-line builds. CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build You will need to tell cmake the location of the vcpkg toolchain file. That way, find_package will know where to find the installed libraries. If you installed vcpkg in c:\\ as suggested, you invoke cmake like this: cmake -G\"Visual Studio 17 2022\" -D CMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg ../ If successful, cmake will generate a Visual Studio solution in the build directory. Open the project file elements.sln and build all. You should see a couple of example applications. Open a Command Prompt for VS 2022 ({x64/x86-64} {Native/Cross} Tools Command Prompt for VS 2019) in your start menu. CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build Again, you will need to tell cmake the location of the vcpkg toolchain file. If you installed vcpkg in c:\\ as suggested, you invoke cmake like this: cmake -G\"NMake Makefiles\" -D CMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg ../ If successful, cmake will generate NMake Make files in the build directory. Invoke nmake to build the binary. MSYS2 is a software distro and building platform for Windows Download MSYS2 from its official website and install it. Its installation guide is on the home page. Open MSYS2 MinGW 64-bit or MSYS2 MinGW 32-bit from your start menu. Install tools and libraries: pacman -S ${MINGW_PACKAGE_PREFIX}-toolchain pacman -S ${MINGW_PACKAGE_PREFIX}-cairo pacman -S ${MINGW_PACKAGE_PREFIX}-gtk3 pacman -S ${MINGW_PACKAGE_PREFIX}-libwebp pacman -S make pacman -S ${MINGW_PACKAGE_PREFIX}-cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for MSYS2: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. -DELEMENTS_HOST_UI_LIBRARY=gtk tells cmake to build with Gtk. cd elements mkdir build cd build cmake ../ -G \"Unix Makefiles\" -DELEMENTS_HOST_UI_LIBRARY=gtk If successful, cmake will generate Unix Make files in the build directory. In addition to the requirements listed in the requirements section, the GTK3 library is also required by the Linux port of Elements. On Debian and derived distributions using apt-get (requires sudo): sudo apt-get install libcairo2-dev sudo apt-get install libgtk-3-dev sudo apt-get install libwebp-dev sudo apt-get -y install cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for Linux: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build cmake -G \"Unix Makefiles\" ../ If successful, cmake will generate Unix Make files in the build directory. If successful, cmake will generate a project file or makefiles in the build directory. Build the library and example programs using the generated makefiles or open the project file using your IDE and build all. You should see a couple of example applications in there that you can run. These examples are provided as starting points to get you up to speed in learning how to use the library. For simplicity, each example is contained in a single main.cpp source file. Feel free to inspect and mess with the examples. Each example demonstrates different aspects of the Elements library, from layout to control. You’d probably want to start with the “hello_universe” example, which is the Element’s hello-world counterpart. You can copy the “empty” example and use it as a boilerplate for your own project. See next section on how to copy an example and build outside the Elements project directory. Tips: Resize the window and see the elements fluidly resize Use two-finger swipe to move the sliders and knobs The Elements project is set up so that you can easily copy and paste any of the examples outside the project, set -DELEMENTS_ROOT=\"path/to/elements\", and the example should immediately build without any hassle. Here’s an example for XCode assuming the elements lib is in the same directory alongside the \"hello_universe\" example directory you copied to: Copy the hello_universe example project directory. Make a build directory inside the hello_universe directory. CD to the build directory. cmake -GXcode -DELEMENTS_ROOT=\"../elements\" ../ Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Setup and Installation","component":"elements","version":"master","name":"setup","url":"/elements/setup.html","titles":[{"text":"Requirements","hash":"_requirements","id":1},{"text":"C++17","hash":"_c17","id":2},{"text":"Git","hash":"_git","id":3},{"text":"CMake","hash":"_cmake","id":4},{"text":"Required Libraries","hash":"_required_libraries","id":5},{"text":"MacOS","hash":"_macos","id":6},{"text":"Install required libraries","hash":"_install_required_libraries","id":7},{"text":"Install CMake","hash":"_install_cmake","id":8},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake","id":9},{"text":"Using XCode","hash":"_using_xcode","id":10},{"text":"Windows","hash":"_windows","id":11},{"text":"Install required libraries","hash":"_install_required_libraries_2","id":12},{"text":"Install CMake","hash":"_install_cmake_2","id":13},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_2","id":14},{"text":"Visual Studio 2022 GUI","hash":"_visual_studio_2022_gui","id":15},{"text":"NMake","hash":"_nmake","id":16},{"text":"Windows (MinGW + Gtk)","hash":"_windows_mingw_gtk","id":17},{"text":"Install MSYS2 toolchain and required libraries","hash":"_install_msys2_toolchain_and_required_libraries","id":18},{"text":"Install CMake","hash":"_install_cmake_3","id":19},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_3","id":20},{"text":"Using UNIX makefiles","hash":"_using_unix_makefiles","id":21},{"text":"Linux","hash":"_linux","id":22},{"text":"Install required libraries","hash":"_install_required_libraries_3","id":23},{"text":"Install CMake","hash":"_install_cmake_4","id":24},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_4","id":25},{"text":"Using UNIX makefiles","hash":"_using_unix_makefiles_2","id":26},{"text":"Building and Running the examples","hash":"_building_and_running_the_examples","id":27},{"text":"Building Outside the Project","hash":"_building_outside_the_project","id":28}]},"7":{"id":7,"text":"The key design aspects of the Elements C++ GUI library are: Modular: Elements is very lightweight and extremely modular, facilitating the composition of fine-grained, flyweight, and reusable ``elements'' into complex element hierarchies. This is achieved through a declarative interface with heavy emphasis on reuse, allowing developers to build sophisticated GUI structures efficiently. Declarative: Elements exposes a declarative API using modern C++. Declarative C++ code tells you what rather than how (contrasting with imperative programming which involves control flow). There are no code generators. The GUI is declared entirely in C++ code. After a while, code reuse, using a palette of fine-grained elements, becomes very familiar and intuitive, much like using HTML. Interoperable: Elements is usable in any application and plays well with other GUI libraries and frameworks. The library is loosely coupled with the application and windowing system and can co-exist with components within a host. It should be easy to integrate Elements with any existing application. This document will demonstrate the modular and declarative design aspects of the Elements library through examples. Specific examples should make it clear. Let’s start with a basic window with a dark grey background. The examples presented here can be found in this link: https://github.com/cycfi/elements/tree/master/examples/doc_aspects #include using namespace cycfi::elements; // Main window background color auto constexpr bkd_color = rgba(35, 35, 37, 255); auto background = box(bkd_color); int main(int argc, const char* argv[]) { app _app(argc, argv); window _win(_app.name()); _win.on_close = [&_app]() {_app.stop();}; view view_(_win); view_.content( background ); _app.run(); return 0; } Here, we create an app and a window, and set the window’s on_close to stop (quit) the application. _win.on_close is called when the window is closed by the user, thereby quitting the application. Like any other GUI library or framework, the app manages the main event loop, while the window manages application windows. However, take note that the app and the window classes are optional. There are certain situations, like e.g. building plugins or incorporating Elements in another framework such as QT, where you do not want Elements to manage the event loop or windows. The important class of interest here is the view. In these cases, you want to embed the view directly. You can directly construct a view given a platform window (or widget), as its main content view or child window (or widget). The view does not know anything about drawing or user interaction. Instead, it relies on its client supplied content to do these. Without any content, it is an empty shell. And so this is where it starts to get interesting. The content of the view typically contains multiple layers, much like typical graphics applications. In this example, we only have one layer: the background. auto background = box(bkd_color); It is a simple, infinitely resizable box with the specified color: rgba(35, 35, 37, 255). It will resize automatically when the window is resized. We set it as the view’s content: view_.content( background ); Running this example, you get: Now let’s add a blue round rectangle. We’ve seen how to create a box: the background using box, passing in a color. A rounded box is created using rbox, passing in the color and the corner radius: auto blue_rbox = rbox(colors::medium_blue, 10); The color, this time, is specified by name from the colors namespace. The namespace includes all predefined colors from the standard HTML Color Names. We can actually use blue_rbox already, as-is, by placing it in another layer in the view: view_.content( blue_rbox, background ); But like the box, the rbox is infinitely resizable and will hog the entire window. What we want is to give it a specific size and center it in the window. Elements are very lightweight. Most elements do not even have a size, nor know their position in the view (elements without position information are inherently relocatable —they can be placed anywhere; the position is supplied at rendering time). So we give it a 100x50 size by wrapping it in the fixed_size element: auto blue_rbox = fixed_size( {100, 50}, rbox(colors::medium_blue, 10) ); And then we align it centered (in the x axis) and middle (in the Y axis) using the align_center_middle element: auto blue_rbox = align_center_middle( fixed_size( {100, 50}, rbox(colors::medium_blue, 10) ) ); Without the alignment element, the main window would have been constrained to a fixed 100x50 size. There’s a multitude of alignment elements available. See Layout. So now, we are seeing how fine-grained elements are composed. The rbox is placed inside the fixed_size element which is then placed inside a align_center_middle element. Let’s run this example: Our goal this time is to place some text inside the blue box. The element we will use is the label. Most elements do not have a size, but as an exception, labels (simple text elements) do. So, instead of fixing the size of the box using fixed_size, we place the label alongside the box in a layer element, but add some margin around the label. Here’s how you do it: auto blue_rbox = align_center_middle( layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ) ); If it’s not obvious yet, let’s take it apart into its constituent pieces: Step 1: We make a label: label(\"“Dogs are my favorite people”\") Step 2: We add margin around it: margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ) Note that like the align elements, there’s a multitude of margins such as left_margin, right_margin, etc. Step 3: We make a blue rounded box: rbox(colors::medium_blue, 10) Step 4: We place the label and the blue rounded box as siblings in a layer element: layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ) Step 4: Then finally, we place it in the align_center_middle element. If the element hierarchy gets a bit too deep, use the C++ auto to name sub-parts of the element composition to make it easier to understand. The layer element is a composite element that holds zero or more child' elements. Some of you might have noticed that we already mentioned the `layer element before when we were discussing the view’s content in the App and Window section: `The content of the `view typically contains multiple layers, much like typical graphics applications''. Well, actually, this is the same layer thing here. The view’s main content is a layer element. So now we have: To demonstrate the fine-grained and modular nature of Elements, it is perhaps illustrative to say that many components in Elements, including the slider element, are not atomic and are actually composed of smaller parts. In this section, we will see how one creates a slider from the basic parts that we have dealt with in the previous sections. Take note that this example is only for illustrative purposes. The library provides easier ways to make sliders. Elements has a gallery a collection of reusable element compositions, just like what we do here, but more refined. That gallery is constantly growing. Composing elements is fun! The slider has two parts: the track and the thumb. Here, we make a simple track using the same old box. We made it black. Then, we reused the same ``Dogs are my favorite people'' label for the thumb. The result looks silly, I should say :blush:, but hey, we are trying to make a point! auto track = hsize(10, box(colors::black)); auto thumb = layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ); auto funny_slider = slider(thumb, track); And here it is in action: Now, like before, we add our funny slider to our view: view_.content( align_center(funny_slider), background ); But note that, in this case, we want to center the slider only horizontally, so we use align_center instead of align_center_middle. Ok, there you go! Now go and be creative and make your own controls! Here’s the complete prgram: #include using namespace cycfi::elements; using cycfi::artist::rgba; namespace colors = cycfi::artist::colors; // Main window background color auto constexpr bkd_color = rgba(35, 35, 37, 255); auto background = box(bkd_color); auto track = hsize(10, box(colors::black)); auto thumb = layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), margin( {5, 5, 5, 5}, rbox(colors::medium_blue, 10) ) ); auto funny_slider = slider(thumb, track); int main(int argc, char* argv[]) { app _app(\"Aspects\"); window _win(_app.name()); _win.on_close = [&_app]() { _app.stop(); }; view view_(_win); view_.content( align_center(funny_slider), background ); _app.run(); return 0; } Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Design Aspects","component":"elements","version":"skia_2024","name":"aspects","url":"/elements/skia_2024/aspects.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Minimal Example","hash":"_minimal_example","id":2},{"text":"App and Window","hash":"_app_and_window","id":3},{"text":"Background","hash":"_background","id":4},{"text":"Aligns and Sizes","hash":"_aligns_and_sizes","id":5},{"text":"Labels, Margins and Layers","hash":"_labels_margins_and_layers","id":6},{"text":"Let’s Make a Slider","hash":"_lets_make_a_slider","id":7}]},"8":{"id":8,"text":"","title":"","component":"elements","version":"skia_2024","name":"common","url":"/elements/skia_2024/common.html","titles":[]},"9":{"id":9,"text":"Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Gallery","component":"elements","version":"skia_2024","name":"gallery","url":"/elements/skia_2024/gallery.html","titles":[{"text":"It’s always a nice to have some pretty pictures:","hash":"_its_always_a_nice_to_have_some_pretty_pictures","id":1}]},"10":{"id":10,"text":"Elements is a lightweight, fine-grained, resolution-independent, extremely modular GUI library. The library is written using modern C++17 language features. It has a declarative interface with a sensible and easy-to-use Domain Specific Embedded Languages (DSEL) syntax for constructing the GUI elements. A declarative description of the GUI is written exclusively in C++, and therefore, there is no need for an external visual GUI editor or code generator. Elements is embeddable, meaning you can embed it in any application, and it will play well with other GUI libraries and frameworks. This also implies that you can utilize it for the creation of plugins. It does not own the event loop and is able to co-exist with components within a plugin host, such as VST and AU. Porting to a new host target is straightforward, requiring the porting of only a few files. Elements is distributed under the liberal and non-viral MIT License. Gallery Setup and Installation Design Aspects Layout Joel got into electronics and programming in the 80s because almost everything in music, his first love, is becoming electronic and digital. Since then, he builds his own guitars, effect boxes and synths. He enjoys playing distortion-laden rock guitar, composes and produces his own music in his home studio. Joel de Guzman is the principal architect and engineer at Cycfi Research. He is a software engineer specializing in advanced C++ and an advocate of Open Source. He has authored a number of highly successful Open Source projects such as Boost.Spirit, Boost.Phoenix and Boost.Fusion. These libraries are all part of the Boost Libraries, a well respected, peer-reviewed, Open Source, collaborative development effort. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Elements C++ GUI library","component":"elements","version":"skia_2024","name":"index","url":"/elements/skia_2024/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Documentation","hash":"_documentation","id":2},{"text":"The Author","hash":"_the_author","id":3}]},"11":{"id":11,"text":"The Elements Library provides a comprehensive set of elements for laying out elements in the view. Each element provides information on how it wants to be sized by means of min and max limits: a hint that determine its actual extent and how it will be placed in the view depending on available window space. The element’s limits member function determines the minimum and maximum extents of an element: view_limits limits(basic_context const& ctx) const; See Context for information about basic_context. view_limits is a struct that gives us the min and max information: struct view_limits { point min = {0.0, 0.0}; point max = {full_extent, full_extent}; }; For the purpose of this document, we will use these terms and expressions: limits The limits of an element limits.min The minimum limits of an element limits.min.x The minimum horizontal limit of an element limits.min.y The minimum vertical limit of an element limits.max The maximum limits of an element limits.max.x The maximum horizontal limit of an element limits.max.y The maximum vertical limit of an element horizontal limits (limits.min.x, limits.max.x) vertical limits (limits.min.y, limits.max.y) minimum limits (limits.min.x, limits.min.y) maximum limits (limits.max.x, limits.max.y) minimum horizontal limit limits.min.x maximum horizontal limit limits.max.x minimum vertical limit limits.min.y maximum vertical limit limits.max.y By default, an element has full limits: it is infinitely resizable: constexpr view_limits full_limits = { {0.0, 0.0} , {full_extent, full_extent} }; An element with full_limits can be resized from an empty point (zero x and y size) up to the full extent of the screen, and beyond (if possible). full_extent is actually an implementation defined huge number near the maximum limits of the coordinate’s data type (also implementation defined). An element has a fixed horizontal size if this expression is true: limits.min.x == limits.max.x. An element has a fixed vertical size if this expression is true: limits.min.y == limits.max.y. {{100, 100}, {100, 100}}; // Fixed size {{100, 100}, {100, full_extent}}; // Fixed width, flexible height {{100, 100}, {100, 200}}; // Fixed width, semi-flexible height (100 to 200) Size elements override the limits of an enclosed element. There is a comprehensive list of size related elements in the Elements Library that can be used for various purposes. This section catalogues all the available size elements. Overrides the limits of an element. limit(limits, subject) limits Instance of view_limits subject Instance of Element The limits of subject will be set to the specified limits constrained by the natural limits of the subject (the natural limits of the element will not be violated). Returns instance of Proxy. Fixes the size of an enclosed element (subject). fixed_size({width, height}, subject) width, height float subject Instance of Element subject will be laid out with a fixed width and height, constrained by the natural limits of the subject (the natural limits of the element will not be violated). Returns instance of Proxy. Fixes the horizontal size of an enclosed element (subject). hsize(width, subject) width float subject Instance of Element subject will be laid out with a fixed width, constrained by the natural horizontal limits of the subject (the natural horizontal limits of the element will not be violated). The natural vertical limits of subject will not be affected. Returns instance of Proxy. Fixes the vertical limits of an enclosed element (subject). vsize(height, subject) height float subject Instance of Element subject will be laid out with a fixed height, constrained by the natural vertical limits of the subject (the natural vertical limits of the element will not be violated). The natural horizontal limits of subject will not be affected. Returns instance of Proxy. Overrides the minimum limits of an enclosed element (subject). min_size({width, height}, subject) width, height float subject Instance of Element The minimum limits of subject will be set to the specified width and height, constrained by the natural minimum limits of the subject. the natural minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the minimum horizontal limit of an enclosed element (subject). hmin_size(width, subject) width float subject Instance of Element The minimum horizontal limit of subject will be set to the specified width constrained by the natural horizontal minimum limits of the subject. The natural horizontal minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the minimum vertical limit of an enclosed element (subject). vmin_size(height, subject) height float subject Instance of Element The minimum vertical limit of subject will be set to the specified height constrained by the natural vertical minimum limits of the subject. The natural vertical minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the maximum limits of an enclosed element (subject). max_size({width, height}, subject) width, height float subject Instance of Element The maximum limits of subject will be set to the specified width and height, constrained by the natural maximum limits of the subject. The natural maximum limits of the element will not be violated. Returns instance of Proxy. Overrides the maximum horizontal limit of an enclosed element (subject). hmax_size(width, subject) width float subject Instance of Element The maximum horizontal limit of subject will be set to the specified width constrained by the natural maximum horizontal limit of the subject. The natural maximum horizontal limit of the element will not be violated. Returns instance of Proxy. Overrides the maximum vertical limit of an enclosed element (subject). vmax_size(height, subject) height float subject Instance of Element The maximum vertical limit of subject will be set to the specified height constrained by the natural maximum vertical limit of the subject The natural maximum vertical limit of the element will not be violated. Returns instance of Proxy. Resizable elements are elements with minimum limits that are less than the maximum limits in either x or y dimensions or both. Resizable elements can therefore stretch if there is extra available space allocated to it beyond its minimum limit. When two or more resizable elements are placed side by side in an htile or vtile, the element’s \"stretchiness\" determines how much extra space is given to it. The element’s \"stretchiness\" is determined by the element’s stretch member function: virtual view_stretch stretch() const; where view_stretch is a struct declared as: struct view_stretch { float x = 1.0; float y = 1.0; }; The view_stretch x and y members determine how much an element can stretch in the x or y dimensions. The default is 1.0. A stretchiness value of 2.0 means that the element is able to stretch twice as much compared to its siblings in an htile or vtile, assuming they have the default 1.0 stretchiness. Overrides the horizontal stretchiness of an an enclosed element (subject). hstretch(stretch, subject) stretch A scalar value subject Instance of Element The subject will assume the given stretch value. The stretch value has no effect to elements with fixed horizontal size. Returns instance of Proxy. For example, the image below shows how three elements are laid out in an htile, with stretch values of 1.0, 1.0 and 2.0, respectively: The element with the 2.0 stretch value stretches twice as much compared to its siblings. Overrides the vertical stretchiness of an an enclosed element (subject). vstretch(stretch, subject) stretch A scalar value subject Instance of Element The subject will assume the given stretch value. The stretch value has no effect to elements with fixed vertical limits. Returns instance of Proxy. For example, the image below shows how three elements are laid out in an htile, with stretch values of 0.5, 1.0 and 1.5, respectively: The element with the 0.5 stretch value stretches half less, while the element with the 1.5 stretches half more than the default. The Elements Library is resolution independent and elements can be scaled up or down to suit. The default scale is 1.0 (no scale). The scale element changes the scale of its enclosed element (subject). scale(scale_, subject) scale_ float subject Instance of Element The subject will scaled given the scale_ value. A value > 1.0 scales the element up (zoom in), while a value . Elements e1,...eN are held in a std::array managed by the horizontal grid element. static float positions[] = {0.25, 0.5, 0.75, 1.0}; //... hgrid(positions, item1, item2, item3, item4) If the number of elements is not fixed, you can use an hgrid_composite (see below). The number of supplied positions and elements should match, otherwise, compiler error (no matching function for call to hgrid). The positions assume the first element is at x=0 (it is at the left-most position in the row). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] c Instance of type hgrid_composite The hgrid_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use hgrid_composite just as you would a std::vector, such as push_back a child element. Just keep in mind that we are dealing with element_ptr items. c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in hgrid_composite. hgrid_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The number of items in the external coordinates vector positions must match with the number of elements at any given time. The positions assume the first element is at x=0 (it is at the left-most position in the row). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] managed by the horizontal tile element. htile(item1, item2, item3, item4) If the number of elements is not fixed, you can use an htile_composite (see below). In addition to the semantics of Horizontal Tiles, returns instance of Composite. Create a horizontal tile with an indeterminate (dynamic) number of elements. htile_composite c; c Instance of type htile_composite The htile_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use htile_composite just as you would a std::vector, such as push_back a child element. Just keep in mind that we are dealing with element_ptr items. c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in htile_composite. htile_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Vertical Grids are composites that lay out one or more child elements in a column following externally supplied vertical fractional positions. Vertical Grids have computed horizontal and vertical sizes following the natural limits of its children. The elements are laid out in a single column, top to bottom, immediately next to each other with no intervening space. The elements are positioned vertically using the supplied fractional positions. The fractional positions values range from 0.0 to 1.0, which specify the child element’s vertical position from top (0.0) to bottom (1.0). The grid’s minimum horizontal limit is computed as the maximum of the children elements' minimum horizontal limits. The grid’s maximum horizontal limit is computed as the minumum of the children elements' maximum horizontal limits. The final computed minimum limit is clamped to ensure it is not greater than the computed maximum limit. Likewise the computed maximum limit is clamped to ensure it is not less than the computed minimum limit. The supplied (vertical) positions and computed (horizontal) coordinates may violate the limits of its children elements. If the allocated size of a child element is lower than the element’s minimum limits in either dimension, the element will be cropped. If a child element’s maximum limits in either dimension is exceeded, the element will be aligned to the top-left. Build a vertical grid with a fixed number of elements. vgrid(positions, e1,...eN) N The number of items e1,...eN One or more child elements, instances of Element (more below) positions External container of fractional positions (more below) The External container, positions is an external can either be a plain array of type float[N] or std::array. Elements e1,...eN are held in a std::array managed by the vertical grid element. static float positions[] = {0.25, 0.5, 0.75, 1.0}; //... vgrid(positions, item1, item2, item3, item4) If the number of elements is not fixed, you can use an vgrid_composite (see below). The number of supplied coordinates and elements should match, otherwise, compiler error (no matching function for call to vgrid). The positions assume the first element is at x=0 (it is at the top-most position in the column). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] c Instance of type vgrid_composite The vgrid_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use vgrid_composite just as you would a std::vector, such as push_back a child element. Just keep in mind that we are dealing with element_ptr items. Example: c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in vgrid_composite. vgrid_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The number of items in the external coordinates vector positions must match with the number of elements at any given time. The positions assume the first element is at x=0 (it is at the top-most position in the column). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] managed by the vertical tile element. vtile(item1, item2, item3, item4) If the number of elements is not fixed, you can use an vtile_composite (see below). In addition to the semantics of Vertical Tiles, returns instance of Composite. Create a vertical tile with an indeterminate (dynamic) number of elements: vtile_composite c; c Instance of type vtile_composite The vtile_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use vtile_composite just as you would a std::vector, such as push_back a child element. Just keep in mind that we are dealing with element_ptr items. c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in vtile_composite. vtile_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The Elements Library is 2D, but the z-axis pertains to top-to-bottom layering. Layers allow groups of elements to be placed in the z-axis where higher-level elements obscure or hide lower-level elements. The elements are laid out in the z-axis, top to bottom. Rendering is done bottom-up; the bottom-most elements are drawn first. UI control (such as mouse clicks) proceeds from top to bottom. Higher-level elements are given control priority. If a higher-level element does not process the event, lower-level elements are given a chance. The layer’s minimum limit is computed as the maximum of the children elements' minimum limits. The layer’s maximum limit is computed as the minimum of the children elements' maximum limits. The final computed minimum limit is clamped to ensure it is not greater than the computed maximum limit. Likewise the computed maximum limit is clamped to ensure it is not less than the computed minimum limit. The computed (vertical) and (horizontal) coordinates may violate the limits of its children elements. If the allocated size of a child element is lower than the element’s minimum limits in either dimension, the element will be cropped. If a child element’s maximum limits in either dimension is exceeded, the element will be aligned to the top-left. Create a layer composite with a fixed number of elements. layer(e1,...eN) N The number of items e1,...eN One or more child elements, instances of Element (more below) Elements e1,...eN are held in a std::array managed by the layer element. layer(item1, item2, item3, item4) If the number of elements is not fixed, you can use an layer_composite (see below). In addition to the semantics of Layers, returns instance of Composite. Create a layer with an indeterminate (dynamic) number of elements: layer_composite c; c Instance of type layer_composite The layer_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use layer_composite just as you would a std::vector, such as push_back a child element. Just keep in mind that we are dealing with element_ptr items. c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in layer_composite. layer_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The Deck is very similar to layers. Elements are placed in the z-axis. But unlike layers, only the selected element is active (top-most by default). Everything listed in the layer’s Semantics, except 2 and 3. Only the active selected element element is drawn. Only the active selected element is given the chance to process UI control. Create a deck composite with a fixed number of elements. deck(e1, e2, e3... eN) N The number of items e1,...eN One or more child elements, instances of Element (more below) Elements e1,...eN are held in a std::array managed by the deck element. deck(item1, item2, item3, item4) If the number of elements is not fixed, you can use an deck_composite (see below). In addition to the semantics of Deck, returns instance of Composite. Create a deck with an indeterminate (dynamic) number of elements: deck_composite c; c Instance of type deck_composite The deck_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use deck_composite just as you would a std::vector, such as push_back a child element. Just keep in mind that we are dealing with element_ptr items. c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in deck_composite. deck_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The flow element, is a composite that lays out its children much like the way text is laid out: lay out each element from left to right, fitting as much elements as possible following each child’s maximum horizontal limit. Once a row is full, move to the next row and do the same until the end of the row is filled. Repeat the procedure until all the elements are laid out. The height of each row is determined by the maximum vertical limit of all the elements to be laid out in that row. The following graphic depicts a simplified layout scenario for child elements a to r. The child elements arranged in a flow composite are automatically re-flowed (re-lay-out) when the view size changes. To have elements laid out using flow, you need to make a flow_composite. Create a flow_composite with an indeterminate (dynamic) number of elements. flow_composite c; c Instance of type flow_composite The flow_composite is basically a std::vector that the client uses to manage the composite’s elements. The lifetime of the container, c, is the client’s responsibility. You use flow_composite just as you would a std::vector, such as push_back a child element, child. Just keep in mind that we are dealing with element_ptr items. c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in flow_composite. flow_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Once we have a flow_composite, we can place its contents in a flow element. flow(c) c Instance of flow_composite Returns instance of Composite. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Layout","component":"elements","version":"skia_2024","name":"layout","url":"/elements/skia_2024/layout.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Limits","hash":"_limits","id":2},{"text":"Examples","hash":"_examples","id":3},{"text":"Size Elements","hash":"_size_elements","id":4},{"text":"limit","hash":"_limit","id":5},{"text":"Expression","hash":"_expression","id":6},{"text":"Notation","hash":"_notation","id":7},{"text":"Semantics","hash":"_semantics","id":8},{"text":"fixed_size","hash":"_fixed_size","id":9},{"text":"Expression","hash":"_expression_2","id":10},{"text":"Notation","hash":"_notation_2","id":11},{"text":"Semantics","hash":"_semantics_2","id":12},{"text":"hsize","hash":"_hsize","id":13},{"text":"Expression","hash":"_expression_3","id":14},{"text":"Notation","hash":"_notation_3","id":15},{"text":"Semantics","hash":"_semantics_3","id":16},{"text":"vsize","hash":"_vsize","id":17},{"text":"Expression","hash":"_expression_4","id":18},{"text":"Notation","hash":"_notation_4","id":19},{"text":"Semantics","hash":"_semantics_4","id":20},{"text":"min_size","hash":"_min_size","id":21},{"text":"Expression","hash":"_expression_5","id":22},{"text":"Notation","hash":"_notation_5","id":23},{"text":"Semantics","hash":"_semantics_5","id":24},{"text":"hmin_size","hash":"_hmin_size","id":25},{"text":"Expression","hash":"_expression_6","id":26},{"text":"Notation","hash":"_notation_6","id":27},{"text":"Semantics","hash":"_semantics_6","id":28},{"text":"vmin_size","hash":"_vmin_size","id":29},{"text":"Expression","hash":"_expression_7","id":30},{"text":"Notation","hash":"_notation_7","id":31},{"text":"Semantics","hash":"_semantics_7","id":32},{"text":"max_size","hash":"_max_size","id":33},{"text":"Expression","hash":"_expression_8","id":34},{"text":"Notation","hash":"_notation_8","id":35},{"text":"Semantics","hash":"_semantics_8","id":36},{"text":"hmax_size","hash":"_hmax_size","id":37},{"text":"Expression","hash":"_expression_9","id":38},{"text":"Notation","hash":"_notation_9","id":39},{"text":"Semantics","hash":"_semantics_9","id":40},{"text":"vmax_size","hash":"_vmax_size","id":41},{"text":"Expression","hash":"_expression_10","id":42},{"text":"Notation","hash":"_notation_10","id":43},{"text":"Semantics","hash":"_semantics_10","id":44},{"text":"Stretch Elements","hash":"_stretch_elements","id":45},{"text":"hstretch","hash":"_hstretch","id":46},{"text":"Expression","hash":"_expression_11","id":47},{"text":"Notation","hash":"_notation_11","id":48},{"text":"Semantics","hash":"_semantics_11","id":49},{"text":"vstretch","hash":"_vstretch","id":50},{"text":"Expression","hash":"_expression_12","id":51},{"text":"Notation","hash":"_notation_12","id":52},{"text":"Semantics","hash":"_semantics_12","id":53},{"text":"Scale Element","hash":"_scale_element","id":54},{"text":"scale","hash":"_scale","id":55},{"text":"Expression","hash":"_expression_13","id":56},{"text":"Notation","hash":"_notation_13","id":57},{"text":"Semantics","hash":"_semantics_13","id":58},{"text":"Align Elements","hash":"_align_elements","id":59},{"text":"halign","hash":"_halign","id":60},{"text":"Expression","hash":"_expression_14","id":61},{"text":"Notation","hash":"_notation_14","id":62},{"text":"Semantics","hash":"_semantics_14","id":63},{"text":"Examples","hash":"_examples_2","id":64},{"text":"align_left","hash":"_align_left","id":65},{"text":"Expression","hash":"_expression_15","id":66},{"text":"Notation","hash":"_notation_15","id":67},{"text":"Semantics","hash":"_semantics_15","id":68},{"text":"align_center","hash":"_align_center","id":69},{"text":"Expression","hash":"_expression_16","id":70},{"text":"Notation","hash":"_notation_16","id":71},{"text":"Semantics","hash":"_semantics_16","id":72},{"text":"align_right","hash":"_align_right","id":73},{"text":"Expression","hash":"_expression_17","id":74},{"text":"Notation","hash":"_notation_17","id":75},{"text":"Semantics","hash":"_semantics_17","id":76},{"text":"valign","hash":"_valign","id":77},{"text":"Expression","hash":"_expression_18","id":78},{"text":"Notation","hash":"_notation_18","id":79},{"text":"Semantics","hash":"_semantics_18","id":80},{"text":"Examples","hash":"_examples_3","id":81},{"text":"align_top","hash":"_align_top","id":82},{"text":"Expression","hash":"_expression_19","id":83},{"text":"Notation","hash":"_notation_19","id":84},{"text":"Semantics","hash":"_semantics_19","id":85},{"text":"align_middle","hash":"_align_middle","id":86},{"text":"Expression","hash":"_expression_20","id":87},{"text":"Notation","hash":"_notation_20","id":88},{"text":"Semantics","hash":"_semantics_20","id":89},{"text":"align_bottom","hash":"_align_bottom","id":90},{"text":"Expression","hash":"_expression_21","id":91},{"text":"Notation","hash":"_notation_21","id":92},{"text":"Semantics","hash":"_semantics_21","id":93},{"text":"align_left_top","hash":"_align_left_top","id":94},{"text":"Expression","hash":"_expression_22","id":95},{"text":"Notation","hash":"_notation_22","id":96},{"text":"Semantics","hash":"_semantics_22","id":97},{"text":"align_center_top","hash":"_align_center_top","id":98},{"text":"Expression","hash":"_expression_23","id":99},{"text":"Notation","hash":"_notation_23","id":100},{"text":"Semantics","hash":"_semantics_23","id":101},{"text":"align_right_top","hash":"_align_right_top","id":102},{"text":"Expression","hash":"_expression_24","id":103},{"text":"Notation","hash":"_notation_24","id":104},{"text":"Semantics","hash":"_semantics_24","id":105},{"text":"align_left_middle","hash":"_align_left_middle","id":106},{"text":"Expression","hash":"_expression_25","id":107},{"text":"Notation","hash":"_notation_25","id":108},{"text":"Semantics","hash":"_semantics_25","id":109},{"text":"align_center_middle","hash":"_align_center_middle","id":110},{"text":"Expression","hash":"_expression_26","id":111},{"text":"Notation","hash":"_notation_26","id":112},{"text":"Semantics","hash":"_semantics_26","id":113},{"text":"align_right_middle","hash":"_align_right_middle","id":114},{"text":"Expression","hash":"_expression_27","id":115},{"text":"Notation","hash":"_notation_27","id":116},{"text":"Semantics","hash":"_semantics_27","id":117},{"text":"align_left_bottom","hash":"_align_left_bottom","id":118},{"text":"Expression","hash":"_expression_28","id":119},{"text":"Notation","hash":"_notation_28","id":120},{"text":"Semantics","hash":"_semantics_28","id":121},{"text":"align_center_bottom","hash":"_align_center_bottom","id":122},{"text":"Expression","hash":"_expression_29","id":123},{"text":"Notation","hash":"_notation_29","id":124},{"text":"Semantics","hash":"_semantics_29","id":125},{"text":"align_right_bottom","hash":"_align_right_bottom","id":126},{"text":"Expression","hash":"_expression_30","id":127},{"text":"Notation","hash":"_notation_30","id":128},{"text":"Semantics","hash":"_semantics_30","id":129},{"text":"Margin Elements","hash":"_margin_elements","id":130},{"text":"margin","hash":"_margin","id":131},{"text":"Expression","hash":"_expression_31","id":132},{"text":"Notation","hash":"_notation_31","id":133},{"text":"Semantics","hash":"_semantics_31","id":134},{"text":"margin_left","hash":"_margin_left","id":135},{"text":"Expression","hash":"_expression_32","id":136},{"text":"Notation","hash":"_notation_32","id":137},{"text":"Semantics","hash":"_semantics_32","id":138},{"text":"margin_right","hash":"_margin_right","id":139},{"text":"Expression","hash":"_expression_33","id":140},{"text":"Notation","hash":"_notation_33","id":141},{"text":"Semantics","hash":"_semantics_33","id":142},{"text":"margin_top","hash":"_margin_top","id":143},{"text":"Expression","hash":"_expression_34","id":144},{"text":"Notation","hash":"_notation_34","id":145},{"text":"Semantics","hash":"_semantics_34","id":146},{"text":"margin_bottom","hash":"_margin_bottom","id":147},{"text":"Expression","hash":"_expression_35","id":148},{"text":"Notation","hash":"_notation_35","id":149},{"text":"Semantics","hash":"_semantics_35","id":150},{"text":"hmargin","hash":"_hmargin","id":151},{"text":"Expressions","hash":"_expressions","id":152},{"text":"Notation","hash":"_notation_36","id":153},{"text":"Semantics","hash":"_semantics_36","id":154},{"text":"vmargin","hash":"_vmargin","id":155},{"text":"Expressions","hash":"_expressions_2","id":156},{"text":"Notation","hash":"_notation_37","id":157},{"text":"Semantics","hash":"_semantics_37","id":158},{"text":"margin_left_top","hash":"_margin_left_top","id":159},{"text":"Expressions","hash":"_expressions_3","id":160},{"text":"Notation","hash":"_notation_38","id":161},{"text":"Semantics","hash":"_semantics_38","id":162},{"text":"margin_left_bottom","hash":"_margin_left_bottom","id":163},{"text":"Expressions","hash":"_expressions_4","id":164},{"text":"Notation","hash":"_notation_39","id":165},{"text":"Semantics","hash":"_semantics_39","id":166},{"text":"margin_right_top","hash":"_margin_right_top","id":167},{"text":"Expressions","hash":"_expressions_5","id":168},{"text":"Notation","hash":"_notation_40","id":169},{"text":"Semantics","hash":"_semantics_40","id":170},{"text":"margin_right_bottom","hash":"_margin_right_bottom","id":171},{"text":"Expressions","hash":"_expressions_6","id":172},{"text":"Notation","hash":"_notation_41","id":173},{"text":"Semantics","hash":"_semantics_41","id":174},{"text":"Floating Element","hash":"_floating_element","id":175},{"text":"Expression","hash":"_expression_36","id":176},{"text":"Notation","hash":"_notation_42","id":177},{"text":"Semantics","hash":"_semantics_42","id":178},{"text":"Tiles and Grids","hash":"_tiles_and_grids","id":179},{"text":"Horizontal Grids","hash":"_horizontal_grids","id":180},{"text":"Semantics","hash":"_semantics_43","id":181},{"text":"hgrid","hash":"_hgrid","id":182},{"text":"Expression","hash":"_expression_37","id":183},{"text":"Notation","hash":"_notation_43","id":184},{"text":"Example","hash":"_example","id":185},{"text":"Requirements","hash":"_requirements","id":186},{"text":"Semantics","hash":"_semantics_44","id":187},{"text":"hgrid_composite","hash":"_hgrid_composite","id":188},{"text":"Expression","hash":"_expression_38","id":189},{"text":"Notation","hash":"_notation_44","id":190},{"text":"Example","hash":"_example_2","id":191},{"text":"Requirements","hash":"_requirements_2","id":192},{"text":"Horizontal Tiles","hash":"_horizontal_tiles","id":193},{"text":"Semantics","hash":"_semantics_45","id":194},{"text":"htile","hash":"_htile","id":195},{"text":"Expression","hash":"_expression_39","id":196},{"text":"Notation","hash":"_notation_45","id":197},{"text":"Example:","hash":"_example_3","id":198},{"text":"Semantics","hash":"_semantics_46","id":199},{"text":"htile_composite","hash":"_htile_composite","id":200},{"text":"Expression","hash":"_expression_40","id":201},{"text":"Notation","hash":"_notation_46","id":202},{"text":"Example","hash":"_example_4","id":203},{"text":"Vertical Grids","hash":"_vertical_grids","id":204},{"text":"Semantics","hash":"_semantics_47","id":205},{"text":"vgrid","hash":"_vgrid","id":206},{"text":"Expression","hash":"_expression_41","id":207},{"text":"Notation","hash":"_notation_47","id":208},{"text":"Example","hash":"_example_5","id":209},{"text":"Requirements","hash":"_requirements_3","id":210},{"text":"Semantics","hash":"_semantics_48","id":211},{"text":"vgrid_composite","hash":"_vgrid_composite","id":212},{"text":"Expression","hash":"_expression_42","id":213},{"text":"Notation","hash":"_notation_48","id":214},{"text":"Requirements","hash":"_requirements_4","id":215},{"text":"Vertical Tiles","hash":"_vertical_tiles","id":216},{"text":"Semantics","hash":"_semantics_49","id":217},{"text":"vtile","hash":"_vtile","id":218},{"text":"Expression","hash":"_expression_43","id":219},{"text":"Notation","hash":"_notation_49","id":220},{"text":"Example","hash":"_example_6","id":221},{"text":"Semantics","hash":"_semantics_50","id":222},{"text":"vtile_composite","hash":"_vtile_composite","id":223},{"text":"Expression","hash":"_expression_44","id":224},{"text":"Notation","hash":"_notation_50","id":225},{"text":"Example","hash":"_example_7","id":226},{"text":"Layers","hash":"_layers","id":227},{"text":"Semantics","hash":"_semantics_51","id":228},{"text":"layer","hash":"_layer","id":229},{"text":"Expression","hash":"_expression_45","id":230},{"text":"Notation","hash":"_notation_51","id":231},{"text":"Example","hash":"_example_8","id":232},{"text":"Semantics","hash":"_semantics_52","id":233},{"text":"layer_composite","hash":"_layer_composite","id":234},{"text":"Notation","hash":"_notation_52","id":235},{"text":"Example","hash":"_example_9","id":236},{"text":"Decks","hash":"_decks","id":237},{"text":"Semantics","hash":"_semantics_53","id":238},{"text":"deck","hash":"_deck","id":239},{"text":"Expression","hash":"_expression_46","id":240},{"text":"Notation","hash":"_notation_53","id":241},{"text":"Example","hash":"_example_10","id":242},{"text":"Requirements","hash":"_requirements_5","id":243},{"text":"deck_composite","hash":"_deck_composite","id":244},{"text":"Expression","hash":"_expression_47","id":245},{"text":"Notation","hash":"_notation_54","id":246},{"text":"Example","hash":"_example_11","id":247},{"text":"Flow Element","hash":"_flow_element","id":248},{"text":"flow_composite","hash":"_flow_composite","id":249},{"text":"Expression","hash":"_expression_48","id":250},{"text":"Notation","hash":"_notation_55","id":251},{"text":"Example","hash":"_example_12","id":252},{"text":"flow","hash":"_flow","id":253},{"text":"Expression","hash":"_expression_49","id":254},{"text":"Notation","hash":"_notation_56","id":255},{"text":"Semantics","hash":"_semantics_54","id":256}]},"12":{"id":12,"text":"Here are the basic tools that you need in order to use the library: A C++17 compiler Git CMake 3.15 or higher Elements currently supports the MacOS, Windows and Linux. In the Mac, we support the XCode IDE. In Windows, we support Windows 10 with Visual Studio 2022, although it will probably also work with older versions of the Visual Studio IDE. In Linux, we support both Clang and g++. Get the latest version with a C++17 compiler. The CLion IDE is supported on all platforms, it simply requires the CMakeLists.txt file to open and build the project. Elements C++ GUI library, plus the Cycfi Infra library: git clone --recurse-submodules https://github.com/cycfi/elements.git Make sure you have CMake 3.15 or higher. Follow the installation procedure for your platform, or follow the instructions below for specific environments. Here are Element’s dependencies: pkg-config Cairo fontconfig freetype2 bzip2 expat zlib libpng libwebp Specific instructions are provided below for specific environments. Additionally, the following libraries are dragged as submodules: The Cycfi infra library Infra provides some basic groundwork common to Cycfi libraries, including Elements. Using Homebrew: brew install pkg-config brew install cairo brew install fontconfig brew install bzip2 brew install expat brew install zlib brew install libpng brew install webp brew install cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for the MacOS: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build cmake -GXcode ../ If you are having issues with code signing, disable it by setting the CMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED variable to NO: cmake -GXcode -DCMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED=NO ../ If successful, CMake will generate an XCode project in the build directory. Open the project file elements.xcodeproj and build all. You should see a couple of example applications. If you are having problems with code signing, do this: Build Settings→Code Signing Identity for ALL_BUILD and elements, click, then choose \"Other\", then clear the text (empty). Do this for both ALL_BUILD and elements. The Windows port requires a package manager that supports the dependencies listed above. One popular package manager is vcpkg. We will use vcpkg in the setup instructions below. Clone and bootstrap the vcpkg dependency manager. I suggest placing it in c:\\ or c:\\Program Files, but it does not really matter where. git clone https://github.com/microsoft/vcpkg .\\vcpkg\\bootstrap-vcpkg.bat Install the dependencies: vcpkg install pkgconf vcpkg install cairo vcpkg install libwebp Installing Cairo already brings in the other dependencies. Follow the installation procedure. If you have Visual Studio 2022: Use the Visual Studio GUI for a graphical development environment. Use NMake for make-style command-line builds. CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build You will need to tell cmake the location of the vcpkg toolchain file. That way, find_package will know where to find the installed libraries. If you installed vcpkg in c:\\ as suggested, you invoke cmake like this: cmake -G\"Visual Studio 17 2022\" -D CMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg ../ If successful, cmake will generate a Visual Studio solution in the build directory. Open the project file elements.sln and build all. You should see a couple of example applications. Open a Command Prompt for VS 2022 ({x64/x86-64} {Native/Cross} Tools Command Prompt for VS 2019) in your start menu. CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build Again, you will need to tell cmake the location of the vcpkg toolchain file. If you installed vcpkg in c:\\ as suggested, you invoke cmake like this: cmake -G\"NMake Makefiles\" -D CMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg ../ If successful, cmake will generate NMake Make files in the build directory. Invoke nmake to build the binary. MSYS2 is a software distro and building platform for Windows Download MSYS2 from its official website and install it. Its installation guide is on the home page. Open MSYS2 MinGW 64-bit or MSYS2 MinGW 32-bit from your start menu. Install tools and libraries: pacman -S ${MINGW_PACKAGE_PREFIX}-toolchain pacman -S ${MINGW_PACKAGE_PREFIX}-cairo pacman -S ${MINGW_PACKAGE_PREFIX}-gtk3 pacman -S ${MINGW_PACKAGE_PREFIX}-libwebp pacman -S make pacman -S ${MINGW_PACKAGE_PREFIX}-cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for MSYS2: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. -DELEMENTS_HOST_UI_LIBRARY=gtk tells cmake to build with Gtk. cd elements mkdir build cd build cmake ../ -G \"Unix Makefiles\" -DELEMENTS_HOST_UI_LIBRARY=gtk If successful, cmake will generate Unix Make files in the build directory. In addition to the requirements listed in the requirements section, the GTK3 library is also required by the Linux port of Elements. On Debian and derived distributions using apt-get (requires sudo): sudo apt-get install libcairo2-dev sudo apt-get install libgtk-3-dev sudo apt-get install libwebp-dev sudo apt-get -y install cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for Linux: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build cmake -G \"Unix Makefiles\" ../ If successful, cmake will generate Unix Make files in the build directory. If successful, cmake will generate a project file or makefiles in the build directory. Build the library and example programs using the generated makefiles or open the project file using your IDE and build all. You should see a couple of example applications in there that you can run. These examples are provided as starting points to get you up to speed in learning how to use the library. For simplicity, each example is contained in a single main.cpp source file. Feel free to inspect and mess with the examples. Each example demonstrates different aspects of the Elements library, from layout to control. You’d probably want to start with the “hello_universe” example, which is the Element’s hello-world counterpart. You can copy the “empty” example and use it as a boilerplate for your own project. See next section on how to copy an example and build outside the Elements project directory. Tips: Resize the window and see the elements fluidly resize Use two-finger swipe to move the sliders and knobs The Elements project is set up so that you can easily copy and paste any of the examples outside the project, set -DELEMENTS_ROOT=\"path/to/elements\", and the example should immediately build without any hassle. Here’s an example for XCode assuming the elements lib is in the same directory alongside the \"hello_universe\" example directory you copied to: Copy the hello_universe example project directory. Make a build directory inside the hello_universe directory. CD to the build directory. cmake -GXcode -DELEMENTS_ROOT=\"../elements\" ../ Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Setup and Installation","component":"elements","version":"skia_2024","name":"setup","url":"/elements/skia_2024/setup.html","titles":[{"text":"Requirements","hash":"_requirements","id":1},{"text":"C++17","hash":"_c17","id":2},{"text":"Git","hash":"_git","id":3},{"text":"CMake","hash":"_cmake","id":4},{"text":"Required Libraries","hash":"_required_libraries","id":5},{"text":"MacOS","hash":"_macos","id":6},{"text":"Install required libraries","hash":"_install_required_libraries","id":7},{"text":"Install CMake","hash":"_install_cmake","id":8},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake","id":9},{"text":"Using XCode","hash":"_using_xcode","id":10},{"text":"Windows","hash":"_windows","id":11},{"text":"Install required libraries","hash":"_install_required_libraries_2","id":12},{"text":"Install CMake","hash":"_install_cmake_2","id":13},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_2","id":14},{"text":"Visual Studio 2022 GUI","hash":"_visual_studio_2022_gui","id":15},{"text":"NMake","hash":"_nmake","id":16},{"text":"Windows (MinGW + Gtk)","hash":"_windows_mingw_gtk","id":17},{"text":"Install MSYS2 toolchain and required libraries","hash":"_install_msys2_toolchain_and_required_libraries","id":18},{"text":"Install CMake","hash":"_install_cmake_3","id":19},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_3","id":20},{"text":"Using UNIX makefiles","hash":"_using_unix_makefiles","id":21},{"text":"Linux","hash":"_linux","id":22},{"text":"Install required libraries","hash":"_install_required_libraries_3","id":23},{"text":"Install CMake","hash":"_install_cmake_4","id":24},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_4","id":25},{"text":"Using UNIX makefiles","hash":"_using_unix_makefiles_2","id":26},{"text":"Building and Running the examples","hash":"_building_and_running_the_examples","id":27},{"text":"Building Outside the Project","hash":"_building_outside_the_project","id":28}]}},"components":{},"componentVersions":{"elements/skia_2024":{"displayVersion":"skia_2024","title":"Elements Library","version":"skia_2024","name":"elements","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Elements Docs","site-url":"https://www.cycfi.com/","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/elements/skia_2024/index.html","navigation":[{"items":[{"content":"Gallery","url":"/elements/skia_2024/gallery.html","urlType":"internal"},{"content":"Setup and Installation","url":"/elements/skia_2024/setup.html","urlType":"internal"},{"content":"Design Aspects","url":"/elements/skia_2024/aspects.html","urlType":"internal"},{"content":"Layout","url":"/elements/skia_2024/layout.html","urlType":"internal"}],"root":true,"order":0}]},"elements/master":{"displayVersion":"master","title":"Elements Library","version":"master","name":"elements","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Elements Docs","site-url":"https://www.cycfi.com/","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/elements/index.html","navigation":[{"items":[{"content":"Gallery","url":"/elements/gallery.html","urlType":"internal"},{"content":"Setup and Installation","url":"/elements/setup.html","urlType":"internal"},{"content":"Design Aspects","url":"/elements/aspects.html","urlType":"internal"},{"content":"Layout","url":"/elements/layout.html","urlType":"internal"}],"root":true,"order":0}]}}}})